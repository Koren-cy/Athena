{"path":"7-高等数学/其他/pdf参考资料/linear-guest.pdf","text":"Linear Algebra David Cherney, Tom Denton, Rohit Thomas and Andrew Waldron 2 Edited by Katrina Glaeser and Travis Scrimshaw First Edition. Davis California, 2013. This work is licensed under a Creative Commons Attribution-NonCommercial- ShareAlike 3.0 Unported License. 2 Contents 1 What is Linear Algebra? 9 1.1 Organizing Information . . . . . . . . . . . . . . . . . . . . . . 9 1.2 What are Vectors? . . . . . . . . . . . . . . . . . . . . . . . . 12 1.3 What are Linear Functions? . . . . . . . . . . . . . . . . . . . 15 1.4 So, What is a Matrix? . . . . . . . . . . . . . . . . . . . . . . 20 1.4.1 Matrix Multiplication is Composition of Functions . . . 25 1.4.2 The Matrix Detour . . . . . . . . . . . . . . . . . . . . 26 1.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 30 2 Systems of Linear Equations 37 2.1 Gaussian Elimination . . . . . . . . . . . . . . . . . . . . . . . 37 2.1.1 Augmented Matrix Notation . . . . . . . . . . . . . . . 37 2.1.2 Equivalence and the Act of Solving . . . . . . . . . . . 40 2.1.3 Reduced Row Echelon Form . . . . . . . . . . . . . . . 40 2.1.4 Solution Sets and RREF . . . . . . . . . . . . . . . . . 45 2.2 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 48 2.3 Elementary Row Operations . . . . . . . . . . . . . . . . . . . 52 2.3.1 EROs and Matrices . . . . . . . . . . . . . . . . . . . . 52 2.3.2 Recording EROs in (M |I ) . . . . . . . . . . . . . . . . 54 2.3.3 The Three Elementary Matrices . . . . . . . . . . . . . 56 2.3.4 LU , LDU , and P LDU Factorizations . . . . . . . . . . 58 2.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 61 3 4 2.5 Solution Sets for Systems of Linear Equations . . . . . . . . . 63 2.5.1 The Geometry of Solution Sets: Hyperplanes . . . . . . 64 2.5.2 Particular Solution + Homogeneous Solutions . . . . . 65 2.5.3 Solutions and Linearity . . . . . . . . . . . . . . . . . . 66 2.6 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 68 3 The Simplex Method 71 3.1 Pablo’s Problem . . . . . . . . . . . . . . . . . . . . . . . . . . 71 3.2 Graphical Solutions . . . . . . . . . . . . . . . . . . . . . . . . 73 3.3 Dantzig’s Algorithm . . . . . . . . . . . . . . . . . . . . . . . 75 3.4 Pablo Meets Dantzig . . . . . . . . . . . . . . . . . . . . . . . 78 3.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 80 4 Vectors in Space, n-Vectors 83 4.1 Addition and Scalar Multiplication in Rn . . . . . . . . . . . . 84 4.2 Hyperplanes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85 4.3 Directions and Magnitudes . . . . . . . . . . . . . . . . . . . . 88 4.4 Vectors, Lists and Functions: RS . . . . . . . . . . . . . . . . 94 4.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 97 5 Vector Spaces 101 5.1 Examples of Vector Spaces . . . . . . . . . . . . . . . . . . . . 102 5.1.1 Non-Examples . . . . . . . . . . . . . . . . . . . . . . . 106 5.2 Other Fields . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107 5.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 109 6 Linear Transformations 111 6.1 The Consequence of Linearity . . . . . . . . . . . . . . . . . . 112 6.2 Linear Functions on Hyperplanes . . . . . . . . . . . . . . . . 114 6.3 Linear Diﬀerential Operators . . . . . . . . . . . . . . . . . . . 115 6.4 Bases (Take 1) . . . . . . . . . . . . . . . . . . . . . . . . . . 115 6.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 118 7 Matrices 121 7.1 Linear Transformations and Matrices . . . . . . . . . . . . . . 121 7.1.1 Basis Notation . . . . . . . . . . . . . . . . . . . . . . 121 7.1.2 From Linear Operators to Matrices . . . . . . . . . . . 127 7.2 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 129 4 5 7.3 Properties of Matrices . . . . . . . . . . . . . . . . . . . . . . 133 7.3.1 Associativity and Non-Commutativity . . . . . . . . . 140 7.3.2 Block Matrices . . . . . . . . . . . . . . . . . . . . . . 142 7.3.3 The Algebra of Square Matrices . . . . . . . . . . . . 143 7.3.4 Trace . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145 7.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 146 7.5 Inverse Matrix . . . . . . . . . . . . . . . . . . . . . . . . . . . 150 7.5.1 Three Properties of the Inverse . . . . . . . . . . . . . 150 7.5.2 Finding Inverses (Redux) . . . . . . . . . . . . . . . . . 151 7.5.3 Linear Systems and Inverses . . . . . . . . . . . . . . . 153 7.5.4 Homogeneous Systems . . . . . . . . . . . . . . . . . . 154 7.5.5 Bit Matrices . . . . . . . . . . . . . . . . . . . . . . . . 154 7.6 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 155 7.7 LU Redux . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159 7.7.1 Using LU Decomposition to Solve Linear Systems . . . 160 7.7.2 Finding an LU Decomposition. . . . . . . . . . . . . . 162 7.7.3 Block LDU Decomposition . . . . . . . . . . . . . . . . 165 7.8 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 166 8 Determinants 169 8.1 The Determinant Formula . . . . . . . . . . . . . . . . . . . . 169 8.1.1 Simple Examples . . . . . . . . . . . . . . . . . . . . . 169 8.1.2 Permutations . . . . . . . . . . . . . . . . . . . . . . . 170 8.2 Elementary Matrices and Determinants . . . . . . . . . . . . . 174 8.2.1 Row Swap . . . . . . . . . . . . . . . . . . . . . . . . . 175 8.2.2 Row Multiplication . . . . . . . . . . . . . . . . . . . . 176 8.2.3 Row Addition . . . . . . . . . . . . . . . . . . . . . . . 177 8.2.4 Determinant of Products . . . . . . . . . . . . . . . . . 179 8.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 182 8.4 Properties of the Determinant . . . . . . . . . . . . . . . . . . 186 8.4.1 Determinant of the Inverse . . . . . . . . . . . . . . . . 190 8.4.2 Adjoint of a Matrix . . . . . . . . . . . . . . . . . . . . 190 8.4.3 Application: Volume of a Parallelepiped . . . . . . . . 192 8.5 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 193 9 Subspaces and Spanning Sets 195 9.1 Subspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195 9.2 Building Subspaces . . . . . . . . . . . . . . . . . . . . . . . . 197 5 6 9.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 202 10 Linear Independence 203 10.1 Showing Linear Dependence . . . . . . . . . . . . . . . . . . . 204 10.2 Showing Linear Independence . . . . . . . . . . . . . . . . . . 207 10.3 From Dependent Independent . . . . . . . . . . . . . . . . . . 209 10.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 210 11 Basis and Dimension 213 11.1 Bases in R n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 216 11.2 Matrix of a Linear Transformation (Redux) . . . . . . . . . . 218 11.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 221 12 Eigenvalues and Eigenvectors 225 12.1 Invariant Directions . . . . . . . . . . . . . . . . . . . . . . . . 227 12.2 The Eigenvalue–Eigenvector Equation . . . . . . . . . . . . . . 233 12.3 Eigenspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236 12.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 238 13 Diagonalization 241 13.1 Diagonalizability . . . . . . . . . . . . . . . . . . . . . . . . . 241 13.2 Change of Basis . . . . . . . . . . . . . . . . . . . . . . . . . . 242 13.3 Changing to a Basis of Eigenvectors . . . . . . . . . . . . . . . 246 13.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 248 14 Orthonormal Bases and Complements 253 14.1 Properties of the Standard Basis . . . . . . . . . . . . . . . . . 253 14.2 Orthogonal and Orthonormal Bases . . . . . . . . . . . . . . . 255 14.2.1 Orthonormal Bases and Dot Products . . . . . . . . . . 256 14.3 Relating Orthonormal Bases . . . . . . . . . . . . . . . . . . . 258 14.4 Gram-Schmidt & Orthogonal Complements . . . . . . . . . . 261 14.4.1 The Gram-Schmidt Procedure . . . . . . . . . . . . . . 264 14.5 QR Decomposition . . . . . . . . . . . . . . . . . . . . . . . . 265 14.6 Orthogonal Complements . . . . . . . . . . . . . . . . . . . . 267 14.7 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 272 15 Diagonalizing Symmetric Matrices 277 15.1 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 281 6 7 16 Kernel, Range, Nullity, Rank 285 16.1 Range . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 286 16.2 Image . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 287 16.2.1 One-to-one and Onto . . . . . . . . . . . . . . . . . . 289 16.2.2 Kernel . . . . . . . . . . . . . . . . . . . . . . . . . . . 292 16.3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 297 16.4 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 299 17 Least squares and Singular Values 303 17.1 Projection Matrices . . . . . . . . . . . . . . . . . . . . . . . . 306 17.2 Singular Value Decomposition . . . . . . . . . . . . . . . . . . 308 17.3 Review Problems . . . . . . . . . . . . . . . . . . . . . . . . . 312 A List of Symbols 315 B Fields 317 C Online Resources 319 D Sample First Midterm 321 E Sample Second Midterm 331 F Sample Final Exam 341 G Movie Scripts 367 G.1 What is Linear Algebra? . . . . . . . . . . . . . . . . . . . . . 367 G.2 Systems of Linear Equations . . . . . . . . . . . . . . . . . . . 367 G.3 Vectors in Space n-Vectors . . . . . . . . . . . . . . . . . . . . 377 G.4 Vector Spaces . . . . . . . . . . . . . . . . . . . . . . . . . . . 379 G.5 Linear Transformations . . . . . . . . . . . . . . . . . . . . . . 383 G.6 Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 385 G.7 Determinants . . . . . . . . . . . . . . . . . . . . . . . . . . . 395 G.8 Subspaces and Spanning Sets . . . . . . . . . . . . . . . . . . 403 G.9 Linear Independence . . . . . . . . . . . . . . . . . . . . . . . 404 G.10 Basis and Dimension . . . . . . . . . . . . . . . . . . . . . . . 407 G.11 Eigenvalues and Eigenvectors . . . . . . . . . . . . . . . . . . 409 G.12 Diagonalization . . . . . . . . . . . . . . . . . . . . . . . . . . 415 G.13 Orthonormal Bases and Complements . . . . . . . . . . . . . . 421 7 8 G.14 Diagonalizing Symmetric Matrices . . . . . . . . . . . . . . . . 428 G.15 Kernel, Range, Nullity, Rank . . . . . . . . . . . . . . . . . . . 430 G.16 Least Squares and Singular Values . . . . . . . . . . . . . . . . 432 Index 432 8 1 What is Linear Algebra? Many diﬃcult problems can be handled easily once relevant information is organized in a certain way. This text aims to teach you how to organize in- formation in cases where certain mathematical structures are present. Linear algebra is, in general, the study of those structures. Namely Linear algebra is the study of vectors and linear functions. In broad terms, vectors are things you can add and linear functions are functions of vectors that respect vector addition. The goal of this text is to teach you to organize information about vector spaces in a way that makes problems involving linear functions of many variables easy. (Or at least tractable.) To get a feel for the general idea of organizing information, of vectors, and of linear functions this chapter has brief sections on each. We start here in hopes of putting students in the right mindset for the odyssey that follows; the latter chapters cover the same material at a slower pace. Please be prepared to change the way you think about some familiar mathematical objects and keep a pencil and piece of paper handy! 1.1 Organizing Information Functions of several variables are often presented in one line such as f (x, y) = 3x + 5y . 9 10 What is Linear Algebra? But lets think carefully; what is the left hand side of this equation doing? Functions and equations are diﬀerent mathematical objects so why is the equal sign necessary? A Sophisticated Review of Functions If someone says “Consider the function of two variables 7β − 13b.” we do not quite have all the information we need to determine the relationship between inputs and outputs. Example 1 (Of organizing and reorganizing information) You own stock in 3 companies: Google, N etf lix, and Apple. The value V of your stock portfolio as a function of the number of shares you own sN , sG, sA of these companies is 24sG + 80sA + 35sN . Here is an ill posed question: what is V   1 2 3  ? The column of three numbers is ambiguous! Is it is meant to denote • 1 share of G, 2 shares of N and 3 shares of A? • 1 share of N , 2 shares of G and 3 shares of A? Do we multiply the ﬁrst number of the input by 24 or by 35? No one has speciﬁed an order for the variables, so we do not know how to calculate an output associated with a particular input.1 A diﬀerent notation for V can clear this up; we can denote V itself as an ordered triple of numbers that reminds us what to do to each number from the input. 1Of course we would know how to calculate an output if the input is described in the tedious form such as “1 share of G, 2 shares of N and 3 shares of A”, but that is unacceptably tedious! We want to use ordered triples of numbers to concisely describe inputs. 10 1.1 Organizing Information 11 Denote V by (24 80 35 ) and thus write V  1 2 3   B = (24 80 35)   1 2 3   to remind us to calculate 24(1) + 80(2) + 35(3) = 334 because we chose the order (G A N ) and named that order B so that inputs are interpreted as  sG sA sN   . If we change the order for the variables we should change the notation for V . Denote V by (35 80 24) and thus write V  1 2 3   B′ = (35 80 24 )   1 2 3   to remind us to calculate 35(1) + 80(2) + 24(3) = 264. because we chose the order (N A G ) and named that order B′ so that inputs are interpreted as   sN sA sG   . The subscripts B and B′ on the columns of numbers are just symbols2 reminding us of how to interpret the column of numbers. But the distinction is critical; as shown above V assigns completely diﬀerent numbers to the same columns of numbers with diﬀerent subscripts. There are six diﬀerent ways to order the three companies. Each way will give diﬀerent notation for the same function V , and a diﬀerent way of assigning numbers to columns of three numbers. Thus, it is critical to make clear which ordering is used if the reader is to understand what is written. Doing so is a way of organizing information. 2We were free to choose any symbol to denote these orders. We chose B and B′ because we are hinting at a central idea in the course: choosing a basis. 11 12 What is Linear Algebra? This example is a hint at a much bigger idea central to the text; our choice of order is an example of choosing a basis3. The main lesson of an introductory linear algebra course is this: you have considerable freedom in how you organize information about certain functions, and you can use that freedom to 1. uncover aspects of functions that don’t change with the choice (Ch 12) 2. make calculations maximally easy (Ch 13 and Ch 17) 3. approximate functions of several variables (Ch 17). Unfortunately, because the subject (at least for those learning it) requires seemingly arcane and tedious computations involving large arrays of numbers known as matrices, the key concepts and the wide applicability of linear algebra are easily missed. So we reiterate, Linear algebra is the study of vectors and linear functions. In broad terms, vectors are things you can add and linear functions are functions of vectors that respect vector addition. 1.2 What are Vectors? Here are some examples of things that can be added: Example 2 (Vector Addition) (A) Numbers: Both 3 and 5 are numbers and so is 3 + 5. (B) 3-vectors:   1 1 0   +   0 1 1   =   1 2 1  . 3 Please note that this is an example of choosing a basis, not a statement of the deﬁnition of the technical term “basis”. You can no more learn the deﬁnition of “basis” from this example than learn the deﬁnition of “bird” by seeing a penguin. 12 1.2 What are Vectors? 13 (C) Polynomials: If p(x) = 1 + x − 2x2 + 3x3 and q(x) = x + 3x2 − 3x3 + x4 then their sum p(x) + q(x) is the new polynomial 1 + 2x + x2 + x4. (D) Power series: If f (x) = 1+x+ 1 2! x2+ 1 3! x3+· · · and g(x) = 1−x+ 1 2! x2− 1 3! x3+· · · then f (x) + g(x) = 1 + 1 2! x2 + 1 4! x4 · · · is also a power series. (E) Functions: If f (x) = ex and g(x) = e−x then their sum f (x) + g(x) is the new function 2 cosh x. There are clearly diﬀerent kinds of vectors. Stacks of numbers are not the only things that are vectors, as examples C, D, and E show. Vectors of diﬀerent kinds can not be added; What possible meaning could the following have? ( 9 3 ) + ex In fact, you should think of all ﬁve kinds of vectors above as diﬀerent kinds, and that you should not add vectors that are not of the same kind. On the other hand, any two things of the same kind “can be added”. This is the reason you should now start thinking of all the above objects as vectors! In Chapter 5 we will give the precise rules that vector addition must obey. In the above examples, however, notice that the vector addition rule stems from the rules for adding numbers. When adding the same vector over and over, for example x + x , x + x + x , x + x + x + x , . . . , we will write 2x , 3x , 4x , . . . , respectively. For example 4  1 1 0   =  1 1 0   +   1 1 0   +  1 1 0   +  1 1 0   =   4 4 0   . Deﬁning 4x = x + x + x + x is ﬁne for integer multiples, but does not help us make sense of 1 3x. For the diﬀerent types of vectors above, you can probably 13 14 What is Linear Algebra? guess how to multiply a vector by a scalar. For example 1 3    1 1 0    =    1 3 1 3 0    . A very special vector can be produced from any vector of any kind by scalar multiplying any vector by the number 0. This is called the zero vector and is usually denoted simply 0. This gives ﬁve very diﬀerent kinds of zero from the 5 diﬀerent kinds of vectors in examples A-E above. (A) 0(3) = 0 (The zero number) (B) 0  1 1 0   =  0 0 0   (The zero 3-vector) (C) 0 (1 + x − 2x2 + 3x3) = 0 (The zero polynomial) (D) 0 ( 1 + x− 1 2!x2+ 1 3!x3+ · · · ) = 0+0x+0x2+0x3+· · · (The zero power series) (E) 0 (e x) = 0 (The zero function) In any given situation that you plan to describe using vectors, you need to decide on a way to add and scalar multiply vectors. In summary: Vectors are things you can add and scalar multiply. Examples of kinds of vectors: • numbers • n-vectors • 2nd order polynomials • polynomials • power series • functions with a certain domain 14 1.3 What are Linear Functions? 15 1.3 What are Linear Functions? In calculus classes, the main subject of investigation was the rates of change of functions. In linear algebra, functions will again be the focus of your attention, but functions of a very special type. In precalculus you were perhaps encouraged to think of a function as a machine f into which one may feed a real number. For each input x this machine outputs a single real number f (x). In linear algebra, the functions we study will have vectors (of some type) as both inputs and outputs. We just saw that vectors are objects that can be added or scalar multiplied—a very general notion—so the functions we are going to study will look novel at ﬁrst. So things don’t get too abstract, here are ﬁve questions that can be rephrased in terms of functions of vectors. Example 3 (Questions involving Functions of Vectors in Disguise) (A) What number x satisﬁes 10x = 3? (B) What 3-vector u satisﬁes4   1 1 0   × u =   0 1 1  ? (C) What polynomial p satisﬁes ∫ 1 −1 p(y)dy = 0 and ∫ 1 −1 yp(y)dy = 1? (D) What power series f (x) satisﬁes x d dx f (x) − 2f (x) = 0? 4 The cross product appears in this equation. 15 16 What is Linear Algebra? (E) What number x satisﬁes 4x2 = 1? All of these are of the form (⋆) What vector X satisﬁes f (X) = B? with a function5 f known, a vector B known, and a vector X unknown. The machine needed for part (A) is as in the picture below. x 10x This is just like a function f from calculus that takes in a number x and spits out the number 10x. (You might write f (x) = 10x to indicate this). For part (B), we need something more sophisticated.  x y z     z −z y − x   , The inputs and outputs are both 3-vectors. The output is the cross product of the input with... how about you complete this sentence to make sure you understand. The machine needed for example (C) looks like it has just one input and two outputs; we input a polynomial and get a 2-vector as output. p   ∫ 1 −1 p(y)dy ∫ 1 −1 yp(y)dy   . This example is important because it displays an important feature; the inputs for this function are functions. 5In math terminology, each question is asking for the level set of f corresponding to B. 16 1.3 What are Linear Functions? 17 While this sounds complicated, linear algebra is the study of simple func- tions of vectors; its time to describe the essential characteristics of linear functions. Let’s use the letter L to denote an arbitrary linear function and think again about vector addition and scalar multiplication. Also, suppose that v and u are vectors and c is a number. Since L is a function from vectors to vectors, if we input u into L, the output L(u) will also be some sort of vector. The same goes for L(v). (And remember, our input and output vectors might be something other than stacks of numbers!) Because vectors are things that can be added and scalar multiplied, u + v and cu are also vectors, and so they can be used as inputs. The essential characteristic of linear functions is what can be said about L(u + v) and L(cu) in terms of L(u) and L(v). Before we tell you this essential characteristic, ruminate on this picture. The “blob” on the left represents all the vectors that you are allowed to input into the function L, the blob on the right denotes the possible outputs, and the lines tell you which inputs are turned into which outputs. 6 A full pictorial description of the functions would require all inputs and outputs 6The domain, codomain, and rule of correspondence of the function are represented by the left blog, right blob, and arrows, respectively. 17 18 What is Linear Algebra? and lines to be explicitly drawn, but we are being diagrammatic; we only drew four of each. Now think about adding L(u) and L(v) to get yet another vector L(u) + L(v) or of multiplying L(u) by c to obtain the vector cL(u), and placing both on the right blob of the picture above. But wait! Are you certain that these are possible outputs!? Here’s the answer The key to the whole class, from which everything else follows: 1. Additivity: L(u + v) = L(u) + L(v) . 2. Homogeneity: L(cu) = cL(u) . Most functions of vectors do not obey this requirement. 7 At its heart, linear algebra is the study of functions that do. Notice that the additivity requirement says that the function L respects vector addition: it does not matter if you ﬁrst add u and v and then input their sum into L, or ﬁrst input u and v into L separately and then add the outputs. The same holds for scalar multiplication–try writing out the scalar multiplication version of the italicized sentence. When a function of vectors obeys the additivity and homogeneity properties we say that it is linear (this is the “linear” of linear algebra). Together, additivity and homogeneity are called linearity. Are there other, equivalent, names for linear functions? yes. 7E.g.: If f (x) = x2 then f (1 + 1) = 4 ̸= f (1) + f (1) = 2. Try any other function you can think of! 18 1.3 What are Linear Functions? 19 Function = Transformation = Operator And now for a hint at the power of linear algebra. The questions in examples (A-D) can all be restated as Lv = w where v is an unknown, w a known vector, and L is a known linear transfor- mation. To check that this is true, one needs to know the rules for adding vectors (both inputs and outputs) and then check linearity of L. Solving the equation Lv = w often amounts to solving systems of linear equations, the skill you will learn in Chapter 2. A great example is the derivative operator. Example 4 (The derivative operator is linear) For any two functions f (x), g(x) and any number c, in calculus you probably learnt that the derivative operator satisﬁes 1. d dx (cf ) = c d dx f , 2. d dx (f + g) = d dx f + d dx g. If we view functions as vectors with addition given by addition of functions and with scalar multiplication given by multiplication of functions by constants, then these familiar properties of derivatives are just the linearity property of linear maps. Before introducing matrices, notice that for linear maps L we will often write simply Lu instead of L(u). This is because the linearity property of a 19 20 What is Linear Algebra? linear transformation L means that L(u) can be thought of as multiplying the vector u by the linear operator L. For example, the linearity of L implies that if u, v are vectors and c, d are numbers, then L(cu + dv) = cLu + dLv , which feels a lot like the regular rules of algebra for numbers. Notice though, that “uL” makes no sense here. Remark A sum of multiples of vectors cu + dv is called a linear combination of u and v. 1.4 So, What is a Matrix? Matrices are linear functions of a certain kind. They appear almost ubiqui- tously in linear algebra because– and this is the central lesson of introductory linear algebra courses– Matrices are the result of organizing information related to linear functions. This idea will take some time to develop, but we provided an elementary example in Section 1.1. A good starting place to learn about matrices is by studying systems of linear equations. Example 5 A room contains x bags and y boxes of fruit. 20 1.4 So, What is a Matrix? 21 Each bag contains 2 apples and 4 bananas and each box contains 6 apples and 8 bananas. There are 20 apples and 28 bananas in the room. Find x and y. The values are the numbers x and y that simultaneously make both of the following equations true: 2 x + 6 y = 20 4 x + 8 y = 28 . Here we have an example of a System of Linear Equations. 8 It’s a collection of equations in which variables are multiplied by constants and summed, and no variables are multiplied together: There are no powers of variables (like x2 or y5), non-integer or negative powers of variables (like y1/7 or x−3), and no places where variables are multiplied together (like xy). Reading homework: problem 1 Information about the fruity contents of the room can be stored two ways: (i) In terms of the number of apples and bananas. (ii) In terms of the number of bags and boxes. Intuitively, knowing the information in one form allows you to ﬁgure out the information in the other form. Going from (ii) to (i) is easy: If you knew there were 3 bags and 2 boxes it would be easy to calculate the number of apples and bananas, and doing so would have the feel of multiplication (containers times fruit per container). In the example above we are required to go the other direction, from (i) to (ii). This feels like the opposite of multiplication, i.e., division. Matrix notation will make clear what we are “multiplying” and “dividing” by. The goal of Chapter 2 is to eﬃciently solve systems of linear equations. Partly, this is just a matter of ﬁnding a better notation, but one that hints at a deeper underlying mathematical structure. For that, we need rules for adding and scalar multiplying 2-vectors; c (x y ) := ( cx cy ) and ( x y ) + ( x′ y′ ) := ( x + x′ y + y′ ) . 8Perhaps you can see that both lines are of the form Lu = v with u = ( x y ) an unknown, v = 20 in the ﬁrst line, v = 28 in the second line, and L diﬀerent functions in each line? We give the typical less sophisticated description in the text above. 21 22 What is Linear Algebra? Writing our fruity equations as an equality between 2-vectors and then using these rules we have: 2 x + 6 y = 20 4 x + 8 y = 28 } ⇐⇒ (2x + 6y 4x + 8y ) = (20 28 ) ⇐⇒ x ( 2 4 )+y ( 6 8 ) = ( 20 28 ) . Now we introduce a function which takes in 2-vectors9 and gives out 2-vectors. We denote it by an array of numbers called a matrix . The function ( 2 6 4 8 ) is deﬁned by (2 6 4 8 ) ( x y ) := x ( 2 4 ) + y ( 6 8 ) . A similar deﬁnition applies to matrices with diﬀerent numbers and sizes. Example 6 (A bigger matrix)   1 0 3 4 5 0 3 4 −1 6 2 5       x y z w     := x   1 5 −1   + y  0 0 6   + z  3 3 2   + w   4 4 5   . Viewed as a machine that inputs and outputs 2-vectors, our 2 × 2 matrix does the following: ( x y ) ( 2x + 6y 4x + 8y ) . Our fruity problem is now rather concise. Example 7 (This time in purely mathematical language): What vector ( x y ) satisﬁes (2 6 4 8 ) ( x y ) = ( 20 28 ) ? 9To be clear, we will use the term 2-vector to refer to stacks of two numbers such as ( 7 11 ). If we wanted to refer to the vectors x2 + 1 and x3 − 1 (recall that polynomials are vectors) we would say “consider the two vectors x3 − 1 and x2 + 1”. We apologize through giggles for the possibility of the phrase “two 2-vectors.” 22 1.4 So, What is a Matrix? 23 This is of the same Lv = w form as our opening examples. The matrix encodes fruit per container. The equation is roughly fruit per container times number of containers equals fruit. To solve for number of containers we want to somehow “divide” by the matrix. Another way to think about the above example is to remember the rule for multiplying a matrix times a vector. If you have forgotten this, you can actually guess a good rule by making sure the matrix equation is the same as the system of linear equations. This would require that ( 2 6 4 8 ) ( x y ) := ( 2x + 6y 4x + 8y ) Indeed this is an example of the general rule that you have probably seen before (p q r s ) ( x y ) := (px + qy rx + sy ) = x ( p r ) + y ( q s ) . Notice, that the second way of writing the output on the right hand side of this equation is very useful because it tells us what all possible outputs a matrix times a vector look like – they are just sums of the columns of the matrix multiplied by scalars. The set of all possible outputs of a matrix times a vector is called the column space (it is also the image of the linear function deﬁned by the matrix). Reading homework: problem 2 Multiplication by a matrix is an example of a Linear Function, because it takes one vector and turns it into another in a “linear” way. Of course, we can have much larger matrices if our system has more variables. Matrices in Space! Thus matrices can be viewed as linear functions. The statement of this for the matrix in our fruity example is as follows. 1. (2 6 4 8 ) λ (x y ) = λ (2 6 4 8 ) ( x y ) and 23 24 What is Linear Algebra? 2. (2 6 4 8 ) [( x y ) + ( x′ y′ )] = ( 2 6 4 8 ) ( x y ) + (2 6 4 8 ) ( x′ y′ ) . These equalities can be veriﬁed using the rules we introduced so far. Example 8 Verify that (2 6 4 8 ) is a linear operator. The matrix-function is homogeneous if the expressions on the left hand side and right hand side of the ﬁrst equation are indeed equal. ( 2 6 4 8 ) [ λ ( a b )] = ( 2 6 4 8 ) ( λa λb ) = λa ( 2 4 ) + λb ( 6 8 ) = ( 2λa 4λa ) + (6bc 8bc ) = ( 2λa + 6λb 4λa + 8λb ) while λ (2 6 4 8 ) ( a b ) = c [ a ( 2 4 ) + b (6 8 )] = λ [( 2a 4a ) + ( 6b 8b )] = λ (2a + 6b 4a + 8b ) = ( 2λa + 6λb 4λa + 8λb ) . The underlined expressions are identical, so the matrix is homogeneous. The matrix-function is additive if the left and right side of the second equation are indeed equal. (2 6 4 8 ) [( a b ) + (c d )] = ( 2 6 4 8 ) ( a + c b + d ) = (a + c) ( 2 4 ) + (b + d) (6 8 ) = ( 2(a + c) 4(a + c) ) + ( 6(b + d) 8(b + d) ) = (2a + 2c + 6b + 6d 4a + 4c + 8b + 8d ) which we need to compare to (2 6 4 8 ) ( a b ) + (2 6 4 8 ) (c d ) = a ( 2 4 ) + b ( 6 8 ) + c ( 2 4 ) + d (6 8 ) = (2a 4a ) + (6b 8b ) + ( 2c 4c ) + ( 6d 8d ) = ( 2a + 2c + 6b + 6d 4a + 4c + 8b + 8d ) . Thus multiplication by a matrix is additive and homogeneous, and so it is, by deﬁnition, linear. 24 1.4 So, What is a Matrix? 25 We have come full circle; matrices are just examples of the kinds of linear operators that appear in algebra problems like those in section 1.3. Any equation of the form M v = w with M a matrix, and v, w n-vectors is called a matrix equation. Chapter 2 is about eﬃciently solving systems of linear equations, or equivalently matrix equations. 1.4.1 Matrix Multiplication is Composition of Functions What would happen if we placed two of our expensive machines end to end? ? The output of the ﬁrst machine would be fed into the second. ( x y ) ( 2x + 6y 4x + 8y ) ( 1.(2x + 6y) + 2.(4x + 8y) 0.(2x + 6y) + 1.(4x + 8y) ) = (10x + 22y 4x + 8y ) Notice that the same ﬁnal result could be achieved with a single machine: ( x y ) (10x + 22y 4x + 8y ) . There is a simple matrix notation for this called matrix multiplication (1 2 0 1 ) ( 2 6 4 8 ) = ( 10 22 4 8 ) . Try review problem 6 to learn more about matrix multiplication. In the language 10 of functions, if f : U −→ V and g : V −→ W 10The notation h : A → B means that h is a function with domain A and codomain B. See the webwork background set3 if you are unfamiliar with this notation or these terms. 25 26 What is Linear Algebra? the new function obtained by plugging the outputs if f into g is called g ◦ f , g ◦ f : U −→ W where (g ◦ f )(u) = g(f (u)) . This is called the composition of functions. Matrix multiplication is the tool required for computing the composition of linear functions. 1.4.2 The Matrix Detour Linear algebra is about linear functions, not matrices. The following presen- tation is meant to get you thinking about this idea constantly throughout the course. Matrices only get involved in linear algebra when certain notational choices are made. To exemplify, lets look at the derivative operator again. Example 9 of how matrices come into linear algebra. Consider the equation ( d dx + 2) f = x + 1 where f is unknown (the place where solutions should go) and the linear diﬀerential operator d dx + 2 is understood to take in quadratic functions (of the form ax2 + bx + c) and give out other quadratic functions. Let’s simplify the way we denote the quadratic functions; we will denote ax 2 + bx + c as   a b c   B . The subscript B serves to remind us of our particular notational convention; we will compare to another notational convention later. With the convention B we can say ( d dx + 2)   a b c   B = ( d dx + 2) (ax 2 + bx + c) 26 1.4 So, What is a Matrix? 27 = (2ax + b) + (2ax 2 + 2bx + 2c) = 2ax 2 + (2a + 2b)x + (b + 2c) =   2a 2a + 2b b + 2c   B =    2 0 0 2 2 0 0 1 2    a b c     B . That is, our notational convention for quadratic functions has induced a notation for the diﬀerential operator d dx + 2 as a matrix. We can use this notation to change the way that the following two equations say exactly the same thing. ( d dx + 2) f = x + 1 ⇔     2 0 0 2 2 0 0 1 2    a b c     B =   0 1 1   B . Our notational convention has served as an organizing principle to yield the system of equations 2a = 0 2a + 2b = 1 b + 2c = 1 with solution   0 1 2 1 4   B , where the subscript B is used to remind us that this stack of numbers encodes the vector 1 2 x+ 1 4 , which is indeed the solution to our equation since, substituting for f yields the true statement ( d dx + 2) ( 1 2 x + 1 4 ) = x + 1. It would be nice to have a systematic way to rewrite any linear equation as an equivalent matrix equation. It will be a little while before we can learn to organize information in a way generalizable to all linear equations, but keep this example in mind throughout the course. The general idea is presented in the picture below; sometimes a linear equation is too hard to solve as is, but by organizing information and refor- mulating the equation as a matrix equation the process of ﬁnding solutions becomes tractable. 27 28 What is Linear Algebra? A simple example with the knowns (L and V are d dx and 3, respectively) is shown below, although the detour is unnecessary in this case since you know how to anti-diﬀerentiate. To drive home the point that we are not studying matrices but rather lin- ear functions, and that those linear functions can be represented as matrices under certain notational conventions, consider how changeable the notational conventions are. 28 1.4 So, What is a Matrix? 29 Example 10 of how a diﬀerent matrix comes into the same linear algebra problem. Another possible notational convention is to denote a + bx + cx 2 as   a b c   B′ . With this alternative notation ( d dx + 2)   a b c   B′ = ( d dx + 2) (a + bx + cx 2) = (b + 2cx) + (2a + 2bx + 2cx 2) = (2a + b) + (2b + 2c)x + 2cx 2 =   2a + b 2b + 2c 2c   B′ =     2 1 0 0 2 2 0 0 2     a b c     B′ . Notice that we have obtained a diﬀerent matrix for the same linear function. The equation we started with ( d dx + 2) f = x + 1 ⇔    2 1 0 0 2 2 0 0 2     a b c     B′ =   1 1 0   B′ ⇔ 2a + b = 1 2b + 2c = 1 2c = 0 has the solution    1 4 1 2 0   . Notice that we have obtained a diﬀerent 3-vector for the same vector, since in the notational convention B′ this 3-vector represents 1 4 + 1 2 x. One linear function can be represented (denoted) by a huge variety of matrices. The representation only depends on how vectors are denoted as n-vectors. 29 30 What is Linear Algebra? 1.5 Review Problems You probably have already noticed that understanding sets, functions and basic logical operations is a must to do well in linear algebra. Brush up on these skills by trying these background webwork problems: Logic 1 Sets 2 Functions 3 Equivalence Relations 4 Proofs 5 Each chapter also has reading and skills WeBWorK problems: Webwork: Reading problems 1 , 2 Probably you will spend most of your time on the following review questions: 1. Problems A, B, and C of example 3 can all be written as Lv = w where L : V −→ W , (read this as L maps the set of vectors V to the set of vectors W ). For each case write down the sets V and W where the vectors v and w come from. 2. Torque is a measure of “rotational force”. It is a vector whose direction is the (preferred) axis of rotation. Upon applying a force F on an object at point r the torque τ is the cross product r × F = τ : 30 1.5 Review Problems 31 Remember that the cross product of two 3-vectors is given by  x y z   ×  x′ y′ z′   :=   yz′ − zy′ zx′ − xz′ xy′ − yx ′   . Indeed, 3-vectors are special, usually vectors an only be added, not multiplied. Lets ﬁnd the force F (a vector) one must apply to a wrench lying along the vector r =  1 1 0   ft, to produce a torque  0 0 1  ft lb: (a) Find a solution by writing out this equation with F =  a b c  . (Hint: Guess and check that a solution with a = 0 exists). (b) Add  1 1 0   to your solution and check that the result is a solution. (c) Give a physics explanation of why there can be two solutions, and argue that there are, in fact, inﬁnitely many solutions. (d) Set up a system of three linear equations with the three compo- nents of F as the variables which describes this situation. What happens if you try to solve these equations by substitution? 3. The function P (t) gives gas prices (in units of dollars per gallon) as a function of t the year (in A.D. or C.E.), and g(t) is the gas consumption rate measured in gallons per year by a driver as a function of their age. The function g is certainly diﬀerent for diﬀerent people. Assuming a lifetime is 100 years, what function gives the total amount spent on gas during the lifetime of an individual born in an arbitrary year t? Is the operator that maps g to this function linear? 4. The diﬀerential equation (DE) d dt f = 2f 31 32 What is Linear Algebra? says that the rate of change of f is proportional to f . It describes exponential growth because the exponential function f (t) = f (0)e 2t satisﬁes the DE for any number f (0). The number 2 in the DE is called the constant of proportionality. A similar DE d dtf = 2 t f has a time-dependent “constant of proportionality”. (a) Do you think that the second DE describes exponential growth? (b) Write both DEs in the form Df = 0 with D a linear operator. 5. Pablo is a nutritionist who knows that oranges always have twice as much sugar as apples. When considering the sugar intake of schoolchil- dren eating a barrel of fruit, he represents the barrel like so: sugar fruit (s, f ) Find a linear operator relating Pablo’s representation to the “everyday” representation in terms of the number of apples and number of oranges. Write your answer as a matrix. Hint: Let λ represent the amount of sugar in each apple. Hint 32 1.5 Review Problems 33 6. Matrix Multiplication: Let M and N be matrices M = ( a b c d ) and N = (e f g h ) , and v the vector v = ( x y ) . If we ﬁrst apply N and then M to v we obtain the vector M N v. (a) Show that the composition of matrices M N is also a linear oper- ator. (b) Write out the components of the matrix product M N in terms of the components of M and the components of N . Hint: use the general rule for multiplying a 2-vector by a 2×2 matrix. (c) Try to answer the following common question, “Is there any sense in which these rules for matrix multiplication are unavoidable, or are they just a notation that could be replaced by some other notation?” (d) Generalize your multiplication rule to 3 × 3 matrices. 7. Diagonal matrices: A matrix M can be thought of as an array of num- bers m i j, known as matrix entries, or matrix components, where i and j index row and column numbers, respectively. Let M = (1 2 3 4 ) = ( mi j) . Compute m1 1, m 1 2, m 2 1 and m 2 2. The matrix entries m i i whose row and column numbers are the same are called the diagonal of M . Matrix entries m i j with i ̸= j are called oﬀ-diagonal. How many diagonal entries does an n × n matrix have? How many oﬀ-diagonal entries does an n × n matrix have? If all the oﬀ-diagonal entries of a matrix vanish, we say that the matrix is diagonal. Let D = ( λ 0 0 µ ) and D′ = (λ ′ 0 0 µ′ ) . 33 34 What is Linear Algebra? Are these matrices diagonal and why? Use the rule you found in prob- lem 6 to compute the matrix products DD′ and D′D. What do you observe? Do you think the same property holds for arbitrary matrices? What about products where only one of the matrices is diagonal? (p.s. Diagonal matrices play a special role in in the study of matrices in linear algebra. Keep an eye out for this special role.) 8. Find the linear operator that takes in vectors from n-space and gives out vectors from n-space in such a way that (a) whatever you put in, you get exactly the same thing out as what you put in. Show that it is unique. Can you write this operator as a matrix? (b) whatever you put in, you get exactly the same thing out as when you put something else in. Show that it is unique. Can you write this operator as a matrix? Hint: To show something is unique, it is usually best to begin by pre- tending that it isn’t, and then showing that this leads to a nonsensical conclusion. In mathspeak–proof by contradiction. 9. Consider the set S = {∗, ⋆, #}. It contains just 3 elements, and has no ordering; {∗, ⋆, #} = {#, ⋆, ∗} etc. (In fact the same is true for {1, 2, 3} = {2, 3, 1} etc, although we could make this an ordered set using 3 > 2 > 1.) (i) Invent a function with domain {∗, ⋆, #} and codomain R. (Re- member that the domain of a function is the set of all its allowed inputs and the codomain (or target space) is the set where the outputs can live. A function is speciﬁed by assigning exactly one codomain element to each element of the domain.) (ii) Choose an ordering on {∗, ⋆, #}, and then use it to write your function from part (i) as a triple of numbers. (iii) Choose a new ordering on {∗, ⋆, #} and then write your function from part (i) as a triple of numbers. 34 1.5 Review Problems 35 (iv) Your answers for parts (ii) and (iii) are diﬀerent yet represent the same function – explain! 35 36 What is Linear Algebra? 36 2 Systems of Linear Equations 2.1 Gaussian Elimination Systems of linear equations can be written as matrix equations. Now you will learn an eﬃcient algorithm for (maximally) simplifying a system of linear equations (or a matrix equation) – Gaussian elimination. 2.1.1 Augmented Matrix Notation Eﬃciency demands a new notation, called an augmented matrix , which we introduce via examples: The linear system { x + y = 27 2x − y = 0 , is denoted by the augmented matrix ( 1 1 27 2 −1 0 ) . This notation is simpler than the matrix one, ( 1 1 2 −1 ) ( x y ) = ( 27 0 ) , although all three of the above denote the same thing. 37 38 Systems of Linear Equations Augmented Matrix Notation Another interesting rewriting is x ( 1 2 ) + y ( 1 −1 ) = ( 27 0 ) . This tells us that we are trying to ﬁnd the combination of the vectors ( 1 2 ) and ( 1 −1 ) adds up to (27 0 ) ; the answer is “clearly” 9 ( 1 2 ) + 18 ( 1 −1 ) . Here is a larger example. The system 1x + 3y + 2z + 0w = 9 6x + 2y + 0z − 2w = 0 −1x + 0y + 1z + 1w = 3 , is denoted by the augmented matrix   1 3 2 0 9 6 2 0 −2 0 −1 0 1 1 3   , which is equivalent to the matrix equation   1 3 2 0 6 2 0 −2 −1 0 1 1       x y z w     =  9 0 3   . Again, we are trying to ﬁnd which combination of the columns of the matrix adds up to the vector on the right hand side. For the the general case of r linear equations in k unknowns, the number of equations is the number of rows r in the augmented matrix, and the number of columns k in the matrix left of the vertical line is the number of unknowns, giving an augmented matrix of the form       a1 1 a1 2 · · · a1 k b1 a2 1 a2 2 · · · a2 k b2 ... ... ... ... ar 1 ar 2 · · · ar k br       . 38 2.1 Gaussian Elimination 39 Entries left of the divide carry two indices; subscripts denote column number and superscripts row number. We emphasize, the superscripts here do not denote exponents. Make sure you can write out the system of equations and the associated matrix equation for any augmented matrix. Reading homework: problem 1 We now have three ways of writing the same question. Let’s put them side by side as we solve the system by strategically adding and subtracting equations. We will not tell you the motivation for this particular series of steps yet, but let you develop some intuition ﬁrst. Example 11 (How matrix equations and augmented matrices change in elimination) x + y = 27 2x − y = 0 } ⇔ (1 1 2 −1 ) ( x y ) = ( 27 0 ) ⇔ (1 1 27 2 −1 0 ) . With the ﬁrst equation replaced by the sum of the two equations this becomes 3x + 0 = 27 2x − y = 0 } ⇔ (3 0 2 −1 ) ( x y ) = ( 27 0 ) ⇔ (3 0 27 2 −1 0 ) . Let the new ﬁrst equation be the old ﬁrst equation divided by 3: x + 0 = 9 2x − y = 0 } ⇔ ( 1 0 2 −1 ) ( x y ) = (9 0 ) ⇔ (1 0 9 2 −1 0 ) . Replace the second equation by the second equation minus two times the ﬁrst equation: x + 0 = 9 0 − y = −18 } ⇔ ( 1 0 0 −1 ) ( x y ) = ( 9 −18 ) ⇔ ( 1 0 9 0 −1 −18 ) . Let the new second equation be the old second equation divided by -1: x + 0 = 9 0 + y = 18 } ⇔ ( 1 0 0 1 ) ( x y ) = ( 9 18 ) ⇔ ( 1 0 9 0 1 18 ) . Did you see what the strategy was? To eliminate y from the ﬁrst equation and then eliminate x from the second. The result was the solution to the system. Here is the big idea: Everywhere in the instructions above we can replace the word “equation” with the word “row” and interpret them as telling us what to do with the augmented matrix instead of the system of equations. Performed systemically, the result is the Gaussian elimination algorithm. 39 40 Systems of Linear Equations 2.1.2 Equivalence and the Act of Solving We now introduce the symbol ∼ which is called “tilde” but should be read as “is (row) equivalent to” because at each step the augmented matrix changes by an operation on its rows but its solutions do not. For example, we found above that ( 1 1 27 2 −1 0 ) ∼ ( 1 0 9 2 −1 0 ) ∼ ( 1 0 9 0 1 18 ) . The last of these augmented matrices is our favorite! Equivalence Example Setting up a string of equivalences like this is a means of solving a system of linear equations. This is the main idea of section 2.1.3. This next example hints at the main trick: Example 12 (Using Gaussian elimination to solve a system of linear equations) x + y = 5 x + 2y = 8 } ⇔ ( 1 1 5 1 2 8 ) ∼ ( 1 1 5 0 1 3 ) ∼ ( 1 0 2 0 1 3 ) ⇔ { x + 0 = 2 0 + y = 3 Note that in going from the ﬁrst to second augmented matrix, we used the top left 1 to make the bottom left entry zero. For this reason we call the top left entry a pivot. Similarly, to get from the second to third augmented matrix, the bottom right entry (before the divide) was used to make the top right one vanish; so the bottom right entry is also called a pivot. This name pivot is used to indicate the matrix entry used to “zero out” the other entries in its column; the pivot is the number used to eliminate another number in its column. 2.1.3 Reduced Row Echelon Form For a system of two linear equations, the goal of Gaussian elimination is to convert the part of the augmented matrix left of the dividing line into the matrix I = (1 0 0 1 ) , 40 2.1 Gaussian Elimination 41 called the Identity Matrix , since this would give the simple statement of a solution x = a, y = b. The same goes for larger systems of equations for which the identity matrix I has 1’s along its diagonal and all oﬀ-diagonal entries vanish: I =      1 0 · · · 0 0 1 0 ... . . . ... 0 0 · · · 1      Reading homework: problem 2 For many systems, it is not possible to reach the identity in the augmented matrix via Gaussian elimination. In any case, a certain version of the matrix that has the maximum number of components eliminated is said to be the Row Reduced Echelon Form (RREF). Example 13 (Redundant equations) x + y = 2 2x + 2y = 4 } ⇔ ( 1 1 2 2 2 4 ) ∼ ( 1 1 2 0 0 0 ) ⇔ { x + y = 2 0 + 0 = 0 This example demonstrates if one equation is a multiple of the other the identity matrix can not be a reached. This is because the ﬁrst step in elimination will make the second row a row of zeros. Notice that solutions still exists (1, 1) is a solution. The last augmented matrix here is in RREF; no more than two components can be eliminated. Example 14 (Inconsistent equations) x + y = 2 2x + 2y = 5 } ⇔ ( 1 1 2 2 2 5 ) ∼ ( 1 1 2 0 0 1 ) ⇔ { x + y = 2 0 + 0 = 1 This system of equation has a solution if there exists two numbers x, and y such that 0 + 0 = 1. That is a tricky way of saying there are no solutions. The last form of the augmented matrix here is the RREF. 41 42 Systems of Linear Equations Example 15 (Silly order of equations) A robot might make this mistake: 0x + y = −2 x + y = 7 } ⇔ (0 1 −2 1 1 7 ) ∼ · · · , and then give up because the the upper left slot can not function as a pivot since the 0 that lives there can not be used to eliminate the zero below it. Of course, the right thing to do is to change the order of the equations before starting x + y = 7 0x + y = −2 } ⇔ (1 1 7 0 1 −2 ) ∼ ( 1 0 9 0 1 −2 ) ⇔ { x + 0 = 9 0 + y = −2 . The third augmented matrix above is the RREF of the ﬁrst and second. That is to say, you can swap rows on your way to RREF. For larger systems of equations redundancy and inconsistency are the ob- structions to obtaining the identity matrix, and hence to a simple statement of a solution in the form x = a, y = b, . . . . What can we do to maximally simplify a system of equations in general? We need to perform operations that simplify our system without changing its solutions. Because, exchanging the order of equations, multiplying one equation by a non-zero constant or adding equations does not change the system’s solutions, we are lead to three operations: • (Row Swap) Exchange any two rows. • (Scalar Multiplication) Multiply any row by a non-zero constant. • (Row Addition) Add one row to another row. These are called Elementary Row Operations, or EROs for short, and are studied in detail in section 2.3. Suppose now we have a general augmented matrix for which the ﬁrst entry in the ﬁrst row does not vanish. Then, using just the three EROs, we could1 then perform the following. 1This is a “brute force” algorithm; there will often be more eﬃcient ways to get to RREF. 42 2.1 Gaussian Elimination 43 Algorithm For Obtaining RREF: • Make the leftmost nonzero entry in the top row 1 by multiplication. • Then use that 1 as a pivot to eliminate everything below it. • Then go to the next row and make the leftmost nonzero entry 1. • Use that 1 as a pivot to eliminate everything below and above it! • Go to the next row and make the leftmost nonzero entry 1... etc In the case that the ﬁrst entry of the ﬁrst row is zero, we may ﬁrst interchange the ﬁrst row with another row whose ﬁrst entry is non-vanishing and then perform the above algorithm. If the entire ﬁrst column vanishes, we may still apply the algorithm on the remaining columns. Here is a video (with special eﬀects!) of a hand performing the algorithm by hand. When it is done, you should try doing what it does. Beginner Elimination This algorithm and its variations is known as Gaussian elimination. The endpoint of the algorithm is an augmented matrix of the form                1 ∗ 0 ∗ 0 · · · 0 ∗ b1 0 0 1 ∗ 0 · · · 0 ∗ b2 0 0 0 0 1 · · · 0 ∗ b3 ... ... ... ... ... ... 0 0 0 0 0 · · · 1 ∗ bk 0 0 0 0 0 · · · 0 0 bk+1 ... ... ... ... ... ... ... ... 0 0 0 0 0 · · · 0 0 br                . This is called Reduced Row Echelon Form (RREF). The asterisks denote the possibility of arbitrary numbers (e.g., the second 1 in the top line of example 13). Learning to perform this algorithm by hand is the ﬁrst step to learning linear algebra; it will be the primary means of computation for this course. You need to learn it well. So start practicing as soon as you can, and practice often. 43 44 Systems of Linear Equations The following properties deﬁne RREF: 1. In every row the left most non-zero entry is 1 (and is called a pivot). 2. The pivot of any given row is always to the right of the pivot of the row above it. 3. The pivot is the only non-zero entry in its column. Example 16 (Augmented matrix in RREF)     1 0 7 0 0 1 3 0 0 0 0 1 0 0 0 0     Example 17 (Augmented matrix NOT in RREF)     1 0 3 0 0 0 2 0 0 1 0 1 0 0 0 1     Actually, this NON-example breaks all three of the rules! The reason we need the asterisks in the general form of RREF is that not every column need have a pivot, as demonstrated in examples 13 and 16. Here is an example where multiple columns have no pivot: Example 18 (Consecutive columns with no pivot in RREF) x + y + z + 0w = 2 2x + 2y + 2z + 2w = 4 } ⇔ (1 1 1 0 2 2 2 2 1 4 ) ∼ ( 1 1 1 0 2 0 0 0 1 0 ) ⇔ { x + y + z = 2 w = 0 . Note that there was no hope of reaching the identity matrix, because of the shape of the augmented matrix we started with. With some practice, elimination can go quickly. Here is an expert showing you some tricks. If you can’t follow him now then come back when you have some more experience and watch again. You are going to need to get really good at this! 44 2.1 Gaussian Elimination 45 Advanced Elimination It is important that you are able to convert RREF back into a system of equations. The ﬁrst thing you might notice is that if any of the numbers bk+1, . . . , br in 2.1.3 are non-zero then the system of equations is inconsistent and has no solutions. Our next task is to extract all possible solutions from an RREF augmented matrix. 2.1.4 Solution Sets and RREF RREF is a maximally simpliﬁed version of the original system of equations in the following sense: • As many coeﬃcients of the variables as possible are 0. • As many coeﬃcients of the variables as possible are 1. It is easier to read oﬀ solutions from the maximally simpliﬁed equations than from the original equations, even when there are inﬁnitely many solutions. Example 19 (Standard approach from a system of equations to the solution set) x + y + 5w = 1 y + 2w = 6 z + 4w = 8    ⇔  1 1 0 5 1 0 1 0 2 6 0 0 1 4 8   ∼   1 0 0 3 −5 0 1 0 2 6 0 0 1 4 8   ⇔    x + 3w = −5 y + 2w = 6 z + 4w = 8    ⇔    x = −5 − 3w y = 6 − 2w z = 8 − 4w w = w    ⇔      x y z w      =      −5 6 8 0      + w      −3 −2 −4 1      . There is one solution for each value of w, so the solution set is         −5 6 8 0      + α      −3 −2 −4 1      : α ∈ R    . 45 46 Systems of Linear Equations Here is a verbal description of the preceeding example of the standard ap- proach. We say that x, y, and z are pivot variables because they appeared with a pivot coeﬃcient in RREF. Since w never appears with a pivot co- eﬃcient, it is not a pivot variable. In the second line we put all the pivot variables on one side and all the non-pivot variables on the other side and added the trivial equation w = w to obtain a system that allowed us to easily read oﬀ solutions. The Standard Approach To Solution Sets 1. Write the augmented matrix. 2. Perform EROs to reach RREF. 3. Express the pivot variables in terms of the non-pivot variables. There are always exactly enough non-pivot variables to index your solutions. In any approach, the variables which are not expressed in terms of the other variables are called free variables. The standard approach is to use the non- pivot variables as free variables. Non-standard approach: solve for w in terms of z and substitute into the other equations. You now have an expression for each component in terms of z. But why pick z instead of y or x? (or x + y?) The standard approach not only feels natural, but is canonical, meaning that everyone will get the same RREF and hence choose the same variables to be free. However, it is important to remember that so long as their set of solutions is the same, any two choices of free variables is ﬁne. (You might think of this as the diﬀerence between using Google Maps TM or MapquestTM; although their maps may look diﬀerent, the place ⟨home sic⟩ they are describing is the same!) When you see an RREF augmented matrix with two columns that have no pivot, you know there will be two free variables. Example 20 (Standard approach, multiple free variables) 46 2.1 Gaussian Elimination 47     1 0 7 0 4 0 1 3 4 1 0 0 0 0 0 0 0 0 0 0     ⇔ { x + 7z = 4 y + 3z+4w = 1 } ⇔    x = 4 − 7z y = 1 − 3z − 4w z = z w = w    ⇔     x y z w     =     4 1 0 0     + z     −7 −3 1 0     + w     0 −4 0 1     so the solution set is        4 1 0 0     + z     −7 −3 1 0     + w     0 −4 0 1     : z, w ∈ R    . From RREF to a Solution Set You can imagine having three, four, or ﬁfty-six non-pivot columns and the same number of free variables indexing your solutions set. In general a solution set to a system of equations with n free variables will be of the form {xP + µ1xH 1 + µ2xH 2 + · · · + µnxH n : µ1, . . . , µn ∈ R}. The parts of these solutions play special roles in the associated matrix equation. This will come up again and again long after we complete this discussion of basic calculation methods, so we will use the general language of linear algebra to give names to these parts now. Deﬁnition: A homogeneous solution to a linear equation Lx = v, with L and v known is a vector xH such that LxH = 0 where 0 is the zero vector. If you have a particular solution xP to a linear equation and add a sum of multiples of homogeneous solutions to it you obtain another particular solution. 47 48 Systems of Linear Equations Particular and Homogeneous Solutions Check now that the parts of the solutions with free variables as coeﬃcients from the previous examples are homogeneous solutions, and that by adding a homogeneous solution to a particular solution one obtains a solution to the matrix equation. This will come up over and over again. As an example without matrices, consider the diﬀerential equation d2 dx2 f = 3. A particular solution is 3 2x2 while x and 1 are homogeneous solutions. The solution set is { 3 2x2 + ax + c1 : a, b ∈ R}. You can imagine similar diﬀerential equations with more homogeneous solutions. You need to become very adept at reading oﬀ solutions sets of linear systems from the RREF of their augmented matrix; it is a basic skill for linear algebra, and we will continue using it up to the last page of the book! Worked examples of Gaussian elimination 2.2 Review Problems Webwork: Reading problems 1 , 2 Augmented matrix 6 2 × 2 systems 7, 8, 9, 10, 11, 12 3 × 2 systems 13, 14 3 × 3 systems 15, 16, 17 1. State whether the following augmented matrices are in RREF and com- pute their solution sets.     1 0 0 0 3 1 0 1 0 0 1 2 0 0 1 0 1 3 0 0 0 1 2 0     ,     1 1 0 1 0 1 0 0 0 1 2 0 2 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0     , 48 2.2 Review Problems 49       1 1 0 1 0 1 0 1 0 0 1 2 0 2 0 −1 0 0 0 0 1 3 0 1 0 0 0 0 0 2 0 −2 0 0 0 0 0 0 1 1       . 2. Solve the following linear system: 2x1 + 5x2 − 8x3 + 2x4 + 2x5 = 0 6x1 + 2x2 −10x3 + 6x4 + 8x5 = 6 3x1 + 6x2 + 2x3 + 3x4 + 5x5 = 6 3x1 + 1x2 − 5x3 + 3x4 + 4x5 = 3 6x1 + 7x2 − 3x3 + 6x4 + 9x5 = 9 Be sure to set your work out carefully with equivalence signs ∼ between each step, labeled by the row operations you performed. 3. Check that the following two matrices are row-equivalent: ( 1 4 7 10 2 9 6 0 ) and ( 0 −1 8 20 4 18 12 0 ) . Now remove the third column from each matrix, and show that the resulting two matrices (shown below) are row-equivalent: ( 1 4 10 2 9 0 ) and (0 −1 20 4 18 0 ) . Now remove the fourth column from each of the original two matri- ces, and show that the resulting two matrices, viewed as augmented matrices (shown below) are row-equivalent: ( 1 4 7 2 9 6 ) and ( 0 −1 8 4 18 12 ) . Explain why row-equivalence is never aﬀected by removing columns. 4. Check that the system of equations corresponding to the augmented matrix  1 4 10 3 13 9 4 17 20   49 50 Systems of Linear Equations has no solutions. If you remove one of the rows of this matrix, does the new matrix have any solutions? In general, can row equivalence be aﬀected by removing rows? Explain why or why not. 5. Explain why the linear system has no solutions:  1 0 3 1 0 1 2 4 0 0 0 6   For which values of k does the system below have a solution? x − 3y = 6 x + 3z = − 3 2x + ky + (3 − k)z = 1 Hint 6. Show that the RREF of a matrix is unique. (Hint: Consider what happens if the same augmented matrix had two diﬀerent RREFs. Try to see what happens if you removed columns from these two RREF augmented matrices.) 7. Another method for solving linear systems is to use row operations to bring the augmented matrix to Row Echelon Form (REF as opposed to RREF). In REF, the pivots are not necessarily set to one, and we only require that all entries left of the pivots are zero, not necessarily entries above a pivot. Provide a counterexample to show that row echelon form is not unique. Once a system is in row echelon form, it can be solved by “back substi- tution.” Write the following row echelon matrix as a system of equa- tions, then solve the system using back-substitution.  2 3 1 6 0 1 1 2 0 0 3 3   50 2.2 Review Problems 51 8. Show that this pair of augmented matrices are row equivalent, assuming ad − bc ̸= 0: (a b e c d f ) ∼ ( 1 0 de−bf ad−bc 0 1 af −ce ad−bc ) 9. Consider the augmented matrix: ( 2 −1 3 −6 3 1 ) . Give a geometric reason why the associated system of equations has no solution. (Hint, plot the three vectors given by the columns of this augmented matrix in the plane.) Given a general augmented matrix ( a b e c d f ) , can you ﬁnd a condition on the numbers a, b, c and d that corresponds to the geometric condition you found? 10. A relation ∼ on a set of objects U is an equivalence relation if the following three properties are satisﬁed: • Reﬂexive: For any x ∈ U , we have x ∼ x. • Symmetric: For any x, y ∈ U , if x ∼ y then y ∼ x. • Transitive: For any x, y and z ∈ U , if x ∼ y and y ∼ z then x ∼ z. Show that row equivalence of matrices is an example of an equivalence relation. (For a discussion of equivalence relations, see Homework 0, Problem 4) Hint 11. Equivalence of augmented matrices does not come from equality of their solution sets. Rather, we deﬁne two matrices to be equivalent if one can be obtained from the other by elementary row operations. Find a pair of augmented matrices that are not row equivalent but do have the same solution set. 51 52 Systems of Linear Equations 2.3 Elementary Row Operations Elementary row operations are systems of linear equations relating the old and new rows in Gaussian elimination: Example 21 (Keeping track of EROs with equations between rows) We refer to the new kth row as R′ k and the old kth row as Rk.   0 1 1 7 2 0 0 4 0 0 1 4   R′ 1=0R1+ R2+0R3 R′ 2= R1+0R2+0R3 R′ 3=0R1+0R2+ R3 ∼  2 0 0 4 0 1 1 7 0 0 1 4     R′ 1 R′ 2 R′ 3   =  0 1 0 1 0 0 0 0 1    R1 R2 R3   R′ 1= 1 2 R1+0R2+0R3 R′ 2=0R1+ R2+0R3 R′ 3=0R1+0R2+ R3 ∼  1 0 0 2 0 1 1 7 0 0 1 4     R′ 1 R′ 2 R′ 3   =   1 2 0 0 0 1 0 0 0 1    R1 R2 R3   R′ 1= R1+0R2+0R3 R′ 2=0R1+ R2− R3 R′ 3=0R1+0R2+ R3 ∼  1 0 0 2 0 1 0 3 0 0 1 4     R′ 1 R′ 2 R′ 3   =   1 0 0 0 1 −1 0 0 1    R1 R2 R3   On the right, we have listed the relations between old and new rows in matrix notation. Reading homework: problem 3 2.3.1 EROs and Matrices Interestingly, the matrix that describes the relationship between old and new rows performs the corresponding ERO on the augmented matrix. 52 2.3 Elementary Row Operations 53 Example 22 (Performing EROs with Matrices)  0 1 0 1 0 0 0 0 1    0 1 1 7 2 0 0 4 0 0 1 4   =  2 0 0 4 0 1 1 7 0 0 1 4  ∼  1 2 0 0 0 1 0 0 0 1    2 0 0 4 0 1 1 7 0 0 1 4   =  1 0 0 2 0 1 1 7 0 0 1 4  ∼  1 0 0 0 1 −1 0 0 1    1 0 0 2 0 1 1 7 0 0 1 4   =  1 0 0 2 0 1 0 3 0 0 1 4   Here we have multiplied the augmented matrix with the matrices that acted on rows listed on the right of example 21. Realizing EROs as matrices allows us to give a concrete notion of “di- viding by a matrix”; we can now perform manipulations on both sides of an equation in a familiar way: Example 23 (Undoing A in Ax = b slowly, for A = 6 = 3 · 2) 6x = 12 ⇔ 3−16x = 3−112 ⇔ 2x = 4 ⇔ 2−12x = 2−1 4 ⇔ 1x = 2 The matrices corresponding to EROs undo a matrix step by step. 53 54 Systems of Linear Equations Example 24 (Undoing A in Ax = b slowly, for A = M = ...)   0 1 1 2 0 0 0 0 1     x y z   =  7 4 4   ⇔   0 1 0 1 0 0 0 0 1     0 1 1 2 0 0 0 0 1     x y z   =   0 1 0 1 0 0 0 0 1    7 4 4   ⇔   2 0 0 0 1 1 0 0 1     x y z   =  4 7 4   ⇔   1 2 0 0 0 1 0 0 0 1     2 0 0 0 1 1 0 0 1     x y z   =   1 2 0 0 0 1 0 0 0 1    4 7 4   ⇔   1 0 0 0 1 1 0 0 1     x y z   =  2 7 4   ⇔  1 0 0 0 1 −1 0 0 1     1 0 0 0 1 1 0 0 1     x y z   =   1 0 0 0 1 −1 0 0 1    2 7 4   ⇔   1 0 0 0 1 0 0 0 1     x y z   =   2 3 4   . This is another way of thinking about Gaussian elimination which feels more like elementary algebra in the sense that you “do something to both sides of an equation” until you have a solution. 2.3.2 Recording EROs in (M |I ) Just as we put together 3−12 −1 = 6−1 to get a single thing to apply to both sides of 6x = 12 to undo 6, we should put together multiple EROs to get a single thing that undoes our matrix. To do this, augment by the identity matrix (not just a single column) and then perform Gaussian elimination. There is no need to write the EROs as systems of equations or as matrices while doing this. 54 2.3 Elementary Row Operations 55 Example 25 (Collecting EROs that undo a matrix)   0 1 1 1 0 0 2 0 0 0 1 0 0 0 1 0 0 1   ∼   2 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1   ∼   1 0 0 0 1 2 0 0 1 1 1 0 0 0 0 1 0 0 1   ∼   1 0 0 0 1 2 0 0 1 0 1 0 −1 0 0 1 0 0 1   . As we changed the left side from the matrix M to the identity matrix, the right side changed from the identity matrix to the matrix which undoes M . Example 26 (Checking that one matrix undoes another)   0 1 2 0 1 0 −1 0 0 1     0 1 1 2 0 0 0 0 1   =   1 0 0 0 1 0 0 0 1   . If the matrices are composed in the opposite order, the result is the same.   0 1 1 2 0 0 0 0 1     0 1 2 0 1 0 −1 0 0 1   =   1 0 0 0 1 0 0 0 1   . Whenever the product of two matrices M N = I, we say that N is the inverse of M or N = M −1. Conversely M is the inverse of N ; M = N −1. In abstract generality, let M be some matrix and, as always, let I stand for the identity matrix. Imagine the process of performing elementary row operations to bring M to the identity matrix: (M |I) ∼ (E1M |E1) ∼ (E2E1M |E2E1) ∼ · · · ∼ (I| · · · E2E1) . The ellipses “· · · ” stand for additional EROs. The result is a product of matrices that form a matrix which undoes M · · · E2E1M = I . This is only true if the RREF of M is the identity matrix. Deﬁnition: A matrix M is invertible if its RREF is an identity matrix. 55 56 Systems of Linear Equations How to ﬁnd M −1 (M |I) ∼ (I|M −1) Much use is made of the fact that invertible matrices can be undone with EROs. To begin with, since each elementary row operation has an inverse, M = E−1 1 E−1 2 · · · , while the inverse of M is M −1 = · · · E2E1 . This is symbolically veriﬁed by M −1M = · · · E2E1 E−1 1 E−1 2 · · · = · · · E2 E−1 2 · · · = · · · = I . Thus, if M is invertible, then M can be expressed as the product of EROs. (The same is true for its inverse.) This has the feel of the fundamental theorem of arithmetic (integers can be expressed as the product of primes) or the fundamental theorem of algebra (polynomials can be expressed as the product of [complex] ﬁrst order polynomials); EROs are building blocks of invertible matrices. 2.3.3 The Three Elementary Matrices We now work toward concrete examples and applications. It is surprisingly easy to translate between EROs and matrices that perform EROs. The matrices corresponding to these kinds are close in form to the identity matrix: • Row Swap: Identity matrix with two rows swapped. • Scalar Multiplication: Identity matrix with one diagonal entry not 1. • Row Sum: The identity matrix with one oﬀ-diagonal entry not 0. Example 27 (Correspondences between EROs and their matrices) 56 2.3 Elementary Row Operations 57 • The row swap matrix that swaps the 2nd and 4th row is the identity matrix with the 2nd and 4th row swapped:       1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1       . • The scalar multiplication matrix that replaces the 3rd row with 7 times the 3rd row is the identity matrix with 7 in the 3rd row instead of 1:     1 0 0 0 0 1 0 0 0 0 7 0 0 0 0 1     . • The row sum matrix that replaces the 4th row with the 4th row plus 9 times the 2nd row is the identity matrix with a 9 in the 4th row, 2nd column:           1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 9 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1           . We can write an explicit factorization of a matrix into EROs by keeping track of the EROs used in getting to RREF. Example 28 (Express M from Example 25 as a product of EROs) Note that in the previous example one of each of the kinds of EROs is used, in the order just given. Elimination looked like M =   0 1 1 2 0 0 0 0 1   E1∼   2 0 0 0 1 1 0 0 1   E2∼   1 0 0 0 1 1 0 0 1   E3∼   1 0 0 0 1 0 0 0 1   = I , where the EROs matrices are E1 =   0 1 0 1 0 0 0 0 1   , E2 =   1 2 0 0 0 1 0 0 0 1   , E3 =   1 0 0 0 1 −1 0 0 1   . 57 58 Systems of Linear Equations The inverse of the ERO matrices (corresponding to the description of the reverse row maniplulations) E−1 1 =   0 1 0 1 0 0 0 0 1   , E−1 2 =   2 0 0 0 1 0 0 0 1   , E−1 3 =   1 0 0 0 1 1 0 0 1   . Multiplying these gives E−1 1 E−1 2 E−1 3 =   0 1 0 1 0 0 0 0 1     2 0 0 0 1 0 0 0 1     1 0 0 0 1 1 0 0 1   =   0 1 0 1 0 0 0 0 1     2 0 0 0 1 1 0 0 1   =   0 1 1 2 0 0 0 0 1   = M . 2.3.4 LU , LDU , and P LDU Factorizations The process of elimination can be stopped halfway to obtain decompositions frequently used in large computations in sciences and engineering. The ﬁrst half of the elimination process is to eliminate entries below the diagonal leaving a matrix which is called upper triangular. The elementary matrices which perform this part of the elimination are lower triangular, as are their inverses. But putting together the upper triangular and lower triangular parts one obtains the so-called LU factorization. Example 29 (LU factorization) M =     2 0 −3 1 0 1 2 2 −4 0 9 2 0 −1 1 −1     E1∼     2 0 −3 1 0 1 2 2 0 0 3 4 0 −1 1 −1     E2∼     2 0 −3 1 0 1 2 2 0 0 3 4 0 0 3 1     E3∼     2 0 −3 1 0 1 2 2 0 0 3 4 0 0 0 −3     := U , 58 2.3 Elementary Row Operations 59 where the EROs and their inverses are E1 =     1 0 0 0 0 1 0 0 2 0 1 0 0 0 0 1     , E2 =     1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1     , E3 =     1 0 0 0 0 1 0 0 0 0 1 0 0 0 −1 1     E−1 1 =     1 0 0 0 0 1 0 0 −2 0 1 0 0 0 0 1     , E−1 2 =     1 0 0 0 0 1 0 0 0 0 1 0 0 −1 0 1     , E−1 3 =     1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1     . Applying inverse elementary matrices to both sides of the equality U = E3E2E1M gives M = E−1 1 E−1 2 E−1 3 U or     2 0 −3 1 0 1 2 2 −4 0 9 2 0 −1 1 −1    =     1 0 0 0 0 1 0 0 −2 0 1 0 0 0 0 1         1 0 0 0 0 1 0 0 0 0 1 0 0 −1 0 1         1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1         2 0 −3 1 0 1 2 2 0 0 3 4 0 0 0 −3     =     1 0 0 0 0 1 0 0 −2 0 1 0 0 0 0 1         1 0 0 0 0 1 0 0 0 0 1 0 0 −1 1 1         2 0 −3 1 0 1 2 2 0 0 3 4 0 0 0 −3     =     1 0 0 0 0 1 0 0 −2 0 1 0 0 −1 1 1         2 0 −3 1 0 1 2 2 0 0 3 4 0 0 0 −3     . This is a lower triangular matrix times an upper triangular matrix. 59 60 Systems of Linear Equations What if we stop at a diﬀerent point in elimination? We could multiply rows so that the entries in the diagonal are 1 next. Note that the EROs that do this are diagonal. This gives a slightly diﬀerent factorization. Example 30 (LDU factorization building from previous example) M =     2 0 −3 1 0 1 2 2 −4 0 9 2 0 −1 1 −1     E3E2E1∼     2 0 −3 1 0 1 2 2 0 0 3 4 0 0 0 −3     E4∼     1 0 − 3 2 1 2 0 1 2 2 0 0 3 4 0 0 0 −3     E5∼     1 0 − 3 2 1 2 0 1 2 2 0 0 1 4 3 0 0 0 −3     E6∼     1 0 − 3 2 1 2 0 1 2 2 0 0 1 4 3 0 0 0 1     =: U The corresponding elementary matrices are E4 =     1 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1     , E5 =     1 0 0 0 0 1 0 0 0 0 1 3 0 0 0 0 1     , E6 =     1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 − 1 3     , E−1 4 =     2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1     , E−1 5 =     1 0 0 0 0 1 0 0 0 0 3 0 0 0 0 1     , E−1 6 =     1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 −3     . The equation U = E6E5E4E3E2E1M can be rearranged as M = (E−1 1 E−1 2 E−1 3 )(E−1 4 E−1 5 E−1 6 )U. We calculated the product of the ﬁrst three factors in the previous example; it was named L there, and we will reuse that name here. The product of the next three factors is diagonal and we wil name it D. The last factor we named U (the name means something diﬀerent in this example than the last example.) The LDU factorization of our matrix is     2 0 −3 1 0 1 2 2 −4 0 9 2 0 −1 1 −1     =     1 0 0 0 0 1 0 0 −2 0 1 0 0 −1 1 1         2 0 0 0 0 1 0 0 0 0 3 0 0 0 0 −3         1 0 − 3 2 1 2 0 1 2 2 0 0 1 4 3 0 0 0 1     . 60 2.4 Review Problems 61 The LDU factorization of a matrix is a factorization into blocks of EROs of a various types: L is the product of the inverses of EROs which eliminate below the diagonal by row addition, D the product of inverses of EROs which set the diagonal elements to 1 by row multiplication, and U is the product of inverses of EROs which eliminate above the diagonal by row addition. You may notice that one of the three kinds of row operation is missing from this story. Row exchange may be necessary to obtain RREF. Indeed, so far in this chapter we have been working under the tacit assumption that M can be brought to the identity by just row multiplication and row addition. If row exchange is necessary, the resulting factorization is LDP U where P is the product of inverses of EROs that perform row exchange. Example 31 (LDP U factorization, building from previous examples) M =     0 1 2 2 2 0 −3 1 −4 0 9 2 0 −1 1 −1     P ∼     2 0 −3 1 0 1 2 2 −4 0 9 2 0 −1 1 −1     E6E5E4E3E2E1∼ L P =     0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1     = P −1 M = P (E−1 1 E−1 2 E−1 3 )(E−1 4 E−1 5 E−1 6 )(E−1 7 )U = P LDU     0 1 2 2 2 0 −3 1 −4 0 9 2 0 −1 1 −1     =     1 0 0 0 0 1 0 0 −2 0 1 0 0 −1 1 1         2 0 0 0 0 1 0 0 0 0 3 0 0 0 1 −3         0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1         1 0 − 3 2 1 2 0 1 2 2 0 0 1 4 3 0 0 0 1     2.4 Review Problems Webwork: Reading problems 3 Matrix notation 18 LU 19 61 62 Systems of Linear Equations 1. While performing Gaussian elimination on these augmented matrices write the full system of equations describing the new rows in terms of the old rows above each equivalence symbol as in Example 21. (2 2 10 1 2 8 ) ,   1 1 0 5 1 1 −1 11 −1 1 1 −5   2. Solve the vector equation by applying ERO matrices to each side of the equation to perform elimination. Show each matrix explicitly as in Example 24.  3 6 2 5 9 4 2 4 2    x y z   =  −3 1 0   3. Solve this vector equation by ﬁnding the inverse of the matrix through (M |I) ∼ (I|M −1) and then applying M −1 to both sides of the equation.  2 1 1 1 1 1 1 1 2     x y z   =   9 6 7   4. Follow the method of Examples 29 and 30 to ﬁnd the LU and LDU factorization of   3 3 6 3 5 2 6 2 5   . 5. Multiple matrix equations with the same matrix can be solved simul- taneously. (a) Solve both systems by performing elimination on just one aug- mented matrix.   2 −1 −1 −1 1 1 1 −1 0    x y z   =  0 1 0   ,   2 −1 −1 −1 1 1 1 −1 0    a b c   =  2 1 1   62 2.5 Solution Sets for Systems of Linear Equations 63 (b) Give an interpretation of the columns of M −1 in (M |I) ∼ (I|M −1) in terms of solutions to certain systems of linear equations. 6. How can you convince your fellow students to never make this mistake?  1 0 2 3 0 1 2 3 2 0 1 4   R′ 1=R1+R2 R′ 2=R1−R2 R′ 3=R1+2R2 ∼  1 1 4 6 1 −1 0 0 1 2 6 9   7. Is LU factorization of a matrix unique? Justify your answer. ∞. If you randomly create a matrix by picking numbers out of the blue, it will probably be diﬃcult to perform elimination or factorization; fractions and large numbers will probably be involved. To invent simple problems it is better to start with a simple answer: (a) Start with any augmented matrix in RREF. Perform EROs to make most of the components non-zero. Write the result on a separate piece of paper and give it to your friend. Ask that friend to ﬁnd RREF of the augmented matrix you gave them. Make sure they get the same augmented matrix you started with. (b) Create an upper triangular matrix U and a lower triangular ma- trix L with only 1s on the diagonal. Give the result to a friend to factor into LU form. (c) Do the same with an LDU factorization. 2.5 Solution Sets for Systems of Linear Equa- tions Algebraic equations problems can have multiple solutions. For example x(x− 1) = 0 has two solutions: 0 and 1. By contrast, equations of the form Ax = b with A a linear operator (with scalars the real numbers) have the following property: If A is a linear operator and b is known, then Ax = b has either 1. One solution 63 64 Systems of Linear Equations 2. No solutions 3. Inﬁnitely many solutions 2.5.1 The Geometry of Solution Sets: Hyperplanes Consider the following algebra problems and their solutions. 1. 6x = 12 has one solution: 2. 2a. 0x = 12 has no solution. 2b. 0x = 0 has inﬁnitely many solutions; its solution set is R. In each case the linear operator is a 1 × 1 matrix. In the ﬁrst case, the linear operator is invertible. In the other two cases it is not. In the ﬁrst case, the solution set is a point on the number line, in case 2b the solution set is the whole number line. Lets examine similar situations with larger matrices: 2 × 2 matrices. 1. (6 0 0 2 ) ( x y ) = (12 6 ) has one solution: ( 2 3 ) . 2a. (1 3 0 0 ) ( x y ) = (4 1 ) has no solutions. 2bi. (1 3 0 0 ) ( x y ) = (4 0 ) has solution set {( 4 0 ) + y ( −3 1 ) : y ∈ R} . 2bii. (0 0 0 0 ) ( x y ) = (0 0 ) has solution set {( x y ) : x, y ∈ R } . Again, in the ﬁrst case the linear operator is invertible while in the other cases it is not. When a 2 × 2 matrix from a matrix equation is not invertible the solution set can be empty, a line in the plane, or the plane itself. For a system of equations with r equations and k veriables, one can have a number of diﬀerent outcomes. For example, consider the case of r equations in three variables. Each of these equations is the equation of a plane in three- dimensional space. To ﬁnd solutions to the system of equations, we look for the common intersection of the planes (if an intersection exists). Here we have ﬁve diﬀerent possibilities: 64 2.5 Solution Sets for Systems of Linear Equations 65 1. Unique Solution. The planes have a unique point of intersection. 2a. No solutions. Some of the equations are contradictory, so no solutions exist. 2bi. Line. The planes intersect in a common line; any point on that line then gives a solution to the system of equations. 2bii. Plane. Perhaps you only had one equation to begin with, or else all of the equations coincide geometrically. In this case, you have a plane of solutions, with two free parameters. Planes 2biii. All of R 3. If you start with no information, then any point in R 3 is a solution. There are three free parameters. In general, for systems of equations with k unknowns, there are k + 2 possible outcomes, corresponding to the possible numbers (i.e., 0, 1, 2, . . . , k) of free parameters in the solutions set, plus the possibility of no solutions. These types of solution sets are hyperplanes, generalizations of planes that behave like planes in R 3 in many ways. Reading homework: problem 4 Pictures and Explanation 2.5.2 Particular Solution + Homogeneous Solutions Lets look at solution sets again, this time trying to get to their geometric shape. In the standard approach, variables corresponding to columns that do not contain a pivot (after going to reduced row echelon form) are free. It is the number of free variables that determines the geometry of the solution set. 65 66 Systems of Linear Equations Example 32 (Non-pivot variables determine the gemometry of the solution set)   1 0 1 −1 0 1 −1 1 0 0 0 0       x1 x2 x3 x4     =  1 1 0   ⇔    1x1 + 0x2 + 1x3 − 1x4 = 1 0x1 + 1x2 − 1x3 + 1x4 = 1 0x1 + 0x2 + 0x3 + 0x4 = 0 Following the standard approach, express the pivot variables in terms of the non-pivot variables and add “empty equations”. Here x3 and x4 are non-pivot variables. x1 = 1 − x3 + x4 x2 = 1 + x3 − x4 x3 = x3 x4 = x4    ⇔     x1 x2 x3 x4     =     1 1 0 0     + x3     −1 1 1 0     + x4     1 −1 0 1     The preferred way to write a solution set S is with set notation; S =        x1 x2 x3 x4     =     1 1 0 0     + µ1     −1 1 1 0     + µ2     1 −1 0 1     : µ1, µ2 ∈ R    . Notice that the ﬁrst two components of the second two terms come from the non-pivot columns. Another way to write the solution set is S = {xP + µ1xH 1 + µ2xH 2 : µ1, µ2 ∈ R} , where xP =     1 1 0 0     , x H 1 =     −1 1 1 0     , x H 2 =     1 −1 0 1     . Here xP is a particular solution while xH 1 and xH 2 are called homogeneous solutions. The solution set forms a plane. 2.5.3 Solutions and Linearity Motivated by example 32, we say that the matrix equation M x = v has solution set {xP + µ1xH 1 + µ2xH 2 | µ1, µ2 ∈ R}. Recall that matrices are linear operators. Thus M (xP + µ1xH 1 + µ2xH 2 ) = M xP + µ1M xH 1 + µ2M xH 2 = v , 66 2.5 Solution Sets for Systems of Linear Equations 67 for any µ1, µ2 ∈ R. Choosing µ1 = µ2 = 0, we obtain M xP = v . This is why xP is an example of a particular solution. Setting µ1 = 1, µ2 = 0, and subtracting M xP = v we obtain M xH 1 = 0 . Likewise, setting µ1 = 0, µ2 = 1, we obtain M xH 2 = 0 . Here xH 1 and xH 2 are examples of what are called homogeneous solutions to the system. They do not solve the original equation M x = v, but instead its associated homogeneous equation M y = 0. We have just learnt a fundamental lesson of linear algebra: the solution set to Ax = b, where A is a linear operator, consists of a particular solution plus homogeneous solutions. {Solutions} = {Particular solution + Homogeneous solutions} Example 33 Consider the matrix equation of example 32. It has solution set S =        1 1 0 0     + µ1     −1 1 1 0     + µ2     1 −1 0 1     : µ1, µ2 ∈ R    . Then M xP = v says that     1 1 0 0     is a solution to the original matrix equation, which is certainly true, but this is not the only solution. M xH 1 = 0 says that     −1 1 1 0     is a solution to the homogeneous equation. 67 68 Systems of Linear Equations M xH 2 = 0 says that     1 −1 0 1     is a solution to the homogeneous equation. Notice how adding any multiple of a homogeneous solution to the particular solution yields another particular solution. Reading homework: problem 4 2.6 Review Problems Webwork: Reading problems 4 , 5 Solution sets 20, 21, 22 Geometry of solutions 23, 24, 25, 26 1. Write down examples of augmented matrices corresponding to each of the ﬁve types of solution sets for systems of equations with three unknowns. 2. Invent a simple linear system that has multiple solutions. Use the stan- dard approach for solving linear systems and a non-standard approach to obtain diﬀerent descriptions of the solution set. Is the solution set diﬀerent with diﬀerent approaches? 3. Let M =       a1 1 a1 2 · · · a1 k a2 1 a2 2 · · · a2 k ... ... ... ar 1 ar 2 · · · ar k       and x =       x1 x2 ... xk       . Note: x2 does not denote the square of the column vector x. Instead x1, x2, x3, etc..., denote diﬀerent variables (the components of x); the superscript is an index. Although confusing at ﬁrst, this nota- tion was invented by Albert Einstein who noticed that quantities like a2 1x1 + a2 2x2 · · · + a2 kxk =: ∑k j=1 a 2 j xj, can be written unambiguously as a2 j xj. This is called Einstein summation notation. The most im- portant thing to remember is that the index j is a dummy variable, 68 2.6 Review Problems 69 so that a2 j xj ≡ a2 i xi; this is called “relabeling dummy indices”. When dealing with products of sums, you must remember to introduce a new dummy for each term; i.e., aixibiyi = ∑ i aixibiyi does not equal aixibjyj = ( ∑ i aixi)( ∑ j bjyj) . Use Einstein summation notation to propose a rule for M x so that M x = 0 is equivalent to the linear system a1 1x1 +a1 2x2 · · · +a1 kxk = 0 a2 1x1 +a2 2x2 · · · +a2 kxk = 0 ... ... ... ... ar 1x1 +ar 2x2 · · · +ar kxk = 0 Show that your rule for multiplying a matrix by a vector obeys the linearity property. 4. The standard basis vector ei is a column vector with a one in the ith row, and zeroes everywhere else. Using the rule for multiplying a matrix times a vector in problem 3, ﬁnd a simple rule for multiplying M ei, where M is the general matrix deﬁned there. 5. If A is a non-linear operator, can the solutions to Ax = b still be written as “general solution=particular solution + homogeneous solutions”? Provide examples. 6. Find a system of equations whose solution set is the walls of a 1 × 1 × 1 cube. (Hint: You may need to restrict the ranges of the variables; could your equations be linear?) 69 70 Systems of Linear Equations 70 3 The Simplex Method In Chapter 2, you learned how to handle systems of linear equations. However there are many situations in which inequalities appear instead of equalities. In such cases we are often interested in an optimal solution extremizing a particular quantity of interest. Questions like this are a focus of ﬁelds such as mathematical optimization and operations research. For the case where the functions involved are linear, these problems go under the title linear pro- gramming. Originally these ideas were driven by military applications, but by now are ubiquitous in science and industry. Gigantic computers are dedi- cated to implementing linear programming methods such as George Dantzig’s simplex algorithm–the topic of this chapter. 3.1 Pablo’s Problem Let us begin with an example. Consider again Pablo the nutritionist of problem 5, chapter 1. The Conundrum City school board has employed Pablo to design their school lunch program. Unfortunately for Pablo, their requirements are rather tricky: Example 34 (Pablo’s problem) The Conundrum City school board is heavily inﬂuenced by the local fruit grower’s association. They have stipulated that children eat at least 7 oranges and 5 apples per week. Parents and teachers have agreed that eating at least 15 pieces of fruit per week is a good thing, but school janitors argue that too much fruit makes a terrible mess, so that children should eat no more than 25 pieces of fruit per week. 71 72 The Simplex Method Finally Pablo knows that oranges have twice as much sugar as apples and that apples have 5 grams of sugar each. Too much sugar is unhealthy, so Pablo wants to keep the children’s sugar intake as low as possible. How many oranges and apples should Pablo suggest that the school board put on the menu? This is a rather gnarly word problem. Our ﬁrst step is to restate it as mathematics, stripping away all the extraneous information: Example 35 (Pablo’s problem restated) Let x be the number of apples and y be the number of oranges. These must obey x ≥ 5 and y ≥ 7 , to fulﬁll the school board’s politically motivated wishes. The teacher’s and parent’s fruit requirement means that x + y ≥ 15 , but to keep the canteen tidy x + y ≤ 25 . Now let s = 5x + 10y . This linear function of (x, y) represents the grams of sugar in x apples and y oranges. The problem is asking us to minimize s subject to the four linear inequalities listed above. 72 3.2 Graphical Solutions 73 3.2 Graphical Solutions Before giving a more general algorithm for handling this problem and prob- lems like it, we note that when the number of variables is small (preferably 2), a graphical technique can be used. Inequalities, such as the four given in Pablo’s problem, are often called constraints, and values of the variables that satisfy these constraints comprise the so-called feasible region. Since there are only two variables, this is easy to plot: Example 36 (Constraints and feasible region) Pablo’s constraints are x ≥ 5 y ≥ 7 15 ≤ x + y ≤ 25 . Plotted in the (x, y) plane, this gives: You might be able to see the solution to Pablo’s problem already. Oranges are very sugary, so they should be kept low, thus y = 7. Also, the less fruit the better, so the answer had better lie on the line x + y = 15. Hence, the answer must be at the vertex (8, 7). Actually this is a general feature 73 74 The Simplex Method of linear programming problems, the optimal answer must lie at a vertex of the feasible region. Rather than prove this, lets look at a plot of the linear function s(x, y) = 5x + 10y. Example 37 (The sugar function) Plotting the sugar function requires three dimensions: The plot of a linear function of two variables is a plane through the origin. Restricting the variables to the feasible region gives some lamina in 3-space. Since the function we want to optimize is linear (and assumedly non-zero), if we pick a point in the middle of this lamina, we can always increase/decrease the function by moving out to an edge and, in turn, along that edge to a corner. Applying this to the above picture, we see that Pablo’s best option is 110 grams of sugar a week, in the form of 8 apples and 7 oranges. It is worthwhile to contrast the optimization problem for a linear function with the non-linear case you may have seen in calculus courses: 74 3.3 Dantzig’s Algorithm 75 Here we have plotted the curve f (x) = d in the case where the function f is linear and non-linear. To optimize f in the interval [a, b], for the linear case we just need to compute and compare the values f (a) and f (b). In contrast, for non-linear functions it is necessary to also compute the derivative df /dx to study whether there are extrema inside the interval. 3.3 Dantzig’s Algorithm In simple situations a graphical method might suﬃce, but in many applica- tions there may be thousands or even millions of variables and constraints. Clearly an algorithm that can be implemented on a computer is needed. The simplex algorithm (usually attributed to George Dantzig) provides exactly that. It begins with a standard problem: Problem 38 Maximize f (x1, . . . , xn) where f is linear, xi ≥ 0 (i = 1, . . . , n) sub- ject to M x = v , x :=    x1 ... xn    , where the m × n matrix M and m × 1 column vector v are given. This is solved by arranging the information in an augmented matrix and then applying EROs. To see how this works lets try an example. 75 76 The Simplex Method Example 39 Maximize f (x, y, z, w) = 3x − 3y − z + 4w subject to constraints c1 := x + y + z + w = 5 c2 := x + 2y + 3z + 2w = 6 , where x ≥ 0, y ≥ 0, z ≥ 0 and w ≥ 0. The key observation is this: Suppose we are trying to maximize f (x1, . . . , xn) subject to a constraint c(x1, . . . , xn) = k for some constant k (c and k would be the entries of M x and v, respectively, in the above). Then we can also try to maximize f (x1, . . . , xn) + αc(x1, . . . , xn) because this is only a constant shift f → f + αk. Choosing α carefully can lead to a simple form for the function we are extremizing. Example 40 (Setting up an augmented matrix): Since we are interested in the optimum value of f , we treat it as an additional variable and add one further equation −3x + 3y + z − 4w + f = 0 . We arrange this equation and the two constraints in an augmented matrix    1 1 1 1 0 5 1 2 3 2 0 6 −3 3 1 −4 1 0    ⇔    c1 = 5 c2 = 6 f = 3x − 3y − z + 4w . Keep in mind that the ﬁrst four columns correspond to the positive variables (x, y, z, w) and that the last row has the information of the function f . The general case is depicted in ﬁgure 3.1. Now the system is written as an augmented matrix where the last row encodes the objective function and the other rows the constraints. Clearly we can perform row operations on the constraint rows since this will not change the solutions to the constraints. Moreover, we can add any amount of the constraint rows to the last row, since this just amounts to adding a constant to the function we want to extremize. 76 3.3 Dantzig’s Algorithm 77 variables (incl. slack and artiﬁcial) ︷ ︸︸ ︷ objective ︷︸︸︷         ← constraint equations ← objective equation ↑ objective value Figure 3.1: Arranging the information of an optimization problem in an augmented matrix. Example 41 (Performing EROs) We scan the last row, and notice the (most negative) coeﬃcient −4. Na¨ıvely you might think that this is good because this multiplies the positive variable w and only helps the objective function f = 4w + · · · . However, what this actually means is that the variable w will be positive and thus determined by the constraints. Therefore we want to remove it from the objective function. We can zero out this entry by performing a row operation. For that, either of the ﬁrst two rows could be used. To decide which, we remember that we still have to solve solve the constraints for variables that are positive. Hence we should try to keep the ﬁrst two entries in the last column positive. Hence we choose the row which will add the smallest constant to f when we zero out the −4: Look at the last column (where the values of the constraints are stored). We see that adding four times the ﬁrst row to the last row would zero out the −4 entry but add 20 to f , while adding two times the second row to the last row would also zero out the −4 but only add 12 to f . (You can follow this by watching what happens to the last entry in the last row.) So we perform the latter row operation and obtain the following:    1 1 1 1 0 5 1 2 3 2 0 6 −1 7 7 0 1 12    c1 = 5 c2 = 6 f = 12 + x − 7y − 7z . We do not want to undo any of our good work when we perform further row operations, so now we use the second row to zero out all other entries in the fourth column. This is achieved by subtracting half the second row from the ﬁrst:    1 2 0 − 1 2 0 0 2 1 2 3 2 0 6 −1 7 7 0 1 12    c1 − 1 2 c2 = 2 c2 = 6 f = 12 + x − 7y − 7z . 77 78 The Simplex Method Precisely because we chose the second row to perform our row operations, all entries in the last column remain positive. This allows us to continue the algorithm. We now repeat the above procedure: There is a −1 in the ﬁrst column of the last row. We want to zero it out while adding as little to f as possible. This is achieved by adding twice the ﬁrst row to the last row:    1 2 0 − 1 2 0 0 2 1 2 3 2 0 6 0 7 6 0 1 16    c1 − 1 2 c2 = 2 c2 = 6 f = 16 − 7y − 6z . The Dantzig algorithm terminates if all the coeﬃcients in the last row (save perhaps for the last entry which encodes the value of the objective) are positive. To see why we are done, lets write out what our row operations have done in terms of the function f and the constraints (c1, c2). First we have f = 16 − 7y − 6z with both y and z positive. Hence to maximize f we should choose y = 0 = z. In which case we obtain our optimum value f = 16 . Finally, we check that the constraints can be solved with y = 0 = z and positive (x, w). Indeed, they can by taking x = 4, w = 1. 3.4 Pablo Meets Dantzig Oftentimes, it takes a few tricks to bring a given problem into the standard form of example 39. In Pablo’s case, this goes as follows. Example 42 Pablo’s variables x and y do not obey xi ≥ 0. Therefore deﬁne new variables x1 = x − 5 , x2 = y − 7 . The conditions on the fruit 15 ≤ x + y ≤ 25 are inequalities, x1 + x2 ≥ 3 , x1 + x2 ≤ 13 , so are not of the form M x = v. To achieve this we introduce two new positive variables x3 ≥ 0, x4 ≥ 4 and write c1 := x1 + x2 − x3 = 3 , c2 := x1 + x2 + x4 = 13 . 78 3.4 Pablo Meets Dantzig 79 These are called slack variables because they take up the “slack” required to convert inequality to equality. This pair of equations can now be written as M x = v, (1 1 −1 0 1 1 0 1 )     x1 x2 x3 x4     = ( 3 13 ) . Finally, Pablo wants to minimize sugar s = 5x + 10y, but the standard problem maximizes f . Thus the so-called objective function f = −s + 95 = −5x1 − 10x2. (Notice that it makes no diﬀerence whether we maximize −s or −s + 95, we choose the latter since it is a linear function of (x1, x2).) Now we can build an augmented matrix whose last row reﬂects the objective function equation 5x1 + 10x2 + f = 0:   1 1 −1 0 0 3 1 1 0 1 0 13 5 10 0 0 1 0   . Here it seems that the simplex algorithm already terminates because the last row only has positive coeﬃcients, so that setting x1 = 0 = x2 would be optimal. However, this does not solve the constraints (for positive values of the slack variables x3 and x4). Thus one more (very dirty) trick is needed. We add two more, positive, (so-called) artiﬁcial variables x5 and x6 to the problem which we use to shift each constraint c1 → c1 − x5 , c2 → c2 − x6 . The idea being that for large positive α, the modiﬁed objective function f − αx5 − αx6 is only maximal when the artiﬁcial variables vanish so the underlying problem is un- changed. Lets take α = 10 (our solution will not depend on this choice) so that our augmented matrix reads   1 1 −1 0 1 0 0 3 1 1 0 1 0 1 0 13 5 10 0 0 10 10 1 0   R′ 3=R3−10R1−10R2 ∼   1 1 −1 0 1 0 0 3 1 1 0 1 0 1 0 13 −15 −10 10 −10 0 0 1 −160   . Here we performed one row operation to zero out the coeﬃcients of the artiﬁcial variables. Now we are ready to run the simplex algorithm exactly as in section 3.3. 79 80 The Simplex Method The ﬁrst row operation uses the 1 in the top of the ﬁrst column to zero out the most negative entry in the last row:   1 1 −1 0 1 0 0 3 1 1 0 1 0 1 0 13 0 5 −5 −10 15 0 1 −115   R′ 2=R2−R1 ∼   1 1 1 0 1 0 0 3 0 0 1 1 −1 1 0 10 0 5 −5 −10 15 0 1 −115   R′ 3=R3+10R2 ∼   1 1 1 0 1 0 0 3 0 0 1 1 −1 1 0 10 0 5 5 0 5 10 1 −15   . Now the variables (x2, x3, x5, x6) have zero coeﬃcients so must be set to zero to maximize f . The optimum value is f = −15 so s = −f + 95 = 110 exactly as before. Finally, to solve the constraints x1 = 3 and x4 = 10 so that x = 8 and y = 7 which also agrees with our previous result. Clearly, performed by hand, the simplex algorithm was slow and complex for Pablo’s problem. However, the key point is that it is an algorithm that can be fed to a computer. For problems with many variables, this method is much faster than simply checking all vertices as we did in section 3.2. 3.5 Review Problems 1. Maximize f (x, y) = 2x + 3y subject to the constraints x ≥ 0 , y ≥ 0 , x + 2y ≤ 2 , 2x + y ≤ 2 , by (a) sketching the region in the xy-plane deﬁned by the constraints and then checking the values of f at its corners; and, (b) the simplex algorithm (hint: introduce slack variables). 2. Conoil operates two wells (well A and well B) in southern Grease (a small Mediterranean country). You have been employed to ﬁgure out how many barrels of oil they should pump from each well to maximize 80 3.5 Review Problems 81 their proﬁt (all of which goes to shareholders, not operating costs). The quality of oil from well A is better than from well B, so is worth 50% more per barrel. The Greasy government cares about the environment and will not allow Conoil to pump in total more than 6 million barrels per year. Well A costs twice as much as well B to operate. Conoil’s yearly operating budget is only suﬃcient to pump at most 10 million barrels from well B per year. Using both a graphical method and then (as a double check) Dantzig’s algorithm, determine how many barrels Conoil should pump from each well to maximize their proﬁts. 81 82 The Simplex Method 82 4 Vectors in Space, n-Vectors To continue our linear algebra journey, we must discuss n-vectors with an arbitrarily large number of components. The simplest way to think about these is as ordered lists of numbers, a =    a1 ... an    . Do not be confused by our use of a superscript to label components of a vector. Here a2 denotes the second component of the vector a, rather than the number a squared! We emphasize that order matters: Example 43 (Order of Components Matters)     7 4 2 5     ̸=     7 2 4 5     . The set of all n-vectors is denoted R n. As an equation R n :=       a1 ... an    ∣ ∣ ∣ ∣ ∣ ∣ ∣ a1, . . . , an ∈ R    . 83 84 Vectors in Space, n-Vectors 4.1 Addition and Scalar Multiplication in Rn A simple but important property of n-vectors is that we can add two n-vectors together and multiply one n-vector by a scalar: Deﬁnition Given two n-vectors a and b whose components are given by a =    a1 ... an    and b =    b1 ... bn    their sum is a + b :=    a1 + b1 ... an + bn    . Given a scalar λ, the scalar multiple λa :=    λa1 ... λan    . Example 44 Let a =     1 2 3 4     and b =     4 3 2 1     . Then, for example, a + b =     5 5 5 5     and 3a − 2b =     −5 0 5 10     . A special vector is the zero vector . All of its components are zero: 0 =   0 ... 0   =: 0n . In Euclidean geometry—the study of R n with lengths and angles deﬁned as in section 4.3 —n-vectors are used to label points P and the zero vector labels the origin O. In this sense, the zero vector is the only one with zero magnitude, and the only one which points in no particular direction. 84 4.2 Hyperplanes 85 4.2 Hyperplanes Vectors in R n are impossible to visualize unless n is 1,2, or 3. However, familiar objects like lines and planes still make sense for any value of n: The line L along the direction deﬁned by a vector v and through a point P labeled by a vector u can be written as L = {u + tv | t ∈ R} . Sometimes, since we know that a point P corresponds to a vector, we will be lazy and just write L = {P + tv | t ∈ R}. Example 45        1 2 3 4     + t     1 0 0 0             t ∈ R    describes a line in R4 parallel to the x1-axis. Given two non-zero vectors u, v, they will usually determine a plane, unless both vectors are in the same line, in which case, one of the vectors is a scalar multiple of the other. The sum of u and v corresponds to laying the two vectors head-to-tail and drawing the connecting vector. If u and v determine a plane, then their sum lies in the plane determined by u and v. 85 86 Vectors in Space, n-Vectors The plane determined by two vectors u and v can be written as {P + su + tv | s, t ∈ R} . Example 46 (A plane in a higher dimensional space)            3 1 4 1 5 9         + s         1 0 0 0 0 0         + t         0 1 0 0 0 0                     s, t ∈ R    describes a plane in 6-dimensional space parallel to the xy-plane. Parametric Notation We can generalize the notion of a plane with the following recursive def- inition. (That is, inﬁnitely many things are deﬁned in the following line.) Deﬁnition A set of k + 1 vectors P, v1, . . . , vk in R n with k ≤ n determines a k-dimensional hyperplane, { P + k∑ i=1 λivi | λi ∈ R } 86 4.2 Hyperplanes 87 unless any of the vectors vj lives in the (k − 1)-dimensional hyperplane de- termined by the other k − 1 vectors { 0 + k∑ i̸=j λivi | λi ∈ R } . Example 47 (3+1 vectors that do not specify a 3-dimensional hyperplane) S :=            3 1 4 1 5 9         + s         1 0 0 0 0 0         + t         0 1 0 0 0 0         + u         1 1 0 0 0 0                     s, t, u ∈ R    is not a 3-dimensional hyperplane because         1 1 0 0 0 0         = 1         1 0 0 0 0 0         + 1         0 1 0 0 0 0         ∈    s         1 0 0 0 0 0         + t         0 1 0 0 0 0                     s, t ∈ R    . In fact, the set could be rewritten as S =            3 1 4 1 5 9         + (s + u)         1 0 0 0 0 0         + (t + u)         0 1 0 0 0 0                     s, t, u ∈ R    =            3 1 4 1 5 9         + a         1 0 0 0 0 0         + b         0 1 0 0 0 0                     a, b ∈ R    and so is actually the same 2-dimensional hyperplane in R6 as in example 46. 87 88 Vectors in Space, n-Vectors You might sometimes encounter the word “hyperplane” without the qual- iﬁer “k-dimensional. When the dimension k is not speciﬁed, one usually as- sumes that k = n − 1 for a hyperplane inside R n. This is the kind of object that is speciﬁed by one algebraic equation in n variables. Example 48 (Specifying a plane with one linear algebraic equation.) The solution set to x1 + x2 + x3 + x4 + x5 = 1 ⇔       x1 x2 x3 x4 x5       =       1 − x2 − x3 − x4 − x5 x2 x3 x4 x5       is          1 0 0 0 0       + s2       −1 1 0 0 0       + s3       −1 0 1 0 0       + s4       −1 0 0 1 0       + s5       −1 1 0 0 1                 s2, s3, s4, s5 ∈ R    , a 4-dimensional hyperplane in R5. 4.3 Directions and Magnitudes Consider the Euclidean length of an n-vector: ∥v∥ := √(v1)2 + (v2)2 + · · · + (vn)2 = √ √ √ √ n∑ i=1 (vi)2 . Using the Law of Cosines, we can then ﬁgure out the angle between two vectors. Given two vectors v and u that span a plane in Rn, we can then connect the ends of v and u with the vector v − u. 88 4.3 Directions and Magnitudes 89 Then the Law of Cosines states that: ∥v − u∥ 2 = ∥u∥2 + ∥v∥ 2 − 2∥u∥ ∥v∥ cos θ Then isolate cos θ: ∥v − u∥2 − ∥u∥2 − ∥v∥ 2 = (v1 − u1) 2 + · · · + (vn − u n) 2 − ((u 1) 2 + · · · + (un) 2) − ((v1)2 + · · · + (vn) 2) = −2u1v1 − · · · − 2u nvn Thus, ∥u∥ ∥v∥ cos θ = u 1v1 + · · · + u nvn . Note that in the above discussion, we have assumed (correctly) that Eu- clidean lengths in R n give the usual notion of lengths of vectors for any plane in Rn. This now motivates the deﬁnition of the dot product. Deﬁnition The dot product of u =    u1 ... un    and v =    v1 ... vn    is u v := u1v1 + · · · + u nvn . 89 90 Vectors in Space, n-Vectors Example 49 of the dot product of two vectors from R100.          1 2 3 4 ... 100          ·          1 1 1 1 ... 1          = 1 + 2 + 3 + · · · + 100 = 1 2 .100.101 = 5050. The sum above is the one Gauß, according to legend, could do in kindergarten. Deﬁnition The length (or norm or magnitude) of an n-vector v is ∥v∥ := √ v v . Example 50 of the norm of a vector from R101. ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥          1 2 3 4 ... 101          ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥ = √ √ √ √ 101∑ i=1 i2 = √ 37, 961. Deﬁnition The angle θ between two vectors is determined by the formula u v = ∥u∥∥v∥ cos θ . Example 51 of an angle between two vectors form R101. The angle between          1 2 3 4 ... 101          and          1 0 1 0 ... 1          is arccos ( 10,201 √37,916 √51 ) . Deﬁnition Two vectors are orthogonal (or perpendicular) if their dot product is zero. 90 4.3 Directions and Magnitudes 91 Example 52 of vectors from R101 that are orthogonal to each other.        1 1 1 ... 1        ·        1 −1 1 ... −1        = 0. Notice that the zero vector 0n from R n is orthogonal to every vector in R n; 0n · v = 0 for all v ∈ R n. The dot product has some important properties; it is 1. symmetric: u v = v u , 2. Distributive: u (v + w) = u v + u w , 3. Bilinear (which is to say, linear in both u and v): u (cv + dw) = c u v + d u w , and (cu + dw) v = c u v + d w v . 4. Positive Deﬁnite: u u ≥ 0 , and u u = 0 only when u itself is the 0-vector. There are, in fact, many diﬀerent useful ways to deﬁne lengths of vectors. Notice in the deﬁnition above that we ﬁrst deﬁned the dot product, and then deﬁned everything else in terms of the dot product. So if we change our idea of the dot product, we change our notion of length and angle as well. The dot product determines the Euclidean length and angle between two vectors. Other deﬁnitions of length and angle arise from inner products, which have all of the properties listed above (except that in some contexts the positive deﬁnite requirement is relaxed). Instead of writing for other inner products, we usually write ⟨u, v⟩ to avoid confusion. 91 92 Vectors in Space, n-Vectors Reading homework: problem 1 Example 53 Consider a four-dimensional space, with a special direction which we will call “time”. The Lorentzian inner product on R4 is given by ⟨u, v⟩ = u1v1 + u2v2 + u3v3 − u4v4. This is of central importance in Einstein’s theory of special relativity. Note, in particular, that it is not positive deﬁnite. As a result, the “squared-length” of a vector with coordinates x, y, z and t is ∥v∥2 = x2 + y2 + z2 − t2. Notice that it is possible for ∥v∥2 ≤ 0 even with non-vanishing v! The physical interpretation of this inner product depends on the sign of the inner product; two space time points X1 := (x1, y1, z1, t1), X2 := (x2, y2, z2, t2) are • separated by a distance √ ⟨X1, X2⟩ if ⟨X1, X2⟩ ≥ 0. • separated by a time √ −⟨X1, X2⟩ if ⟨X1, X2⟩ ≤ 0. In particular, the diﬀerence in time coordinates t2 − t1 is not the time between the two points! (Compare this to using polar coordinates for which the distance between two points (r, θ1) and (r, θ2) is not θ2 − θ1; coordinate diﬀerences are not necessarily distances.) Theorem 4.3.1 (Cauchy-Schwarz Inequality). For any non-zero vectors u and v with an inner-product ⟨ , ⟩ |⟨u, v⟩| ∥u∥ ∥v∥ ≤ 1. The easiest proof would use the deﬁnition of the angle between two vectors and the fact that cos θ ≤ 1. However, strictly speaking speaking we did not check our assumption that we could apply the Law of Cosines to the Euclidean length in R n. There is, however a simple algebraic proof. Proof. Let α be any real number and consider the following positive, quadratic polynomial in α 0 ≤ ⟨u + αv, u + αv⟩ = ⟨u, u⟩ + 2α⟨u, v⟩ + α2⟨v, v⟩ . Since any quadratic aα2+2bα+c takes its minimal value c− b2 a when α = − b 2a , and the inequality should hold for even this minimum value of the polynomial 0 ≤ ⟨u, u⟩ − ⟨u, v⟩ 2 ⟨v, v⟩ ⇔ |⟨u, v⟩| ∥u∥ ∥v∥ ≤ 1. 92 4.3 Directions and Magnitudes 93 Theorem 4.3.2 (Triangle Inequality). For any u, v ∈ R n ∥u + v∥ ≤ ∥u∥ + ∥v∥. Proof. ∥u + v∥2 = (u + v) (u + v) = u u + 2u v + v v = ∥u∥ 2 + ∥v∥2 + 2 ∥u∥ ∥v∥ cos θ = (∥u∥ + ∥v∥) 2 + 2 ∥u∥ ∥v∥(cos θ − 1) ≤ (∥u∥ + ∥v∥) 2 . That is, the square of the left-hand side of the triangle inequality is ≤ the square of the right-hand side. Since both the things being squared are posi- tive, the inequality holds without the square; ∥u + v∥ ≤ ∥u∥ + ∥v∥ The triangle inequality is also “self-evident” when examining a sketch of u, v and u + v. Example 54 Let a =     1 2 3 4     and b =     4 3 2 1     , so that a a = b b = 1 + 22 + 32 + 42 = 30 93 94 Vectors in Space, n-Vectors ⇒ ∥a∥ = √30 = ∥b∥ and (∥a∥ + ∥b∥)2 = (2 √30)2 = 120 . Since a + b =     5 5 5 5     , we have ∥a + b∥2 = 5 2 + 52 + 52 + 52 = 100 < 120 = (∥a∥ + ∥b∥)2 as predicted by the triangle inequality. Notice also that a b = 1.4 + 2.3 + 3.2 + 4.1 = 20 < √30. √30 = 30 = ∥a∥ ∥b∥ in accordance with the Cauchy–Schwarz inequality. Reading homework: problem 2 4.4 Vectors, Lists and Functions: RS If you were going shopping you might make something like the following list. We could represent this information mathematically as a set, S = {apple, orange, onion, milk, carrot} . 94 4.4 Vectors, Lists and Functions: RS 95 There is no information of ordering here and no information about how many carrots you will buy. This set by itself is not a vector; how would we add such sets to one another? If you were a more careful shopper your list might look like the following. What you have really done here is assign a number to each element of the set S. In other words, the second list is a function f : S −→ R . Given two lists like the second one above, we could easily add them – if you plan to buy 5 apples and I am buying 3 apples, together we will buy 8 apples! In fact, the second list is really a 5-vector in disguise. In general it is helpful to think of an n-vector as a function whose domain is the set {1, . . . , n}. This is equivalent to thinking of an n-vector as an ordered list of n numbers. These two ideas give us two equivalent notions for the set of all n-vectors: Rn :=       a1 ... an    ∣ ∣ ∣ ∣ ∣ ∣ ∣ a1, . . . , an ∈ R    = {a : {1, . . . , n} → R} =: R {1,··· ,n} The notation R {1,··· ,n} is used to denote the set of all functions from {1, . . . , n} to R. Similarly, for any set S the notation RS denotes the set of functions from S to R: RS := {f : S → R} . When S is an ordered set like {1, . . . , n}, it is natural to write the components in order. When the elements of S do not have a natural ordering, doing so might cause confusion. 95 96 Vectors in Space, n-Vectors Example 55 Consider the set S = {∗, ⋆, #} from chapter 1 review problem 9. A particular element of RS is the function a explicitly deﬁned by a⋆ = 3, a # = 5, a ∗ = −2. It is not natural to write a =   3 5 −2   or a =   −2 3 5   because the elements of S do not have an ordering, since as sets {∗, ⋆, #} = {⋆, #, ∗}. In this important way, R S seems diﬀerent from R 3. What is more evident are the similarities; since we can add two functions, we can add two elements of R S: Example 56 Addition in R{∗,⋆,#} If a, b ∈ R{∗,⋆,#} such that a⋆ = 3, a # = 5, a ∗ = −2 and b ⋆ = −2, b # = 4, b ∗ = 13 then a + b ∈ RS is the function such that (a + b) ⋆ = 3 − 2 = 1, (a + b) # = 5 + 4 = 9, (a + b)∗ = −2 + 13 = 11 . Also, since we can multiply functions by numbers, there is a notion of scalar multiplication on R S. Example 57 Scalar Multiplication in RS If a ∈ R{∗,⋆,#} such that a⋆ = 3, a # = 5, a ∗ = −2 then 3a ∈ R{∗,⋆,#} is the function such that (3a) ⋆ = 3 · 3 = 9, (3a) # = 3 · 5 = 15, (3a) ∗ = 3(−2) = −6 . We visualize R 2 and R 3 in terms of axes. We have a more abstract picture of R 4, R5 and R n for larger n while R S seems even more abstract. However, when thought of as a simple “shopping list”, you can see that vectors in R S in fact, can describe everyday objects. In chapter 5 we introduce the general deﬁnition of a vector space that uniﬁes all these diﬀerent notions of a vector. 96 4.5 Review Problems 97 4.5 Review Problems Webwork: Reading problems 1 , 2 Vector operations 3 Vectors and lines 4 Vectors and planes 5 Lines, planes and vectors 6,7 Equation of a plane 8,9 Angle between a line and plane 10 1. When he was young, Captain Conundrum mowed lawns on weekends to help pay his college tuition bills. He charged his customers according to the size of their lawns at a rate of 5¢ per square foot and meticulously kept a record of the areas of their lawns in an ordered list: A = (200, 300, 50, 50, 100, 100, 200, 500, 1000, 100) . He also listed the number of times he mowed each lawn in a given year, for the year 1988 that ordered list was f = (20, 1, 2, 4, 1, 5, 2, 1, 10, 6) . (a) Pretend that A and f are vectors and compute A f . (b) What quantity does the dot product A f measure? (c) How much did Captain Conundrum earn from mowing lawns in 1988? Write an expression for this amount in terms of the vectors A and f . (d) Suppose Captain Conundrum charged diﬀerent customers diﬀer- ent rates. How could you modify the expression in part 1c to compute the Captain’s earnings? 2. (2) Find the angle between the diagonal of the unit square in R2 and one of the coordinate axes. (3) Find the angle between the diagonal of the unit cube in R3 and one of the coordinate axes. (n) Find the angle between the diagonal of the unit (hyper)-cube in R n and one of the coordinate axes. 97 98 Vectors in Space, n-Vectors (∞) What is the limit as n → ∞ of the angle between the diagonal of the unit (hyper)-cube in R n and one of the coordinate axes? 3. Consider the matrix M = ( cos θ sin θ − sin θ cos θ ) and the vector X = ( x y ) . (a) Sketch X and M X in R 2 for several values of X and θ. (b) Compute ||M X|| ||X|| for arbitrary values of X and θ. (c) Explain your result for (b) and describe the action of M geomet- rically. 4. (Lorentzian Strangeness). For this problem, consider R n with the Lorentzian inner product deﬁned in example 53 above. (a) Find a non-zero vector in two-dimensional Lorentzian space-time with zero length. (b) Find and sketch the collection of all vectors in two-dimensional Lorentzian space-time with zero length. (c) Find and sketch the collection of all vectors in three-dimensional Lorentzian space-time with zero length. (d) Replace the word “zero” with the word “one” in the previous two parts. The Story of Your Life 5. Create a system of equations whose solution set is a 99 dimensional hyperplane in R 101. 6. Recall that a plane in R 3 can be described by the equation n ·  x y z   = n · p 98 4.5 Review Problems 99 where the vector p labels a given point on the plane and n is a vector normal to the plane. Let N and P be vectors in R101 and X =      x1 x2 ... x101      . What kind of geometric object does N · X = N · P describe? 7. Let u =        1 1 1 ... 1        and v =        1 2 3 ... 101        Find the projection of v onto u and the projection of u onto v. (Hint: Remember that two vectors u and v deﬁne a plane, so ﬁrst work out how to project one vector onto another in a plane. The picture from Section 14.4 could help.) 8. If the solution set to the equation A(x) = b is the set of vectors whose tips lie on the paraboloid z = x2 + y2, then what can you say about the function A? 9. Find a system of equations whose solution set is        1 1 2 0     + c1     −1 −1 0 1     + c2     0 0 −1 −3     ∣ ∣ ∣ ∣ ∣ ∣ ∣ ∣ c1, c2 ∈ R    . Give a general procedure for going from a parametric description of a hyperplane to a system of equations with that hyperplane as a solution set. 10. If A is a linear operator and both v and cv (for any real number c) are solutions to Ax = b, then what can you say about b? 99 100 Vectors in Space, n-Vectors 100 5 Vector Spaces As suggested at the end of chapter 4, the vector spaces Rn are not the only vector spaces. We now give a general deﬁnition that includes R n for all values of n, and RS for all sets S, and more. This mathematical structure is applicable to a wide range of real-world problems and allows for tremendous economy of thought; the idea of a basis for a vector space will drive home the main idea of vector spaces; they are sets with very simple structure. The two key properties of vectors are that they can be added together and multiplied by scalars. Thus, before giving a rigorous deﬁnition of vector spaces, we restate the main idea. A vector space is a set that is closed under addition and scalar multiplication. Deﬁnition A vector space (V, +, . , R) is a set V with two operations + and · satisfying the following properties for all u, v ∈ V and c, d ∈ R: (+i) (Additive Closure) u + v ∈ V . Adding two vectors gives a vector. (+ii) (Additive Commutativity) u + v = v + u. Order of addition does not matter. (+iii) (Additive Associativity) (u + v) + w = u + (v + w). Order of adding many vectors does not matter. 101 102 Vector Spaces (+iv) (Zero) There is a special vector 0V ∈ V such that u + 0V = u for all u in V . (+v) (Additive Inverse) For every u ∈ V there exists w ∈ V such that u + w = 0V . (· i) (Multiplicative Closure) c · v ∈ V . Scalar times a vector is a vector. (· ii) (Distributivity) (c + d) · v = c · v + d · v. Scalar multiplication distributes over addition of scalars. (· iii) (Distributivity) c · (u + v) = c · u + c · v. Scalar multiplication distributes over addition of vectors. (· iv) (Associativity) (cd) · v = c · (d · v). (· v) (Unity) 1 · v = v for all v ∈ V . Examples of each rule Remark Rather than writing (V, +, . , R), we will often say “let V be a vector space over R”. If it is obvious that the numbers used are real numbers, then “let V be a vector space” suﬃces. Also, don’t confuse the scalar product · with the dot product . The scalar product is a function that takes as its two inputs one number and one vector and returns a vector as its output. This can be written · : R × V → V . Similarly + : V × V → V . On the other hand, the dot product takes two vectors and returns a number. Suc- cinctly: : V × V → R. Once the properties of a vector space have been veriﬁed, we’ll just write scalar multiplication with juxtaposition cv = c · v, though, to keep our notation eﬃcient. 5.1 Examples of Vector Spaces One can ﬁnd many interesting vector spaces, such as the following: 102 5.1 Examples of Vector Spaces 103 Example of a vector space Example 58 R N = {f | f : N → R} Here the vector space is the set of functions that take in a natural number n and return a real number. The addition is just addition of functions: (f1+f2)(n) = f1(n)+f2(n). Scalar multiplication is just as simple: c · f (n) = cf (n). We can think of these functions as inﬁnitely large ordered lists of numbers: f (1) = 13 = 1 is the ﬁrst component, f (2) = 23 = 8 is the second, and so on. Then for example the function f (n) = n3 would look like this: f =           1 8 27 ... n3 ...           . Thinking this way, RN is the space of all inﬁnite sequences. Because we can not write a list inﬁnitely long (without inﬁnite time and ink), one can not deﬁne an element of this space explicitly; deﬁnitions that are implicit, as above, or algebraic as in f (n) = n3 (for all n ∈ N) suﬃce. Let’s check some axioms. (+i) (Additive Closure) (f1 + f2)(n) = f1(n) + f2(n) is indeed a function N → R, since the sum of two real numbers is a real number. (+iv) (Zero) We need to propose a zero vector. The constant zero function g(n) = 0 works because then f (n) + g(n) = f (n) + 0 = f (n). The other axioms should also be checked. This can be done using properties of the real numbers. Reading homework: problem 1 Example 59 The space of functions of one real variable. R R = {f | f : R → R} 103 104 Vector Spaces The addition is point-wise (f + g)(x) = f (x) + g(x) , as is scalar multiplication c · f (x) = cf (x) . To check that RR is a vector space use the properties of addition of functions and scalar multiplication of functions as in the previous example. We can not write out an explicit deﬁnition for one of these functions either, there are not only inﬁnitely many components, but even inﬁnitely many components between any two components! You are familiar with algebraic deﬁnitions like f (x) = ex2−x+5. However, most vectors in this vector space can not be deﬁned algebraically. For example, the nowhere continuous function f (x) = { 1 , x ∈ Q 0 , x /∈ Q . Example 60 R{∗,⋆,#} = {f : {∗, ⋆, #} → R}. Again, the properties of addition and scalar multiplication of functions show that this is a vector space. You can probably ﬁgure out how to show that R S is vector space for any set S. This might lead you to guess that all vector spaces are of the form R S for some set S. The following is a counterexample. Example 61 Another very important example of a vector space is the space of all diﬀerentiable functions: {f : R → R ∣ ∣ ∣ d dx f exists} . From calculus, we know that the sum of any two diﬀerentiable functions is dif- ferentiable, since the derivative distributes over addition. A scalar multiple of a func- tion is also diﬀerentiable, since the derivative commutes with scalar multiplication ( d dx (cf ) = c d dx f ). The zero function is just the function such that 0(x) = 0 for ev- ery x. The rest of the vector space properties are inherited from addition and scalar multiplication in R. Similarly, the set of functions with at least k derivatives is always a vector space, as is the space of functions with inﬁnitely many derivatives. None of these examples can be written as R S for some set S. Despite our emphasis on such examples, it is also not true that all vector spaces consist of functions. Examples are somewhat esoteric, so we omit them. Another important class of examples is vector spaces that live inside R n but are not themselves R n. 104 5.1 Examples of Vector Spaces 105 Example 62 (Solution set to a homogeneous linear equation.) Let M =   1 1 1 2 2 2 3 3 3   . The solution set to the homogeneous equation M x = 0 is    c1  −1 1 0   + c2  −1 0 1   ∣ ∣ ∣ ∣ ∣ ∣ c1, c2 ∈ R    . This set is not equal to R3 since it does not contain, for example,   1 0 0  . The sum of any two solutions is a solution, for example  2   −1 1 0   + 3   −1 0 1     +  7   −1 1 0   + 5  −1 0 1     = 9  −1 1 0   + 8   −1 0 1   and any scalar multiple of a solution is a solution 4  5  −1 1 0   − 3   −1 0 1     = 20  −1 1 0   − 12  −1 0 1   . This example is called a subspace because it gives a vector space inside another vector space. See chapter 9 for details. Indeed, because it is determined by the linear map given by the matrix M , it is called ker M , or in words, the kernel of M , for this see chapter 16. Similarly, the solution set to any homogeneous linear equation is a vector space: Additive and multiplicative closure follow from the following state- ment, made using linearity of matrix multiplication: If M x1 = 0 and M x2 = 0 then M (c1x1 +c2x2) = c1M x1 +c2M x2 = 0+0 = 0. A powerful result, called the subspace theorem (see chapter 9) guarantees, based on the closure properties alone, that homogeneous solution sets are vector spaces. More generally, if V is any vector space, then any hyperplane through the origin of V is a vector space. 105 106 Vector Spaces Example 63 Consider the functions f (x) = ex and g(x) = e2x in RR. By taking combinations of these two vectors we can form the plane {c1f + c2g|c1, c2 ∈ R} inside of RR. This is a vector space; some examples of vectors in it are 4ex−31e2x, πe2x−4ex and 1 2 e2x. A hyperplane which does not contain the origin cannot be a vector space because it fails condition (+iv). It is also possible to build new vector spaces from old ones using the product of sets. Remember that if V and W are sets, then their product is the new set V × W = {(v, w)|v ∈ V, w ∈ W } , or in words, all ordered pairs of elements from V and W . In fact V × W is a vector space if V and W are. We have actually been using this fact already: Example 64 The real numbers R form a vector space (over R). The new vector space R × R = {(x, y)|x ∈ R, y ∈ R} has addition and scalar multiplication deﬁned by (x, y) + (x′, y′) = (x + x′, y + y′) and c.(x, y) = (cx, cy) . Of course, this is just the vector space R2 = R{1,2}. 5.1.1 Non-Examples The solution set to a linear non-homogeneous equation is not a vector space because it does not contain the zero vector and therefore fails (iv). Example 65 The solution set to (1 1 0 0 ) ( x y ) = ( 1 0 ) is {( 1 0 ) + c ( −1 1 ) ∣ ∣ ∣ c ∈ R}. The vector ( 0 0 ) is not in this set. Do notice that if just one of the vector space rules is broken, the example is not a vector space. Most sets of n-vectors are not vector spaces. 106 5.2 Other Fields 107 Example 66 P := {( a b ) ∣ ∣ ∣ a, b ≥ 0} is not a vector space because the set fails (·i) since ( 1 1 ) ∈ P but −2 ( 1 1 ) = ( −2 −2 ) /∈ P . Sets of functions other than those of the form R S should be carefully checked for compliance with the deﬁnition of a vector space. Example 67 The set of all functions which are nowhere zero {f : R → R | f (x) ̸= 0 for any x ∈ R} , does not form a vector space because it does not satisfy (+i). The functions f (x) = x2 +1 and g(x) = −5 are in the set, but their sum (f +g)(x) = x2 −4 = (x+2)(x−2) is not since (f + g)(2) = 0. 5.2 Other Fields Above, we deﬁned vector spaces over the real numbers. One can actually deﬁne vector spaces over any ﬁeld. This is referred to as choosing a diﬀerent base ﬁeld. A ﬁeld is a collection of “numbers” satisfying properties which are listed in appendix B. An example of a ﬁeld is the complex numbers, C = {x + iy | i2 = −1, x, y ∈ R } . Example 68 In quantum physics, vector spaces over C describe all possible states a physical system can have. For example, V = {(λ µ ) | λ, µ ∈ C} is the set of possible states for an electron’s spin. The vectors ( 1 0 ) and (0 1 ) describe, respectively, an electron with spin “up” and “down” along a given direction. Other vectors, like ( i −i ) are permissible, since the base ﬁeld is the complex numbers. Such states represent a mixture of spin up and spin down for the given direction (a rather counterintuitive yet experimentally veriﬁable concept), but a given spin in some other direction. 107 108 Vector Spaces Complex numbers are very useful because of a special property that they enjoy: every polynomial over the complex numbers factors into a product of linear polynomials. For example, the polynomial x2 + 1 doesn’t factor over real numbers, but over complex numbers it factors into (x + i)(x − i) . In other words, there are two solutions to x2 = −1, x = i and x = −i. This property has far-reaching consequences: often in mathematics problems that are very diﬃcult using only real numbers become relatively simple when working over the complex numbers. This phenomenon occurs when diagonalizing matrices, see chapter 13. The rational numbers Q are also a ﬁeld. This ﬁeld is important in com- puter algebra: a real number given by an inﬁnite string of numbers after the decimal point can’t be stored by a computer. So instead rational approxi- mations are used. Since the rationals are a ﬁeld, the mathematics of vector spaces still apply to this special case. Another very useful ﬁeld is bits B2 = Z2 = {0, 1} , with the addition and multiplication rules + 0 1 0 0 1 1 1 0 × 0 1 0 0 0 1 0 1 These rules can be summarized by the relation 2 = 0. For bits, it follows that −1 = 1! The theory of ﬁelds is typically covered in a class on abstract algebra or Galois theory. 108 5.3 Review Problems 109 5.3 Review Problems Webwork: Reading problems 1 Addition and inverse 2 1. Check that {(x y )∣ ∣ ∣ ∣ x, y ∈ R } = R 2 (with the usual addition and scalar multiplication) satisﬁes all of the parts in the deﬁnition of a vector space. 2. (a) Check that the complex numbers C = {x + iy | i 2 = −1, x, y ∈ R}, satisfy all of the parts in the deﬁnition of a vector space over C. Make sure you state carefully what your rules for vector addition and scalar multiplication are. (b) What would happen if you used R as the base ﬁeld (try comparing to problem 1). 3. (a) Consider the set of convergent sequences, with the same addi- tion and scalar multiplication that we deﬁned for the space of sequences: V = { f | f : N → R, lim n→∞ f (n) ∈ R} ⊂ R N . Is this still a vector space? Explain why or why not. (b) Now consider the set of divergent sequences, with the same addi- tion and scalar multiplication as before: V = { f | f : N → R, lim n→∞ f (n) does not exist or is ± ∞} ⊂ R N . Is this a vector space? Explain why or why not. 4. Consider the set of 2 × 4 matrices: V = {(a b c d e f g h )∣ ∣ ∣ ∣a, b, c, d, e, f, g, h ∈ C} 109 110 Vector Spaces Propose deﬁnitions for addition and scalar multiplication in V . Identify the zero vector in V , and check that every matrix in V has an additive inverse. 5. Let P R 3 be the set of polynomials with real coeﬃcients of degree three or less. (a) Propose a deﬁnition of addition and scalar multiplication to make P R 3 a vector space. (b) Identify the zero vector, and ﬁnd the additive inverse for the vector −3 − 2x + x2. (c) Show that P R 3 is not a vector space over C. Propose a small change to the deﬁnition of P R 3 to make it a vector space over C. (Hint: Every little symbol in the the instructions for par (c) is important!) Hint 6. Let V = {x ∈ R|x > 0} =: R+. For x, y ∈ V and λ ∈ R, deﬁne x ⊕ y = xy , λ ⊗ x = xλ . Show that (V, ⊕, ⊗, R) is a vector space. 7. The component in the ith row and jth column of a matrix can be labeled m i j. In this sense a matrix is a function of a pair of integers. For what set S is the set of 2 × 2 matrices the same as the set RS? Generalize to other size matrices. 8. Show that any function in R {∗,⋆,#} can be written as a sum of multiples of the functions e∗, e⋆, e# deﬁned by e∗(k) =    1 , k = ∗ 0 , k = ⋆ 0 , k = # , e⋆(k) =    0 , k = ∗ 1 , k = ⋆ 0 , k = # , e#(k) =    0 , k = ∗ 0 , k = ⋆ 1 , k = # . 9. Let V be a vector space and S any set. Show that the set V S of all functions S → V is a vector space. Hint: ﬁrst decide upon a rule for adding functions whose outputs are vectors. 110 6 Linear Transformations The main objects of study in any course in linear algebra are linear functions: Deﬁnition A function L : V → W is linear if V and W are vector spaces and L(ru + sv) = rL(u) + sL(v) for all u, v ∈ V and r, s ∈ R. Reading homework: problem 1 Remark We will often refer to linear functions by names like “linear map”, “linear operator” or “linear transformation”. In some contexts you will also see the name “homomorphism” which generally is applied to functions from one kind of set to the same kind of set while respecting any structures on the sets; linear maps are from vector spaces to vector spaces that respect scalar multiplication and addition, the two structures on vector spaces. It is common to denote a linear function by capital L as a reminder of its linearity, but sometimes we will use just f , after all we are just studying very special functions. The deﬁnition above coincides with the two part description in Chapter 1; the case r = 1, s = 1 describes additivity, while s = 0 describes homogeneity. We are now ready to learn the powerful consequences of linearity. 111 112 Linear Transformations 6.1 The Consequence of Linearity Now that we have a suﬃciently general notion of vector space it is time to talk about why linear operators are so special. Think about what is required to fully specify a real function of one variable. One output must be speciﬁed for each input. That is an inﬁnite amount of information. By contrast, even though a linear function can have inﬁnitely many ele- ments in its domain, it is speciﬁed by a very small amount of information. Example 69 (One output speciﬁes inﬁnitely many) If you know that the function L is linear and that L ( 1 0 ) = ( 5 3 ) then you do not need any more information to ﬁgure out L ( 2 0 ) , L (3 0 ) , L ( 4 0 ) , L ( 5 0 ) , etc . . . , because by homogeneity L ( 5 0 ) = L [ 5 ( 1 0 )] = 5L ( 1 0 ) = 5 (5 3 ) = ( 25 15 ) . In this way an an inﬁnite number of outputs is speciﬁed by just one. Example 70 (Two outputs in R2 speciﬁes all outputs) Likewise, if you know that L is linear and that L ( 1 0 ) = (5 3 ) and L (0 1 ) = ( 2 2 ) then you don’t need any more information to compute L (1 1 ) because by additivity L ( 1 1 ) = L [( 1 0 ) + ( 0 1 )] = L ( 1 0 ) + L ( 0 1 ) = ( 5 3 ) + ( 2 2 ) = (7 5 ) . 112 6.1 The Consequence of Linearity 113 In fact, since every vector in R2 can be expressed as ( x y ) = x ( 1 0 ) + y (0 1 ) , we know how L acts on every vector from R2 by linearity based on just two pieces of information; L ( x y ) = L [x ( 1 0 ) + y (0 1 )] = xL ( 1 0 ) +yL ( 0 1 ) = x ( 5 3 ) +y ( 2 2 ) = (5x + 2y 3x + 2y ) . Thus, the value of L at inﬁnitely many inputs is completely speciﬁed by its value at just two inputs. (We can see now that L acts in exactly the way the matrix ( 5 2 3 2 ) acts on vectors from R2.) Reading homework: problem 2 This is the reason that linear functions are so nice; they are secretly very simple functions by virtue of two characteristics: 1. They act on vector spaces. 2. They act additively and homogeneously. A linear transformation with domain R 3 is completely speciﬁed by the way it acts on the three vectors  1 0 0   ,  0 1 0   ,  0 0 1   . Similarly, a linear transformation with domain R n is completely speciﬁed by its action on the n diﬀerent n-vectors that have exactly one non-zero component, and its matrix form can be read oﬀ this information. However, not all linear functions have such nice domains. 113 114 Linear Transformations 6.2 Linear Functions on Hyperplanes It is not always so easy to write a linear operator as a matrix. Generally, this will amount to solving a linear systems problem. Examining a linear function whose domain is a hyperplane is instructive. Example 71 Let V =    c1   1 1 0   + c2   0 1 1   ∣ ∣ ∣ ∣ ∣ ∣c1, c2 ∈ R    and consider L : V → R3 be a linear function that obeys L   1 1 0   =   0 1 0   , L  0 1 1   =  0 1 0   . By linearity this speciﬁes the action of L on any vector from V as L  c1   1 1 0   + c2  0 1 1     = (c1 + c2)   0 1 0   . The domain of L is a plane and its range is the line through the origin in the x2 direction. It is not clear how to formulate L as a matrix; since L   c1 c1 + c2 c2   =   0 0 0 1 0 1 0 0 0     c1 c1 + c2 c2   = (c1 + c2)   0 1 0   , or L   c1 c1 + c2 c2   =  0 0 0 0 1 0 0 0 0     c1 c1 + c2 c2   = (c1 + c2)  0 1 0   , you might suspect that L is equivalent to one of these 3 × 3 matrices. It is not. By the natural domain convention, all 3 × 3 matrices have R3 as their domain, and the domain of L is smaller than that. When we do realize this L as a matrix it will be as a 3 × 2 matrix. We can tell because the domain of L is 2 dimensional and the codomain is 3 dimensional. (You probably already know that the plane has dimension 2, and a 114 6.3 Linear Diﬀerential Operators 115 line is 1 dimensional, but the careful deﬁnition of “dimension” takes some work; this is tackled in Chapter 11.) This leads us to write L  c1  1 1 0   + c2   0 1 1     = c1   0 1 0   + c2   0 1 0   =   0 0 1 1 0 0   ( c1 c2 ) . This makes sense, but requires a warning: The matrix  0 0 1 1 0 0   speciﬁes L so long as you also provide the information that you are labeling points in the plane V by the two numbers (c1, c2). 6.3 Linear Diﬀerential Operators Your calculus class became much easier when you stopped using the limit deﬁnition of the derivative, learned the power rule, and started using linearity of the derivative operator. Example 72 Let V be the vector space of polynomials of degree 2 or less with standard addition and scalar multiplication; V := {a0 · 1 + a1x + a2x2 | a0, a1, a2 ∈ R} Let d dx : V → V be the derivative operator. The following three equations, along with linearity of the derivative operator, allow one to take the derivative of any 2nd degree polynomial: d dx 1 = 0, d dx x = 1, d dx x2 = 2x . In particular d dx (a01 + a1x + a2x2) = a0 d dx 1 + a1 d dx x + a2 d dx x2 = 0 + a1 + 2a2x. Thus, the derivative acting any of the inﬁnitely many second order polynomials is determined by its action for just three inputs. 6.4 Bases (Take 1) The central idea of linear algebra is to exploit the hidden simplicity of linear functions. It ends up there is a lot of freedom in how to do this. That freedom is what makes linear algebra powerful. 115 116 Linear Transformations You saw that a linear operator acting on R2 is completely speciﬁed by how it acts on the pair of vectors (1 0 ) and (0 1 ) . In fact, any linear operator acting on R 2 is also completely speciﬁed by how it acts on the pair of vectors(1 1 ) and ( 1 −1 ) . Example 73 The linear operator L is a linear operator then it is completely speciﬁed by the two equalities L ( 1 1 ) = (2 4 ) , and L ( 1 −1 ) = ( 6 8 ) . This is because any vector (x y ) in R2 is a sum of multiples of (1 1 ) and ( 1 −1 ) which can be calculated via a linear systems problem as follows: ( x y ) = a (1 1 ) + b ( 1 −1 ) ⇔ ( 1 1 1 −1 ) ( a b ) = ( x y ) ⇔ ( 1 1 x 1 −1 y ) ∼ (1 0 x+y 2 0 1 x−y 2 ) ⇔ { a = x+y 2 b = x−y 2 . Thus (x y ) = x + y 2 ( 1 1 ) + x − y 2 ( 1 −1 ) . We can then calculate how L acts on any vector by ﬁrst expressing the vector as a 116 6.4 Bases (Take 1) 117 sum of multiples and then applying linearity; L ( x y ) = L [ x + y 2 ( 1 1 ) + x − y 2 ( 1 −1 )] = x + y 2 L ( 1 1 ) + x − y 2 L ( 1 −1 ) = x + y 2 ( 2 4 ) + x − y 2 ( 6 8 ) = ( x + y 2(x + y) ) + (3(x − y) 4(x − y) ) = ( 4x − 2y 6x − y ) Thus L is completely speciﬁed by its value at just two inputs. It should not surprise you to learn there are inﬁnitely many pairs of vectors from R 2 with the property that any vector can be expressed as a linear combination of them; any pair that when used as columns of a matrix gives an invertible matrix works. Such a pair is called a basis for R 2. Similarly, there are inﬁnitely many triples of vectors with the property that any vector from R3 can be expressed as a linear combination of them: these are the triples that used as columns of a matrix give an invertible matrix. Such a triple is called a basis for R3. In a similar spirit, there are inﬁnitely many pairs of vectors with the property that every vector in V =   c1  1 1 0   + c2  0 1 1   ∣ ∣ ∣ ∣ ∣ ∣ c1, c2 ∈ R    can be expressed as a linear combination of them. Some examples are V =   c1  1 1 0   + c2  0 2 2   ∣ ∣ ∣ ∣ ∣ ∣c1, c2 ∈ R    =   c1   1 1 0   + c2  1 3 2   ∣ ∣ ∣ ∣ ∣ ∣c1, c2 ∈ R    Such a pair is a called a basis for V . You probably have some intuitive notion of what dimension means (the careful mathematical deﬁnition is given in chapter 11). Roughly speaking, 117 118 Linear Transformations dimension is the number of independent directions available. To ﬁgure out the dimension of a vector space, I stand at the origin, and pick a direction. If there are any vectors in my vector space that aren’t in that direction, then I choose another direction that isn’t in the line determined by the direction I chose. If there are any vectors in my vector space not in the plane determined by the ﬁrst two directions, then I choose one of them as my next direction. In other words, I choose a collection of independent vectors in the vector space (independent vectors are deﬁned in Chapter 10). A minimal set of indepen- dent vectors is called a basis (see Chapter 11 for the precise deﬁnition). The number of vectors in my basis is the dimension of the vector space. Every vector space has many bases, but all bases for a particular vector space have the same number of vectors. Thus dimension is a well-deﬁned concept. The fact that every vector space (over R) has inﬁnitely many bases is actually very useful. Often a good choice of basis can reduce the time required to run a calculation in dramatic ways! In summary: A basis is a set of vectors in terms of which it is possible to uniquely express any other vector. 6.5 Review Problems Webwork: Reading problems 1 , 2 Linear? 3 Matrix × vector 4, 5 Linearity 6, 7 1. Show that the pair of conditions: { L(u + v) = L(u) + L(v) L(cv) = cL(v) (1) (valid for all vectors u, v and any scalar c) is equivalent to the single condition: L(ru + sv) = rL(u) + sL(v) , (2) (for all vectors u, v and any scalars r and s). Your answer should have two parts. Show that (1) ⇒ (2), and then show that (2) ⇒ (1). 118 6.5 Review Problems 119 2. If f is a linear function of one variable, then how many points on the graph of the function are needed to specify the function? Give an explicit expression for f in terms of these points. (You might want to look up the deﬁnition of a graph before you make any assumptions about the function.) 3. (a) If p (1 2 ) = 1 and p ( 2 4 ) = 3 is it possible that p is a linear function? (b) If Q(x2) = x3 and Q(2x2) = x4 is it possible that Q is a linear function from polynomials to polynomials? 4. If f is a linear function such that f (1 2 ) = 0, and f (2 3 ) = 1 , then what is f ( x y )? 5. Let Pn be the space of polynomials of degree n or less in the variable t. Suppose L is a linear transformation from P2 → P3 such that L(1) = 4, L(t) = t 3, and L(t 2) = t − 1. (a) Find L(1 + t + 2t 2). (b) Find L(a + bt + ct 2). (c) Find all values a, b, c such that L(a + bt + ct 2) = 1 + 3t + 2t 3. Hint 6. Show that the operator I that maps f to the function If deﬁned by If (x) := ∫ x 0 f (t)dt is a linear operator on the space of continuous functions. 7. Let z ∈ C. Recall that z = x+iy for some x, y ∈ R, and we can form the complex conjugate of z by taking z = x − iy. The function c : R2 → R 2 which sends (x, y) ↦→ (x, −y) agrees with complex conjugation. (a) Show that c is a linear map over R (i.e. scalars in R). (b) Show that z is not linear over C. 119 120 Linear Transformations 120 7 Matrices Matrices are a powerful tool for calculations involving linear transformations. It is important to understand how to ﬁnd the matrix of a linear transforma- tion and the properties of matrices. 7.1 Linear Transformations and Matrices Ordered, ﬁnite-dimensional, bases for vector spaces allows us to express linear operators as matrices. 7.1.1 Basis Notation A basis allows us to eﬃciently label arbitrary vectors in terms of column vectors. Here is an example. Example 74 Let V = {( a b c d )∣ ∣ ∣ ∣ a, b, c, d ∈ R} be the vector space of 2 × 2 real matrices, with addition and scalar multiplication deﬁned componentwise. One choice of basis is the ordered set (or list) of matrices B = (( 1 0 0 0 ) , ( 0 1 0 0 ) , ( 0 0 1 0 ) , ( 0 0 0 1 )) =: (e 1 1, e 1 2, e 2 1, e 2 2) . 121 122 Matrices Given a particular vector and a basis, your job is to write that vector as a sum of multiples of basis elements. Here an arbitrary vector v ∈ V is just a matrix, so we write v = ( a b c d ) = ( a 0 0 0 ) + ( 0 b 0 0 ) + ( 0 0 c 0 ) + ( 0 0 0 d ) = a (1 0 0 0 ) + b ( 0 1 0 0 ) + c ( 0 0 1 0 ) + d ( 0 0 0 1 ) = a e 1 1 + b e 1 2 + c e 2 1 + d e 2 2 . The coeﬃcients (a, b, c, d) of the basis vectors (e1 1, e1 2, e2 1, e2 2) encode the information of which matrix the vector v is. We store them in column vector by writing v = a e 1 1 + b e 1 2 + c e 2 1 + d e 2 2 =: (e1 1, e 1 2, e 2 1, e 2 2)     a b c d     =:     a b c d     B . The 4-vector     a b c d     ∈ R4 encodes the vector ( a b c d ) ∈ V but is NOT equal to it! (After all, v is a matrix so could not equal a column vector.) Both notations on the right hand side of the above equation really stand for the vector obtained by multiplying the coeﬃcients stored in the column vector by the corresponding basis element and then summing over them. Next, lets consider a tautological example showing how to label column vectors in terms of column vectors: Example 75 (Standard Basis of R2) The vectors e1 = ( 1 0 ) , e2 = ( 0 1 ) are called the standard basis vectors of R2 = R{1,2}. Their description as functions of {1, 2} are e1(k) = { 1 if k = 1 0 if k = 2 , e2(k) = { 0 if k = 1 1 if k = 2 . 122 7.1 Linear Transformations and Matrices 123 It is natural to assign these the order: e1 is ﬁrst and e2 is second. An arbitrary vector v of R2 can be written as v = ( x y ) = xe1 + ye2. To emphasize that we are using the standard basis we deﬁne the list (or ordered set) E = (e1, e2) , and write (x y ) E := (e1, e2) ( x y ) := xe1 + ye2 = v. You should read this equation by saying: “The column vector of the vector v in the basis E is ( x y ).” Again, the ﬁrst notation of a column vector with a subscript E refers to the vector obtained by multiplying each basis vector by the corresponding scalar listed in the column and then summing these, i.e. xe1 + ye2. The second notation denotes exactly the same thing but we ﬁrst list the basis elements and then the column vector; a useful trick because this can be read in the same way as matrix multiplication of a row vector times a column vector–except that the entries of the row vector are themselves vectors! You should already try to write down the standard basis vectors for R n for other values of n and express an arbitrary vector in R n in terms of them. The last example probably seems pedantic because column vectors are al- ready just ordered lists of numbers and the basis notation has simply allowed us to “re-express” these as lists of numbers. Of course, this objection does not apply to more complicated vector spaces like our ﬁrst matrix example. Moreover, as we saw earlier, there are inﬁnitely many other pairs of vectors in R2 that form a basis. Example 76 (A Non-Standard Basis of R2 = R{1,2}) b = ( 1 1 ) , β = ( 1 −1 ) . As functions of {1, 2} they read b(k) = { 1 if k = 1 1 if k = 2 , β(k) = { 1 if k = 1 −1 if k = 2 . 123 124 Matrices Notice something important: there is no reason to say that β comes before b or vice versa. That is, there is no a priori reason to give these basis elements one order or the other. However, it will be necessary to give the basis elements an order if we want to use them to encode other vectors. We choose one arbitrarily; let B = (b, β) be the ordered basis. Note that for an unordered set we use the {} parentheses while for lists or ordered sets we use (). As before we deﬁne (x y ) B := (b, β) (x y ) := xb + yβ . You might think that the numbers x and y denote exactly the same vector as in the previous example. However, they do not. Inserting the actual vectors that b and β represent we have xb + yβ = x (1 1 ) + y ( 1 −1 ) = (x + y x − y ) . Thus, to contrast, we have ( x y ) B = (x + y x − y ) and (x y ) E = ( x y ) Only in the standard basis E does the column vector of v agree with the column vector that v actually is! Based on the above example, you might think that our aim would be to ﬁnd the “standard basis” for any problem. In fact, this is far from the truth. Notice, for example that the vector v = ( 1 1 ) = e1 + e2 = b written in the standard basis E is just v = (1 1 ) E , which was easy to calculate. But in the basis B we ﬁnd v = ( 1 0 ) B , 124 7.1 Linear Transformations and Matrices 125 which is actually a simpler column vector! The fact that there are many bases for any given vector space allows us to choose a basis in which our computation is easiest. In any case, the standard basis only makes sense for R n. Suppose your vector space was the set of solutions to a diﬀerential equation–what would a standard basis then be? Example 77 (A Basis For a Hyperplane) Lets again consider the hyperplane V =    c1   1 1 0   + c2   0 1 1   ∣ ∣ ∣ ∣ ∣ ∣c1, c2 ∈ R    One possible choice of ordered basis is b1 =  1 1 0   , b2 =   0 1 1   , B = (b1, b2). With this choice ( x y ) B := xb1 + yb2 = x   1 1 0   + y   0 1 1   =   x x + y y   E . With the other choice of order B′ = (b2, b1) (x y ) B′ := xb2 + yb1 = x  0 1 1   + y  1 1 0   =   y x + y x   E . We see that the order of basis elements matters. Finding the column vector of a given vector in a given basis usually amounts to a linear systems problem: Example 78 (Pauli Matrices) Let V = {(z u v −z )∣ ∣ ∣ ∣z, u, v ∈ C} be the vector space of trace-free complex-valued matrices (over C) with basis B = (σx, σy, σz) , 125 126 Matrices where σx = (0 1 1 0 ) , σy = ( 0 −i i 0 ) , σz = (1 0 0 −1 ) . These three matrices are the famous Pauli matrices; they are used to describe electrons in quantum theory, or qubits in quantum computation. Let v = ( −2 + i 1 + i 3 − i 2 − i ) . Find the column vector of v in the basis B. For this we must solve the equation ( −2 + i 1 + i 3 − i 2 − i ) = αx ( 0 1 1 0 ) + αy ( 0 −i i 0 ) + αz ( 1 0 0 −1 ) . This gives four equations, i.e. a linear systems problem, for the α’s    αx − iαy = 1 + i αx + iαy = 3 − i αz = −2 + i −αz = 2 − i with solution αx = 2 , αy = 2 − 2i , αz = −2 + i . Thus v = ( −2 + i 1 + i 3 − i 2 − i ) =   2 2 − i −2 + i   B . To summarize, the column vector of a vector v in an ordered basis B = (b1, b2, . . . , bn),      α1 α2 ... αn      , is deﬁned by solving the linear systems problem v = α1b1 + α2b2 + · · · + αnbn = n∑ i=1 αibi . 126 7.1 Linear Transformations and Matrices 127 The numbers (α1, α2, . . . , αn) are called the components of the vector v. Two useful shorthand notations for this are v =      α1 α2 ... αn      B = (b1, b2, . . . , bn)      α1 α2 ... αn      . 7.1.2 From Linear Operators to Matrices Chapter 6 showed that linear functions are very special kinds of functions; they are fully speciﬁed by their values on any basis for their domain. A matrix records how a linear operator maps an element of the basis to a sum of multiples in the target space basis. More carefully, if L is a linear operator from V to W then the matrix for L in the ordered bases B = (b1, b2, . . . ) for V and B′ = (β1, β2, . . . ) for W , is the array of numbers m j i speciﬁed by L(bi) = m 1 i β1 + · · · + m j i βj + · · · Remark To calculate the matrix of a linear transformation you must compute what the linear transformation does to every input basis vector and then write the answers in terms of the output basis vectors: (L(b1), L(b2), . . . , L(bj), . . . ) = ((β1, β2, . . . , βj, . . .)         m1 1 m2 2 ... m j 1 ...         , (β1, β2, . . . , βj, . . .)         m1 2 m2 2 ... m j 2 ...         , · · · , (β1, β2, . . . , βj, . . .)         m1 i m2 i ... m j i ...         , · · · ) = (β1, β2, . . . , βj, . . .)         m1 1 m1 2 · · · m1 i · · · m2 1 m2 2 · · · m2 i · · · ... ... ... mj 1 m j 2 · · · m j i · · · ... ... ...         Example 79 Consider L : V → R3 (as in example 71) deﬁned by L  1 1 0   =  0 1 0   , L  0 1 1   =   0 1 0   . 127 128 Matrices By linearity this speciﬁes the action of L on any vector from V as L  c1   1 1 0   + c2   0 1 1     = (c1 + c2)   0 1 0   . We had trouble expressing this linear operator as a matrix. Lets take input basis B =     1 1 0   ,   0 1 1     =: (b1, b2) , and output basis E =    1 0 0   ,  0 1 0   ,   0 0 1     . Then Lb1 = 0e1 + 1e2 + 0e3 , Lb2 = 0e1 + 1e2 + 0e3 , or (Lb1, Lb2) = ((e1, e2, e3)  0 1 0   , (e1, e2, e3)  0 1 0   ) = (e1, e2, e3)   0 0 1 1 0 0   . The matrix on the right is the matrix of L in these bases. More succinctly we could write L ( x y ) B = (x + y)   0 1 0   E and thus see that L acts like the matrix   0 0 1 1 0 0  . Hence L ( x y ) B =     0 0 1 1 0 0   ( x y )   E ; given input and output bases, the linear operator is now encoded by a matrix. This is the general rule for this chapter: 128 7.2 Review Problems 129 Linear operators become matrices when given ordered input and output bases. Reading homework: problem 1 Example 80 Lets compute a matrix for the derivative operator acting on the vector space of polynomials of degree 2 or less: V = {a01 + a1x + a2x2 | a0, a1, a2 ∈ R} . In the ordered basis B = (1, x, x2) we write   a b c   B = a · 1 + bx + cx 2 and d dx  a b c   B = b · 1 + 2cx + 0x2 =   b 2c 0   B In the ordered basis B for both domain and range d dx B ↦→   0 1 0 0 0 2 0 0 0   Notice this last line makes no sense without explaining which bases we are using! 7.2 Review Problems Webwork: Reading problem 1 Matrix of a Linear Transformation 9, 10, 11, 12, 13 1. A door factory can buy supplies in two kinds of packages, f and g. The package f contains 3 slabs of wood, 4 fasteners, and 6 brackets. The package g contains 5 fasteners, 3 brackets, and 7 slabs of wood. (a) Explain how to view the packages f and g as functions and list their inputs and outputs. 129 130 Matrices (b) Choose an ordering for the 3 kinds of supplies and use this to rewrite f and g as elements of R 3. (c) Let L be a manufacturing process that takes as inputs supply packages and outputs two products (doors, and door frames). Ex- plain how it can be viewed as a function mapping one vector space into another. (d) Assuming that L is linear and Lf is 1 door and 2 frames, and Lg is 3 doors and 1 frame, ﬁnd a matrix for L. Be sure to specify the basis vectors you used, both for the input and output vector space. 2. You are designing a simple keyboard synthesizer with two keys. If you push the ﬁrst key with intensity a then the speaker moves in time as a sin(t). If you push the second key with intensity b then the speaker moves in time as b sin(2t). If the keys are pressed simultaneously, (a) describe the set of all sounds that come out of your synthesizer. (Hint: Sounds can be “added”.) (b) Graph the function ( 3 5 ) ∈ R {1,2} . (c) Let B = (sin(t), sin(2t)). Explain why ( 3 5 ) B is not in R{1,2} but is still a function. (d) Graph the function ( 3 5 ) B. 3. (a) Find the matrix for d dx acting on the vector space V of polynomi- als of degree 2 or less in the ordered basis B = (x2, x, 1) (b) Use the matrix from part (a) to rewrite the diﬀerential equation d dx p(x) = x as a matrix equation. Find all solutions of the matrix equation. Translate them into elements of V . 130 7.2 Review Problems 131 (c) Find the matrix for d dx acting on the vector space V in the ordered basis B′ = (x2 + x, x 2 − x, 1). (d) Use the matrix from part (c) to rewrite the diﬀerential equation d dx p(x) = x as a matrix equation. Find all solutions of the matrix equation. Translate them into elements of V . (e) Compare and contrast your results from parts (b) and (d). 4. Find the “matrix” for d dx acting on the vector space of all power series in the ordered basis (1, x, x2, x 3, ...). Use this matrix to ﬁnd all power series solutions to the diﬀerential equation d dx f (x) = x. Hint: your “matrix” may not have ﬁnite size. 5. Find the matrix for d2 dx2 acting on {c1 cos(x) + c2 sin(x) | c1, c2 ∈ R} in the ordered basis (cos(x), sin(x)). 6. Find the matrix for d dx acting on {c1 cosh(x) + c2 sinh(x)|c1, c2 ∈ R} in the ordered basis (cosh(x), sinh(x)) and in the ordered basis (cosh(x) + sinh(x), cosh(x) − sinh(x)). 7. Let B = (1, x, x2) be an ordered basis for V = {a0 + a1x + a2x2 | a0, a1, a2 ∈ R} , and let B′ = (x3, x 2, x, 1) be an ordered basis for W = {a0 + a1x + a2x2 + a3x3 | a0, a1, a2, a3 ∈ R} , Find the matrix for the operator I : V → W deﬁned by Ip(x) = ∫ x 1 p(t)dt relative to these bases. 131 132 Matrices 8. This exercise is meant to show you a generalization of the procedure you learned long ago for ﬁnding the function mx+b given two points on its graph. It will also show you a way to think of matrices as members of a much bigger class of arrays of numbers. Find the (a) constant function f : R → R whose graph contains (2, 3). (b) linear function h : R → R whose graph contains (5, 4). (c) ﬁrst order polynomial function g : R → R whose graph contains (1, 2) and (3, 3). (d) second order polynomial function p : R → R whose graph contains (1, 0), (3, 0) and (5, 0). (e) second order polynomial function q : R → R whose graph contains (1, 1), (3, 2) and (5, 7). (f) second order homogeneous polynomial function r : R → R whose graph contains (3, 2). (g) number of points required to specify a third order polynomial R → R. (h) number of points required to specify a third order homogeneous polynomial R → R. (i) number of points required to specify a n-th order polynomial R → R. (j) number of points required to specify a n-th order homogeneous polynomial R → R. (k) ﬁrst order polynomial function F : R2 → R whose graph contains(( 0 0 ) , 1 ) , (( 0 1 ) , 2 ), (( 1 0 ) , 3 ) , and (( 1 1 ) , 4 ) . (l) homogeneous ﬁrst order polynomial function H : R 2 → R whose graph contains (( 0 1 ) , 2 ), (( 1 0 ) , 3 ) , and (( 1 1 ) , 4 ) . 132 7.3 Properties of Matrices 133 (m) second order polynomial function J : R 2 → R whose graph con- tains (( 0 0 ) , 0 ) , (( 0 1 ) , 2 ) , (( 0 2 ) , 5 ), (( 1 0 ) , 3 ) , (( 2 0 ) , 6 ), and (( 1 1 ) , 4 ). (n) ﬁrst order polynomial function K : R2 → R2 whose graph con- tains (( 0 0 ) , ( 1 1 )) , (( 0 1 ) , ( 2 2 )), (( 1 0 ) , ( 3 3 )), and (( 1 1 ) , ( 4 4 )). (o) How many points in the graph of a q-th order polynomial function Rn → R n would completely determine the function? (p) In particular, how many points of the graph of linear function Rn → R n would completely determine the function? How does a matrix (in the standard basis) encode this information? (q) Propose a way to store the information required in 8g above in an array of numbers. (r) Propose a way to store the information required in 8o above in an array of numbers. 7.3 Properties of Matrices The objects of study in linear algebra are linear operators. We have seen that linear operators can be represented as matrices through choices of ordered bases, and that matrices provide a means of eﬃcient computation. We now begin an in depth study of matrices. Deﬁnition An r × k matrix M = (m i j) for i = 1, . . . , r; j = 1, . . . , k is a rectangular array of real (or complex) numbers: M =      m 1 1 m 1 2 · · · m1 k m 2 1 m 2 2 · · · m2 k ... ... ... m r 1 m r 2 · · · m r k      . 133 134 Matrices The numbers mi j are called entries. The superscript indexes the row of the matrix and the subscript indexes the column of the matrix in which m i j appears. An r × 1 matrix v = (vr 1) = (vr) is called a column vector , written v =      v1 v2 ... vr      . A 1 × k matrix v = (v1 k) = (vk) is called a row vector , written v = (v1 v2 · · · vk) . The transpose of a column vector is the corresponding row vector and vice versa: Example 81 Let v =  1 2 3   . Then vT = (1 2 3) , and (vT )T = v. This is an example of an involution, namely an operation which when performed twice does nothing. A matrix is an eﬃcient way to store information. Example 82 In computer graphics, you may have encountered image ﬁles with a .gif extension. These ﬁles are actually just matrices: at the start of the ﬁle the size of the matrix is given, after which each number is a matrix entry indicating the color of a particular pixel in the image. This matrix then has its rows shuﬄed a bit: by listing, say, every eighth row, a web browser downloading the ﬁle can start displaying an incomplete version of the picture before the download is complete. Finally, a compression algorithm is applied to the matrix to reduce the ﬁle size. 134 7.3 Properties of Matrices 135 Example 83 Graphs occur in many applications, ranging from telephone networks to airline routes. In the subject of graph theory , a graph is just a collection of vertices and some edges connecting vertices. A matrix can be used to indicate how many edges attach one vertex to another. For example, the graph pictured above would have the following matrix, where mi j indicates the number of edges between the vertices labeled i and j: M =     1 2 1 1 2 0 1 0 1 1 0 1 1 0 1 3     This is an example of a symmetric matrix, since mi j = m j i . Adjacency Matrix Example The set of all r × k matrices Mr k := {(mi j)|m i j ∈ R; i ∈ {1, . . . , r}; j ∈ {1 . . . k}} , is itself a vector space with addition and scalar multiplication deﬁned as follows: M + N = (m i j) + (n i j) = (mi j + ni j) rM = r(m i j) = (rmi j) 135 136 Matrices In other words, addition just adds corresponding entries in two matrices, and scalar multiplication multiplies every entry. Notice that M n 1 = R n is just the vector space of column vectors. Recall that we can multiply an r × k matrix by a k × 1 column vector to produce a r × 1 column vector using the rule M V = ( k∑ j=1 mi jvj) . This suggests the rule for multiplying an r × k matrix M by a k × s matrix N : our k × s matrix N consists of s column vectors side-by-side, each of dimension k × 1. We can multiply our r × k matrix M by each of these s column vectors using the rule we already know, obtaining s column vectors each of dimension r × 1. If we place these s column vectors side-by-side, we obtain an r × s matrix M N. That is, let N =      n 1 1 n 1 2 · · · n1 s n 2 1 n 2 2 · · · n2 s ... ... ... nk 1 nk 2 · · · n k s      and call the columns N1 through Ns: N1 =      n1 1 n2 1 ... n k 1      , N2 =      n1 2 n2 2 ... n k 2      , . . . , Ns =      n1 s n2 s ... nk s      . Then M N = M   | | | N1 N2 · · · Ns | | |   =   | | | M N1 M N2 · · · M Ns | | |   Concisely: If M = (m i j) for i = 1, . . . , r; j = 1, . . . , k and N = (ni j) for i = 1, . . . , k; j = 1, . . . , s, then M N = L where L = (ℓ i j) for i = i, . . . , r; j = 1, . . . , s is given by ℓ i j = k∑ p=1 mi pnp j . 136 7.3 Properties of Matrices 137 This rule obeys linearity. Notice that in order for the multiplication to make sense, the columns and rows must match. For an r × k matrix M and an s × m matrix N , then to make the product M N we must have k = s. Likewise, for the product N M , it is required that m = r. A common shorthand for keeping track of the sizes of the matrices involved in a given product is the following diagram. (r × k) times (k × m ) is (r × m) Reading homework: problem 2 Example 84 Multiplying a (3 × 1) matrix and a (1 × 2) matrix yields a (3 × 2) matrix.   1 3 2   (2 3) =  1 · 2 1 · 3 3 · 2 3 · 3 2 · 2 2 · 3   =  2 3 6 9 4 6   . Another way to view matrix multiplication is in terms of dot products: The entries of M N are made from the dot products of the rows of M with the columns of N . Example 85 Let M =  1 3 3 5 2 6   =:   uT vT wT   and N = ( 2 3 1 0 1 0 ) =: (a b c) where u = ( 1 3 ) , v = ( 3 5 ) , w = ( 2 6 ) , a = ( 2 0 ) , b = ( 3 1 ) , c = (1 0 ) . Then M N =   u · a u · b u · c v · a v · b v · c w · a w · b w · c   =   2 6 1 6 14 3 4 12 2   . 137 138 Matrices This fact has an obvious yet important consequence: Theorem 7.3.1. Let M be a matrix and x a column vector. If M x = 0 then the vector x is orthogonal to the rows of M . Remark Remember that the set of all vectors that can be obtained by adding up scalar multiples of the columns of a matrix is called its column space . Similarly the row space is the set of all row vectors obtained by adding up multiples of the rows of a matrix. The above theorem says that if M x = 0, then the vector x is orthogonal to every vector in the row space of M . We know that r × k matrices can be used to represent linear transforma- tions R k → R r via (M V )i = k∑ j=1 mi jvj, which is the same rule used when we multiply an r × k matrix by a k × 1 vector to produce an r × 1 vector. Likewise, we can use a matrix N = (ni j) to deﬁne a linear transformation of a vector space of matrices. For example L : M s k N −→ M r k , L(M ) = (li k) where li k = s∑ j=1 ni jm j k. This is the same as the rule we use to multiply matrices. In other words, L(M ) = N M is a linear transformation. Matrix Terminology Let M = (mi j) be a matrix. The entries m i i are called diagonal, and the set {m1 1, m 2 2, . . .} is called the diagonal of the matrix. Any r × r matrix is called a square matrix. A square matrix that is zero for all non-diagonal entries is called a diagonal matrix. An example of a square diagonal matrix is   2 0 0 0 3 0 0 0 0   . 138 7.3 Properties of Matrices 139 The r × r diagonal matrix with all diagonal entries equal to 1 is called the identity matrix, Ir, or just I. An identity matrix looks like I =        1 0 0 · · · 0 0 1 0 · · · 0 0 0 1 · · · 0 ... ... ... . . . ... 0 0 0 · · · 1        . The identity matrix is special because IrM = M Ik = M for all M of size r × k. Deﬁnition The transpose of an r × k matrix M = (m i j) is the k × r matrix M T = ( ˆmi j) with entries that satisfy ˆm i j = m j i . A matrix M is symmetric if M = M T . Example 86 (2 5 6 1 3 4 )T =   2 1 5 3 6 4   , and (2 5 6 1 3 4 ) ( 2 5 6 1 3 4 )T = (65 43 43 26 ) , is symmetric. Reading homework: problem 3 Observations • Only square matrices can be symmetric. • The transpose of a column vector is a row vector, and vice-versa. 139 140 Matrices • Taking the transpose of a matrix twice does nothing. i.e., (M T )T = M . Theorem 7.3.2 (Transpose and Multiplication). Let M, N be matrices such that M N makes sense. Then (M N )T = N T M T . The proof of this theorem is left to Review Question 2. 7.3.1 Associativity and Non-Commutativity Many properties of matrices following from the same property for real num- bers. Here is an example. Example 87 Associativity of matrix multiplication. We know for real numbers x, y and z that x(yz) = (xy)z , i.e., the order of multiplications does not matter. The same property holds for matrix multiplication, let us show why. Suppose M = (mi j), N = (nj k) and R = (rk l ) are, respectively, m × n, n × r and r × t matrices. Then from the rule for matrix multiplication we have M N = ( n∑ j=1 m i jnj k) and N R = ( r∑ k=1 nj krk l ) . So ﬁrst we compute (M N )R = ( r∑ k=1 [ n∑ j=1 m i jnj k]rk l ) = ( r∑ k=1 n∑ j=1 [ m i jnj k]rk l ) = ( r∑ k=1 n∑ j=1 m i jnj krk l ) . In the ﬁrst step we just wrote out the deﬁnition for matrix multiplication, in the second step we moved summation symbol outside the bracket (this is just the distributive property x(y +z) = xy +xz for numbers) and in the last step we used the associativity property for real numbers to remove the square brackets. Exactly the same reasoning shows that M (N R) = ( n∑ j=1 m i j[ r∑ k=1 nj krk l ]) = ( r∑ k=1 n∑ j=1 m i j[nj krk l ]) = ( r∑ k=1 n∑ j=1 m i jnj krk l ) . This is the same as above so we are done. 1 1As a fun remark, note that Einstein would simply have written (M N )R = (m i jnj k)rk l = m i jnj krk l = m i j(nj krk l ) = M (N R). 140 7.3 Properties of Matrices 141 Sometimes matrices do not share the properties of regular numbers. In particular, for generic n × n square matrices M and N , M N ̸= N M . Do Matrices Commute? Example 88 (Matrix multiplication does not commute.) ( 1 1 0 1 ) ( 1 0 1 1 ) = ( 2 1 1 1 ) while, on the other hand, (1 0 1 1 ) ( 1 1 0 1 ) = ( 1 1 1 2 ) . Since n × n matrices are linear transformations R n → Rn, we can see that the order of successive linear transformations matters. Here is an example of matrices acting on objects in three dimensions that also shows matrices not commuting. Example 89 In Review Problem 3, you learned that the matrix M = ( cos θ sin θ − sin θ cos θ ) , rotates vectors in the plane by an angle θ. We can generalize this, using block matrices, to three dimensions. In fact the following matrices built from a 2 × 2 rotation matrix, a 1 × 1 identity matrix and zeroes everywhere else M =   cos θ sin θ 0 − sin θ cos θ 0 0 0 1   and N =   1 0 0 0 cos θ sin θ 0 − sin θ cos θ   , perform rotations by an angle θ in the xy and yz planes, respectively. Because, they rotate single vectors, you can also use them to rotate objects built from a collection of vectors like pretty colored blocks! Here is a picture of M and then N acting on such a block, compared with the case of N followed by M . The special case of θ = 90◦ is shown. 141 142 Matrices Notice how the endproducts of M N and N M are diﬀerent, so M N ̸= N M here. 7.3.2 Block Matrices It is often convenient to partition a matrix M into smaller matrices called blocks. For example M =     1 2 3 1 4 5 6 0 7 8 9 1 0 1 2 0     = (A B C D ) Where A =  1 2 3 4 5 6 7 8 9  , B =  1 0 1  , C = (0 1 2 ), D = (0). • The blocks of a block matrix must ﬁt together to form a rectangle. So(B A D C ) makes sense, but (C B D A ) does not. Reading homework: problem 4 • There are many ways to cut up an n × n matrix into blocks. Often context or the entries of the matrix will suggest a useful way to divide the matrix into blocks. For example, if there are large blocks of zeros in a matrix, or blocks that look like an identity matrix, it can be useful to partition the matrix accordingly. 142 7.3 Properties of Matrices 143 • Matrix operations on block matrices can be carried out by treating the blocks as matrix entries. In the example above, M 2 = (A B C D ) (A B C D ) = ( A 2 + BC AB + BD CA + DC CB + D2 ) Computing the individual blocks, we get: A 2 + BC =   30 37 44 66 81 96 102 127 152   AB + BD =   4 10 16   CA + DC = (4 10 16 ) CB + D2 = (2) Assembling these pieces into a block matrix gives:     30 37 44 4 66 81 96 10 102 127 152 16 4 10 16 2     This is exactly M 2. 7.3.3 The Algebra of Square Matrices Not every pair of matrices can be multiplied. When multiplying two matrices, the number of rows in the left matrix must equal the number of columns in the right. For an r × k matrix M and an s × l matrix N , then we must have k = s. This is not a problem for square matrices of the same size, though. Two n × n matrices can be multiplied in either order. For a single ma- trix M ∈ Mn n, we can form M 2 = M M , M 3 = M M M , and so on. It is useful 143 144 Matrices to deﬁne M 0 = I , the identity matrix, just like x0 = 1 for numbers. As a result, any polynomial can be have square matrices in it’s domain. Example 90 Let f (x) = x − 2x2 + 3x3 and M = (1 t 0 1 ) . Then M 2 = (1 2t 0 1 ) , M 3 = ( 1 3t 0 1 ) , . . . and so f (M ) = ( 1 t 0 1 ) − 2 ( 1 2t 0 1 ) + 3 (1 3t 0 1 ) = ( 2 6t 0 2 ) . Suppose f (x) is any function deﬁned by a convergent Taylor Series: f (x) = f (0) + f ′(0)x + 1 2!f ′′(0)x2 + · · · . Then we can deﬁne the matrix function by just plugging in M : f (M ) = f (0) + f ′(0)M + 1 2!f ′′(0)M 2 + · · · . There are additional techniques to determine the convergence of Taylor Series of matrices, based on the fact that the convergence problem is simple for diagonal matrices. It also turns out that the matrix exponential exp(M ) = I + M + 1 2M 2 + 1 3!M 3 + · · · , always converges. Matrix Exponential Example 144 7.3 Properties of Matrices 145 7.3.4 Trace A large matrix contains a great deal of information, some of which often re- ﬂects the fact that you have not set up your problem eﬃciently. For example, a clever choice of basis can often make the matrix of a linear transformation very simple. Therefore, ﬁnding ways to extract the essential information of a matrix is useful. Here we need to assume that n < ∞ otherwise there are subtleties with convergence that we’d have to address. Deﬁnition The trace of a square matrix M = (mi j) is the sum of its diag- onal entries: tr M = n∑ i=1 m i i . Example 91 tr  2 7 6 9 5 1 4 3 8   = 2 + 5 + 8 = 15 . While matrix multiplication does not commute, the trace of a product of matrices does not depend on the order of multiplication: tr(M N ) = tr( ∑ l M i l N l j) = ∑ i ∑ l M i l N l i = ∑ l ∑ i N l i M i l = tr(∑ i N l i M i l ) = tr(N M ). Proof Explanation Thus we have a Theorem: Theorem 7.3.3. For any square matrices M and N tr(M N ) = tr(N M ). 145 146 Matrices Example 92 Continuing from the previous example, M = ( 1 1 0 1 ) , N = ( 1 0 1 1 ) . so M N = ( 2 1 1 1 ) ̸= N M = ( 1 1 1 2 ) . However, tr(M N ) = 2 + 1 = 3 = 1 + 2 = tr(N M ). Another useful property of the trace is that: tr M = tr M T This is true because the trace only uses the diagonal entries, which are ﬁxed by the transpose. For example, tr ( 1 1 2 3 ) = 4 = tr ( 1 2 1 3 ) = tr ( 1 2 1 3 )T . Finally, trace is a linear transformation from matrices to the real numbers. This is easy to check. 7.4 Review Problems Webwork: Reading Problems 2 , 3 , 4 1. Compute the following matrix products    1 2 1 4 5 2 7 8 2       −2 4 3 − 1 3 2 − 5 3 2 3 −1 2 −1    , ( 1 2 3 4 5)        1 2 3 4 5        ,        1 2 3 4 5        (1 2 3 4 5) ,    1 2 1 4 5 2 7 8 2       −2 4 3 − 1 3 2 − 5 3 2 3 −1 2 −1       1 2 1 4 5 2 7 8 2    , 146 7.4 Review Problems 147 (x y z)   2 1 1 1 2 1 1 1 2      x y z    ,        2 1 2 1 2 0 2 1 2 1 0 1 2 1 2 0 2 1 2 1 0 0 0 0 2               1 2 1 2 1 0 1 2 1 2 0 2 1 2 1 0 1 2 1 2 0 0 0 0 1        ,    −2 4 3 − 1 3 2 − 5 3 2 3 −1 2 −1       4 2 3 − 2 3 6 5 3 − 2 3 12 − 16 3 10 3       1 2 1 4 5 2 7 8 2    . 2. Let’s prove the theorem (M N ) T = N T M T . Note: the following is a common technique for proving matrix identities. (a) Let M = (m i j) and let N = (n i j). Write out a few of the entries of each matrix in the form given at the beginning of section 7.3. (b) Multiply out M N and write out a few of its entries in the same form as in part (a). In terms of the entries of M and the entries of N , what is the entry in row i and column j of M N ? (c) Take the transpose (M N )T and write out a few of its entries in the same form as in part (a). In terms of the entries of M and the entries of N , what is the entry in row i and column j of (M N ) T ? (d) Take the transposes N T and M T and write out a few of their entries in the same form as in part (a). (e) Multiply out N T M T and write out a few of its entries in the same form as in part a. In terms of the entries of M and the entries of N , what is the entry in row i and column j of N T M T ? (f) Show that the answers you got in parts (c) and (e) are the same. 3. (a) Let A = ( 1 2 0 3 −1 4 ) . Find AAT and A T A and their traces. (b) Let M be any m × n matrix. Show that M T M and M M T are symmetric. (Hint: use the result of the previous problem.) What are their sizes? What is the relationship between their traces? 147 148 Matrices 4. Let x =    x1 ... xn    and y =    y1 ... yn    be column vectors. Show that the dot product x y = xT I y. Hint 5. Above, we showed that left multiplication by an r × s matrix N was a linear transformation M s k N −→ M r k . Show that right multiplication by a k × m matrix R is a linear transformation M s k R −→ M s m. In other words, show that right matrix multiplication obeys linearity. Hint 6. Let the V be a vector space where B = (v1, v2) is an ordered basis. Suppose L : V linear −−−→ V and L(v1) = v1 + v2 , L(v2) = 2v1 + v2 . Compute the matrix of L in the basis B and then compute the trace of this matrix. Suppose that ad − bc ̸= 0 and consider now the new basis B′ = (av1 + bv2, cv1 + dv2) . Compute the matrix of L in the basis B′. Compute the trace of this matrix. What do you ﬁnd? What do you conclude about the trace of a matrix? Does it make sense to talk about the “trace of a linear transformation” without reference to any bases? 7. Explain what happens to a matrix when: (a) You multiply it on the left by a diagonal matrix. (b) You multiply it on the right by a diagonal matrix. 148 7.4 Review Problems 149 Give a few simple examples before you start explaining. 8. Compute exp(A) for the following matrices: • A = (λ 0 0 λ ) • A = (1 λ 0 1 ) • A = (0 λ 0 0 ) Hint 9. Let M =             1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 3             . Divide M into named blocks, with one block the 4 × 4 identity matrix, and then multiply blocks to compute M 2. 10. A matrix A is called anti-symmetric (or skew-symmetric) if A T = −A. Show that for every n × n matrix M , we can write M = A + S where A is an anti-symmetric matrix and S is a symmetric matrix. Hint: What kind of matrix is M + M T ? How about M − M T ? 11. An example of an operation which is not associative is the cross prod- uct. (a) Give a simple example of three vectors from 3-space u, v, w such that u × (v × w) ̸= (u × v) × w. 149 150 Matrices (b) We saw in Chapter 1 that the operator B = u× (cross product with a vector) is a linear operator. It can therefore be written as a matrix (given an ordered basis such as the standard basis). How is it that composing such linear operators is non-associative even though matrix multiplication is associative? 7.5 Inverse Matrix Deﬁnition A square matrix M is invertible (or nonsingular) if there exists a matrix M −1 such that M −1M = I = M M −1. If M has no inverse, we say M is singular or non-invertible. Inverse of a 2 × 2 Matrix Let M and N be the matrices: M = ( a b c d ) , N = ( d −b −c a ) Multiplying these matrices gives: M N = ( ad − bc 0 0 ad − bc ) = (ad − bc)I . Then M −1 = 1 ad−bc ( d −b −c a ) , so long as ad − bc ̸= 0. 7.5.1 Three Properties of the Inverse 1. If A is a square matrix and B is the inverse of A, then A is the inverse of B, since AB = I = BA. So we have the identity (A −1)−1 = A. 2. Notice that B−1A −1AB = B−1IB = I = ABB−1A −1 so (AB)−1 = B−1A −1 150 7.5 Inverse Matrix 151 Figure 7.1: The formula for the inverse of a 2×2 matrix is worth memorizing! Thus, much like the transpose, taking the inverse of a product reverses the order of the product. 3. Finally, recall that (AB) T = BT AT . Since I T = I, then (A−1A) T = AT (A −1) T = I. Similarly, (AA−1)T = (A −1) T A T = I. Then: (A−1)T = (A T ) −1 2 × 2 Example 7.5.2 Finding Inverses (Redux) Gaussian elimination can be used to ﬁnd inverse matrices. This concept is covered in chapter 2, section 2.3.2, but is presented here again as review in more sophisticated terms. Suppose M is a square invertible matrix and M X = V is a linear system. The solution must be unique because it can be found by multiplying the equation on both sides by M −1 yielding X = M −1V . Thus, the reduced row echelon form of the linear system has an identity matrix on the left: ( M V ) ∼ (I M −1V ) Solving the linear system M X = V then tells us what M −1V is. 151 152 Matrices To solve many linear systems with the same matrix at once, M X = V1, M X = V2 we can consider augmented matrices with many columns on the right and then apply Gaussian row reduction to the left side of the matrix. Once the identity matrix is on the left side of the augmented matrix, then the solution of each of the individual linear systems is on the right. ( M V1 V2 ) ∼ ( I M −1V1 M −1V2 ) To compute M −1, we would like M −1, rather than M −1V to appear on the right side of our augmented matrix. This is achieved by solving the collection of systems M X = ek, where ek is the column vector of zeroes with a 1 in the kth entry. I.e., the n × n identity matrix can be viewed as a bunch of column vectors In = (e1 e2 · · · en). So, putting the ek’s together into an identity matrix, we get: ( M I) ∼ (I M −1I) = ( I M −1) Example 93 Find  −1 2 −3 2 1 0 4 −2 5   −1 . We start by writing the augmented matrix, then apply row reduction to the left side.    −1 2 −3 1 0 0 2 1 0 0 1 0 4 −2 5 0 0 1    ∼    1 −2 3 1 0 0 0 5 −6 2 1 0 0 6 −7 4 0 1    ∼    1 0 3 5 − 1 4 2 5 0 0 1 − 6 5 2 5 1 5 0 0 0 1 5 4 5 − 6 5 1    ∼    1 0 0 −5 4 −3 0 1 0 10 −7 6 0 0 1 8 −6 5    152 7.5 Inverse Matrix 153 At this point, we know M −1 assuming we didn’t goof up. However, row reduction is a lengthy and involved process with lots of room for arithmetic errors, so we should check our answer, by conﬁrming that M M −1 = I (or if you prefer M −1M = I): M M −1 =  −1 2 −3 2 1 0 4 −2 5    −5 4 −3 10 −7 6 8 −6 5   =  1 0 0 0 1 0 0 0 1   The product of the two matrices is indeed the identity matrix, so we’re done. Reading homework: problem 5 7.5.3 Linear Systems and Inverses If M −1 exists and is known, then we can immediately solve linear systems associated to M . Example 94 Consider the linear system: −x +2y −3z = 1 2x + y = 2 4x −2y +5z = 0 The associated matrix equation is M X =  1 2 0   , where M is the same as in the previous section, so the system above is equivalent to the matrix equation   x y z   =  −1 2 −3 2 1 0 4 −2 5   −1   1 2 0   =   −5 4 −3 10 −7 6 8 −6 5    1 2 0   =   3 −4 −4   . That is, the system is equivalent to the equation  x y z   =   3 −4 −4  , and it is easy to see what the solution(s) to this equation are. In summary, when M −1 exists M x = v ⇔ x = M −1v . Reading homework: problem 5 153 154 Matrices 7.5.4 Homogeneous Systems Theorem 7.5.1. A square matrix M is invertible if and only if the homoge- neous system M x = 0 has no non-zero solutions. Proof. First, suppose that M −1 exists. Then M x = 0 ⇒ x = M −10 = 0. Thus, if M is invertible, then M x = 0 has no non-zero solutions. On the other hand, M x = 0 always has the solution x = 0. If no other solutions exist, then M can be put into reduced row echelon form with every variable a pivot. In this case, M −1 can be computed using the process in the previous section. 7.5.5 Bit Matrices In computer science, information is recorded using binary strings of data. For example, the following string contains an English word: 011011000110100101101110011001010110000101110010 A bit is the basic unit of information, keeping track of a single one or zero. Computers can add and multiply individual bits very quickly. In chapter 5, section 5.2 it is explained how to formulate vector spaces over ﬁelds other than real numbers. In particular, al of the properties of a vector space make sense with numbers Z2 = {0, 1} with addition and multiplication given by the following tables. + 0 1 0 0 1 1 1 0 × 0 1 0 0 0 1 0 1 154 7.6 Review Problems 155 Notice that −1 = 1, since 1 + 1 = 0. Therefore, we can apply all of the linear algebra we have learned thus far to matrices with Z2 entries. A matrix with entries in Z2 is sometimes called a bit matrix . Example 95   1 0 1 0 1 1 1 1 1   is an invertible matrix over Z2;   1 0 1 0 1 1 1 1 1   −1 =   0 1 1 1 0 1 1 1 1   . This can be easily veriﬁed by multiplying:  1 0 1 0 1 1 1 1 1    0 1 1 1 0 1 1 1 1   =   1 0 0 0 1 0 0 0 1   Application: Cryptography A very simple way to hide information is to use a sub- stitution cipher, in which the alphabet is permuted and each letter in a message is systematically exchanged for another. For example, the ROT-13 cypher just exchanges a letter with the letter thirteen places before or after it in the alphabet. For example, HELLO becomes URYYB. Applying the algorithm again decodes the message, turning URYYB back into HELLO. Substitution ciphers are easy to break, but the basic idea can be extended to create cryptographic systems that are practically uncrackable. For example, a one-time pad is a system that uses a diﬀerent substitution for each letter in the message. So long as a particular set of substitutions is not used on more than one message, the one-time pad is unbreakable. English characters are often stored in computers in the ASCII format. In ASCII, a single character is represented by a string of eight bits, which we can consider as a vector in Z8 2 (which is like vectors in R8, where the entries are zeros and ones). One way to create a substitution cipher, then, is to choose an 8 × 8 invertible bit matrix M , and multiply each letter of the message by M . Then to decode the message, each string of eight characters would be multiplied by M −1. To make the message a bit tougher to decode, one could consider pairs (or longer sequences) of letters as a single vector in Z16 2 (or a higher-dimensional space), and then use an appropriately-sized invertible matrix. For more on cryptography, see “The Code Book,” by Simon Singh (1999, Doubleday). 7.6 Review Problems Webwork: Reading Problems 6 , 7 155 156 Matrices 1. Find formulas for the inverses of the following matrices, when they are not singular: (a)  1 a b 0 1 c 0 0 1   (b)  a b c 0 d e 0 0 f   When are these matrices singular? 2. Write down all 2×2 bit matrices and decide which of them are singular. For those which are not singular, pair them with their inverse. 3. Let M be a square matrix. Explain why the following statements are equivalent: (a) M X = V has a unique solution for every column vector V . (b) M is non-singular. Hint: In general for problems like this, think about the key words: First, suppose that there is some column vector V such that the equa- tion M X = V has two distinct solutions. Show that M must be sin- gular; that is, show that M can have no inverse. Next, suppose that there is some column vector V such that the equa- tion M X = V has no solutions. Show that M must be singular. Finally, suppose that M is non-singular. Show that no matter what the column vector V is, there is a unique solution to M X = V. Hint 4. Left and Right Inverses: So far we have only talked about inverses of square matrices. This problem will explore the notion of a left and right inverse for a matrix that is not square. Let A = ( 0 1 1 1 1 0 ) 156 7.6 Review Problems 157 (a) Compute: i. AA T , ii. ( AAT )−1, iii. B := A T ( AAT )−1 (b) Show that the matrix B above is a right inverse for A, i.e., verify that AB = I . (c) Is BA deﬁned? (Why or why not?) (d) Let A be an n × m matrix with n > m. Suggest a formula for a left inverse C such that CA = I Hint: you may assume that A T A has an inverse. (e) Test your proposal for a left inverse for the simple example A = ( 1 2 ) , (f) True or false: Left and right inverses are unique. If false give a counterexample. Hint 5. Show that if the range (remember that the range of a function is the set of all its outputs, not the codomain) of a 3 × 3 matrix M (viewed as a function R 3 → R 3) is a plane then one of the columns is a sum of multiples of the other columns. Show that this relationship is preserved under EROs. Show, further, that the solutions to M x = 0 describe this relationship between the columns. 6. If M and N are square matrices of the same size such that M −1 exists and N −1 does not exist, does (M N )−1 exist? 7. If M is a square matrix which is not invertible, is e M invertible? 157 158 Matrices 8. Elementary Column Operations (ECOs) can be deﬁned in the same 3 types as EROs. Describe the 3 kinds of ECOs. Show that if maximal elimination using ECOs is performed on a square matrix and a column of zeros is obtained then that matrix is not invertible. 158 7.7 LU Redux 159 7.7 LU Redux Certain matrices are easier to work with than others. In this section, we will see how to write any square 2 matrix M as the product of two simpler matrices. We will write M = LU , where: • L is lower triangular . This means that all entries above the main diagonal are zero. In notation, L = (li j) with li j = 0 for all j > i. L =      l1 1 0 0 · · · l2 1 l2 2 0 · · · l3 1 l3 2 l3 3 · · · ... ... ... . . .      • U is upper triangular . This means that all entries below the main diagonal are zero. In notation, U = (u i j) with ui j = 0 for all j < i. U =      u1 1 u 1 2 u 1 3 · · · 0 u 2 2 u 2 3 · · · 0 0 u 3 3 · · · ... ... ... . . .      M = LU is called an LU decomposition of M . This is a useful trick for computational reasons; it is much easier to com- pute the inverse of an upper or lower triangular matrix than general matrices. Since inverses are useful for solving linear systems, this makes solving any lin- ear system associated to the matrix much faster as well. The determinant—a very important quantity associated with any square matrix—is very easy to compute for triangular matrices. Example 96 Linear systems associated to upper triangular matrices are very easy to solve by back substitution. (a b 1 0 c e ) ⇒ y = e c , x = 1 a ( 1 − be c ) 2The case where M is not square is dealt with at the end of the section. 159 160 Matrices  1 0 0 d a 1 0 e b c 1 f   ⇒    x = d y = e − ax z = f − bx − cy    ⇒    x = d y = e − ad z = f − bd − c(e − ad) . For lower triangular matrices, forward substitution gives a quick solution; for upper triangular matrices, back substitution gives the solution. 7.7.1 Using LU Decomposition to Solve Linear Systems Suppose we have M = LU and want to solve the system M X = LU X = V. • Step 1: Set W =   u v w   = U X. • Step 2: Solve the system LW = V . This should be simple by forward substitution since L is lower triangular. Suppose the solution to LW = V is W0. • Step 3: Now solve the system U X = W0. This should be easy by backward substitution, since U is upper triangular. The solution to this system is the solution to the original system. We can think of this as using the matrix L to perform row operations on the matrix U in order to solve the system; this idea also appears in the study of determinants. Reading homework: problem 7 Example 97 Consider the linear system: 6x + 18y + 3z = 3 2x + 12y + z = 19 4x + 15y + 3z = 0 An LU decomposition for the associated matrix M is   6 18 3 2 12 1 4 15 3   =  3 0 0 1 6 0 2 3 1     2 6 1 0 1 0 0 0 1   . 160 7.7 LU Redux 161 • Step 1: Set W =   u v w   = U X. • Step 2: Solve the system LW = V :  3 0 0 1 6 0 2 3 1     u v w   =   3 19 0   By substitution, we get u = 1, v = 3, and w = −11. Then W0 =   1 3 −11   • Step 3: Solve the system U X = W0.  2 6 1 0 1 0 0 0 1    x y z   =   1 3 −11   Back substitution gives z = −11, y = 3, and x = −3. Then X =   −3 3 −11  , and we’re done. Using an LU decomposition 161 162 Matrices 7.7.2 Finding an LU Decomposition. In chapter 2, section 2.3.4, Gaussian elimination was used to ﬁnd LU matrix decompositions. These ideas are presented here again as review. For any given matrix, there are actually many diﬀerent LU decomposi- tions. However, there is a unique LU decomposition in which the L matrix has ones on the diagonal. In that case L is called a lower unit triangular matrix . To ﬁnd the LU decomposition, we’ll create two sequences of matrices L1, L2, . . . and U1, U2, . . . such that at each step, LiUi = M . Each of the Li will be lower triangular, but only the last Ui will be upper triangular. The main trick for this calculation is captured by the following example: Example 98 (An Elementary Matrix) Consider E = (1 0 λ 1 ) , M = ( a b c · · · d e f · · · ) . Lets compute EM EM = ( a b c · · · d + λa e + λb f + λc · · · ) . Something neat happened here: multiplying M by E performed the row operation R2 → R2 + λR1 on M . Another interesting fact: E−1 := ( 1 0 −λ 1 ) obeys (check this yourself...) E−1E = 1 . Hence M = E−1EM or, writing this out ( a b c · · · d e f · · · ) = ( 1 0 −λ 1 ) ( a b c · · · d + λa e + λb f + λc · · · ) . Here the matrix on the left is lower triangular, while the matrix on the right has had a row operation performed on it. We would like to use the ﬁrst row of M to zero out the ﬁrst entry of every row below it. For our running example, M =  6 18 3 2 12 1 4 15 3   , 162 7.7 LU Redux 163 so we would like to perform the row operations R2 → R2 − 1 3 R1 and R3 → R3 − 2 3R1 . If we perform these row operations on M to produce U1 =   6 18 3 0 6 0 0 3 1   , we need to multiply this on the left by a lower triangular matrix L1 so that the product L1U1 = M still. The above example shows how to do this: Set L1 to be the lower triangular matrix whose ﬁrst column is ﬁlled with minus the constants used to zero out the ﬁrst column of M . Then L1 =    1 0 0 1 3 1 0 2 3 0 1    . By construction L1U1 = M , but you should compute this yourself as a double check. Now repeat the process by zeroing the second column of U1 below the diagonal using the second row of U1 using the row operation R3 → R3 − 1 2R2 to produce U2 =   6 18 3 0 6 0 0 0 1   . The matrix that undoes this row operation is obtained in the same way we found L1 above and is:   1 0 0 0 1 0 0 1 2 1   . Thus our answer for L2 is the product of this matrix with L1, namely L2 =    1 0 0 1 3 1 0 2 3 0 1     1 0 0 0 1 0 0 1 2 1   =    1 0 0 1 3 1 0 2 3 1 2 1    . Notice that it is lower triangular because 163 164 Matrices The product of lower triangular matrices is always lower triangular! Moreover it is obtained by recording minus the constants used for all our row operations in the appropriate columns (this always works this way). Moreover, U2 is upper triangular and M = L2U2, we are done! Putting this all together we have M =  6 18 3 2 12 1 4 15 3   =    1 0 0 1 3 1 0 2 3 1 2 1       6 18 3 0 6 0 0 0 1    . If the matrix you’re working with has more than three rows, just continue this process by zeroing out the next column below the diagonal, and repeat until there’s nothing left to do. Another LU decomposition example The fractions in the L matrix are admittedly ugly. For two matrices LU , we can multiply one entire column of L by a constant λ and divide the corresponding row of U by the same constant without changing the product of the two matrices. Then: LU =    1 0 0 1 3 1 0 2 3 1 2 1    I    6 18 3 0 6 0 0 0 1    =    1 0 0 1 3 1 0 2 3 1 2 1      3 0 0 0 6 0 0 0 1      1 3 0 0 0 1 6 0 0 0 1     6 18 3 0 6 0 0 0 1   =  3 0 0 1 6 0 2 3 1    2 6 1 0 1 0 0 0 1   . The resulting matrix looks nicer, but isn’t in standard (lower unit triangular matrix) form. 164 7.7 LU Redux 165 Reading homework: problem 7 For matrices that are not square, LU decomposition still makes sense. Given an m × n matrix M , for example we could write M = LU with L a square lower unit triangular matrix, and U a rectangular matrix. Then L will be an m × m matrix, and U will be an m × n matrix (of the same shape as M ). From here, the process is exactly the same as for a square matrix. We create a sequence of matrices Li and Ui that is eventually the LU decomposition. Again, we start with L0 = I and U0 = M . Example 99 Let’s ﬁnd the LU decomposition of M = U0 = ( −2 1 3 −4 4 1 ) . Since M is a 2 × 3 matrix, our decomposition will consist of a 2 × 2 matrix and a 2 × 3 matrix. Then we start with L0 = I2 = (1 0 0 1 ). The next step is to zero-out the ﬁrst column of M below the diagonal. There is only one row to cancel, then, and it can be removed by subtracting 2 times the ﬁrst row of M to the second row of M . Then: L1 = ( 1 0 2 1 ) , U1 = ( −2 1 3 0 2 −5 ) Since U1 is upper triangular, we’re done. With a larger matrix, we would just continue the process. 7.7.3 Block LDU Decomposition Let M be a square block matrix with square blocks X, Y, Z, W such that X −1 exists. Then M can be decomposed as a block LDU decomposition, where D is block diagonal, as follows: M = (X Y Z W ) Then: M = ( I 0 ZX −1 I ) ( X 0 0 W − ZX −1Y ) ( I X −1Y 0 I ) . 165 166 Matrices This can be checked explicitly simply by block-multiplying these three ma- trices. Block LDU Explanation Example 100 For a 2 × 2 matrix, we can regard each entry as a 1 × 1 block. ( 1 2 3 4 ) = ( 1 0 3 1 ) ( 1 0 0 −2 ) ( 1 2 0 1 ) By multiplying the diagonal matrix by the upper triangular matrix, we get the standard LU decomposition of the matrix. You are now ready to attempt the ﬁrst sample midterm. 7.8 Review Problems Webwork: Reading Problems 7 ,8 LU Decomposition 14 1. Consider the linear system: x1 = v1 l2 1x1 +x2 = v2 ... ... ln 1 x1 +ln 2 x2 + · · · + xn = vn (i) Find x1. (ii) Find x2. (iii) Find x3. 166 7.8 Review Problems 167 (k) Try to ﬁnd a formula or recursive method for ﬁnding xk. Don’t worry about simplifying your answer. 2. Let M = ( X Y Z W ) be a square n × n block matrix with W invertible. i. If W has r rows, what size are X, Y , and Z? ii. Find a U DL decomposition for M . In other words, ﬁll in the stars in the following equation: (X Y Z W ) = (I ∗ 0 I ) ( ∗ 0 0 ∗ ) ( I 0 ∗ I ) 3. Show that if M is a square matrix which is not invertible then either the matrix matrix U or the matrix L in the LU-decomposition M = LU has a zero on it’s diagonal. 4. Describe what upper and lower triangular matrices do to the unit hy- percube in their domain. 5. In chapter 3 we saw that, since in general row exchange matrices are necessary to achieve upper triangular form, LDP U factorization is the complete decomposition of an invertible matrix into EROs of various kinds. Suggest a procedure for using LDP U decompositions to solve linear systems that generalizes the procedure above. 6. Is there a reason to prefer LU decomposition to U L decomposition, or is the order just a convention? 7. If M is invertible then what are the LU, LDU, and LDP U decompo- sitions of M T in terms of the decompositions for M ? Can you do the same for M −1? 8. Argue that if M is symmetric then L = U T in the LDU decomposition of M . 167 168 Matrices 168 8 Determinants Given a square matrix, is there an easy way to know when it is invertible? Answering this fundamental question is the goal of this chapter. 8.1 The Determinant Formula The determinant boils down a square matrix to a a single number. That number determines whether the square matrix is invertible or not. Lets see how this works for small matrices ﬁrst. 8.1.1 Simple Examples For small cases, we already know when a matrix is invertible. If M is a 1 × 1 matrix, then M = (m) ⇒ M −1 = (1/m). Then M is invertible if and only if m ̸= 0. For M a 2 × 2 matrix, chapter 7 section 7.5 shows that if M = (m 1 1 m 1 2 m 2 1 m 2 2 ) , then M −1 = 1 m 1 1m2 2 − m 1 2m2 1 ( m 2 2 −m 1 2 −m 2 1 m 1 1 ) . Thus M is invertible if and only if 169 170 Determinants Figure 8.1: Memorize the determinant formula for a 2×2 matrix! m 1 1m 2 2 − m 1 2m 2 1 ̸= 0 . For 2 × 2 matrices, this quantity is called the determinant of M . det M = det ( m1 1 m 1 2 m2 1 m 2 2 ) = m 1 1m2 2 − m 1 2m2 1 . Example 101 For a 3 × 3 matrix, M =    m1 1 m1 2 m1 3 m2 1 m2 2 m2 3 m3 1 m3 2 m3 3    , then—see review question 1—M is non-singular if and only if: det M = m 1 1m 2 2m3 3 − m 1 1m2 3m 3 2 + m1 2m 2 3m 3 1 − m 1 2m 2 1m3 3 + m 1 3m2 1m 3 2 − m1 3m 2 2m3 1 ̸= 0. Notice that in the subscripts, each ordering of the numbers 1, 2, and 3 occurs exactly once. Each of these is a permutation of the set {1, 2, 3}. 8.1.2 Permutations Consider n objects labeled 1 through n and shuﬄe them. Each possible shuf- ﬂe is called a permutation. For example, here is an example of a permutation of 1–5: σ = [ 1 2 3 4 5 4 2 5 1 3 ] 170 8.1 The Determinant Formula 171 We can consider a permutation σ as an invertible function from the set of numbers [n] := {1, 2, . . . , n} to [n], so can write σ(3) = 5 in the above example. In general we can write [ 1 2 3 4 5 σ(1) σ(2) σ(3) σ(4) σ(5) ] , but since the top line of any permutation is always the same, we can omit it and just write: σ = [ σ(1) σ(2) σ(3) σ(4) σ(5) ] and so our example becomes simply σ = [4 2 5 1 3]. The mathematics of permutations is extensive; there are a few key prop- erties of permutations that we’ll need: • There are n! permutations of n distinct objects, since there are n choices for the ﬁrst object, n − 1 choices for the second once the ﬁrst has been chosen, and so on. • Every permutation can be built up by successively swapping pairs of objects. For example, to build up the permutation [ 3 1 2 ] from the trivial permutation [ 1 2 3 ] , you can ﬁrst swap 2 and 3, and then swap 1 and 3. • For any given permutation σ, there is some number of swaps it takes to build up the permutation. (It’s simplest to use the minimum number of swaps, but you don’t have to: it turns out that any way of building up the permutation from swaps will have have the same parity of swaps, either even or odd.) If this number happens to be even, then σ is called an even permutation; if this number is odd, then σ is an odd permutation. In fact, n! is even for all n ≥ 2, and exactly half of the permutations are even and the other half are odd. It’s worth noting that the trivial permutation (which sends i → i for every i) is an even permutation, since it uses zero swaps. Deﬁnition The sign function is a function sgn that sends permutations to the set {−1, 1} with rule of correspondence deﬁned by sgn(σ) = { 1 if σ is even −1 if σ is odd. 171 172 Determinants Permutation Example Reading homework: problem 1 We can use permutations to give a deﬁnition of the determinant. Deﬁnition The determinant of n × n matrix M is det M = ∑ σ sgn(σ) m1 σ(1)m 2 σ(2) · · · m n σ(n). The sum is over all permutations of n objects; a sum over the all elements of {σ : {1, . . . , n} → {1, . . . , n}}. Each summand is a product of n entries from the matrix with each factor from a diﬀerent row. In diﬀerent terms of the sum the column numbers are shuﬄed by diﬀerent permutations σ. The last statement about the summands yields a nice property of the determinant: Theorem 8.1.1. If M = (m i j) has a row consisting entirely of zeros, then mi σ(i) = 0 for every σ and some i. Moreover det M = 0. Example 102 Because there are many permutations of n, writing the determinant this way for a general matrix gives a very long sum. For n = 4, there are 24 = 4! permutations, and for n = 5, there are already 120 = 5! permutations. For a 4 × 4 matrix, M =      m1 1 m1 2 m1 3 m1 4 m2 1 m2 2 m2 3 m2 4 m3 1 m3 2 m3 3 m3 4 m4 1 m4 2 m4 3 m4 4     , then det M is: det M = m1 1m 2 2m 3 3m4 4 − m1 1m 2 3m 3 2m 4 4 − m 1 1m 2 2m3 4m 4 3 − m1 2m 2 1m 3 3m4 4 + m1 1m 2 3m3 4m 4 2 + m 1 1m 2 4m3 2m 4 3 + m1 2m 2 3m 3 1m4 4 + m 1 2m 2 1m3 4m 4 3 ± 16 more terms. 172 8.1 The Determinant Formula 173 This is very cumbersome. Luckily, it is very easy to compute the determinants of certain matrices. For example, if M is diagonal, meaning that M i j = 0 whenever i ̸= j, then all summands of the determinant involving oﬀ-diagonal entries vanish and det M = ∑ σ sgn(σ)m 1 σ(1)m2 σ(2) · · · mn σ(n) = m 1 1m 2 2 · · · m n n. The determinant of a diagonal matrix is the product of its diagonal entries. Since the identity matrix is diagonal with all diagonal entries equal to one, we have det I = 1. We would like to use the determinant to decide whether a matrix is in- vertible. Previously, we computed the inverse of a matrix by applying row operations. Therefore we ask what happens to the determinant when row operations are applied to a matrix. Swapping rows Lets swap rows i and j of a matrix M and then compute its determi- nant. For the permutation σ, let ˆσ be the permutation obtained by swapping positions i and j. Clearly sgn(ˆσ) = −sgn(σ) . Let M ′ be the matrix M with rows i and j swapped. Then (assuming i < j): det M ′ = ∑ σ sgn(σ) m 1 σ(1) · · · m j σ(i) · · · m i σ(j) · · · mn σ(n) = ∑ σ sgn(σ) m 1 σ(1) · · · m i σ(j) · · · mj σ(i) · · · mn σ(n) = ∑ σ (−sgn(ˆσ)) m1 ˆσ(1) · · · mi ˆσ(i) · · · m j ˆσ(j) · · · m n ˆσ(n) = − ∑ ˆσ sgn(ˆσ) m 1 ˆσ(1) · · · m i ˆσ(i) · · · m j ˆσ(j) · · · mn ˆσ(n) = − det M. The step replacing ∑ σ by ∑ˆσ often causes confusion; it holds since we sum over all permutations (see review problem 3). Thus we see that swapping rows changes the sign of the determinant. I.e., det M ′ = − det M . 173 174 Determinants Figure 8.2: Remember what row swap does to determinants! Reading homework: problem 8.2 Applying this result to M = I (the identity matrix) yields det Ei j = −1 , where the matrix Ei j is the identity matrix with rows i and j swapped. It is a row swap elementary matrix. This implies another nice property of the determinant. If two rows of the matrix are identical, then swapping the rows changes the sign of the matrix, but leaves the matrix unchanged. Then we see the following: Theorem 8.1.2. If M has two identical rows, then det M = 0. 8.2 Elementary Matrices and Determinants In chapter 2 we found the matrices that perform the row operations involved in Gaussian elimination; we called them elementary matrices. As a reminder, for any matrix M , and a matrix M ′ equal to M after a row operation, multiplying by an elementary matrix E gave M ′ = EM . Elementary Matrices We now examine what the elementary matrices to do determinants. 174 8.2 Elementary Matrices and Determinants 175 8.2.1 Row Swap Our ﬁrst elementary matrix swaps rows i and j when it is applied to a matrix M . Explicitly, let R1 through Rn denote the rows of M , and let M ′ be the matrix M with rows i and j swapped. Then M and M ′ can be regarded as a block matrices (where the blocks are rows); M =         ... Ri ... Rj ...         and M ′ =         ... Rj ... Ri ...         . Then notice that M ′ =             ... Rj ... Ri ...             =             1 . . . 0 1 . . . 1 0 . . . 1                         ... Ri ... Rj ...             . The matrix             1 . . . 0 1 . . . 1 0 . . . 1             =: Ei j is just the identity matrix with rows i and j swapped. The matrix Ei j is an elementary matrix and M ′ = Ei jM . Because det I = 1 and swapping a pair of rows changes the sign of the determinant, we have found that det Ei j = −1 . 175 176 Determinants Now we know that swapping a pair of rows ﬂips the sign of the determi- nant so det M ′ = −detM . But det Ei j = −1 and M ′ = Ei jM so det Ei jM = det Ei j det M . This result hints at a general rule for determinants of products of matrices. 8.2.2 Row Multiplication The next row operation is multiplying a row by a scalar. Consider M =    R1 ... Rn    , where Ri are row vectors. Let Ri(λ) be the identity matrix, with the ith diagonal entry replaced by λ, not to be confused with the row vectors. I.e., Ri(λ) =        1 . . . λ . . . 1        . Then: M ′ = Ri(λ)M =        R1 ... λRi ... Rn        , equals M with one row multiplied by λ. What eﬀect does multiplication by the elementary matrix Ri(λ) have on the determinant? det M ′ = ∑ σ sgn(σ)m 1 σ(1) · · · λm i σ(i) · · · mn σ(n) = λ ∑ σ sgn(σ)m 1 σ(1) · · · m i σ(i) · · · m n σ(n) = λ det M 176 8.2 Elementary Matrices and Determinants 177 Figure 8.3: Rescaling a row rescales the determinant. Thus, multiplying a row by λ multiplies the determinant by λ. I.e., det Ri(λ)M = λ det M . Since Ri(λ) is just the identity matrix with a single row multiplied by λ, then by the above rule, the determinant of Ri(λ) is λ. Thus det Ri(λ) = det        1 . . . λ . . . 1        = λ , and once again we have a product of determinants formula det ( Ri(λ)M ) = det ( Ri(λ) ) det M. 8.2.3 Row Addition The ﬁnal row operation is adding µRj to Ri. This is done with the elementary matrix Si j(µ), which is an identity matrix but with an additional µ in the i, j position; 177 178 Determinants Si j(µ) =             1 . . . 1 µ . . . 1 . . . 1             . Then multiplying M by Si j(µ) performs a row addition;             1 . . . 1 µ . . . 1 . . . 1                         ... Ri ... Rj ...             =             ... Ri + µRj ... Rj ...             . What is the eﬀect of multiplying by Si j(µ) on the determinant? Let M ′ = Si j(µ)M , and let M ′′ be the matrix M but with Ri replaced by Rj Then det M ′ = ∑ σ sgn(σ)m 1 σ(1) · · · (m i σ(i) + µmj σ(i)) · · · m n σ(n) = ∑ σ sgn(σ)m 1 σ(1) · · · m i σ(i) · · · m n σ(n) + ∑ σ sgn(σ)m 1 σ(1) · · · µm j σ(j) · · · m j σ(j) · · · m n σ(n) = det M + µ det M ′′ Since M ′′ has two identical rows, its determinant is 0 so det M ′ = det M, when M ′ is obtained from M by adding µ times row j to row i. Reading homework: problem 3 178 8.2 Elementary Matrices and Determinants 179 Figure 8.4: Adding one row to another leaves the determinant unchanged. We also have learnt that det (Si j(µ)M ) = det M . Notice that if M is the identity matrix, then we have det Si j(µ) = det(Si j(µ)I) = det I = 1 . 8.2.4 Determinant of Products In summary, the elementary matrices for each of the row operations obey Ei j = I with rows i, j swapped; det Ei j = −1 Ri(λ) = I with λ in position i, i; det Ri(λ) = λ Si j(µ) = I with µ in position i, j; det Si j(µ) = 1 Elementary Determinants Moreover we found a useful formula for determinants of products: Theorem 8.2.1. If E is any of the elementary matrices Ei j, Ri(λ), Si j(µ), then det(EM ) = det E det M . 179 180 Determinants We have seen that any matrix M can be put into reduced row echelon form via a sequence of row operations, and we have seen that any row operation can be achieved via left matrix multiplication by an elementary matrix. Suppose that RREF(M ) is the reduced row echelon form of M . Then RREF(M ) = E1E2 · · · EkM , where each Ei is an elementary matrix. We know how to compute determi- nants of elementary matrices and products thereof, so we ask: What is the determinant of a square matrix in reduced row echelon form? The answer has two cases: 1. If M is not invertible, then some row of RREF(M ) contains only zeros. Then we can multiply the zero row by any constant λ without chang- ing M ; by our previous observation, this scales the determinant of M by λ. Thus, if M is not invertible, det RREF(M ) = λ det RREF(M ), and so det RREF(M ) = 0. 2. Otherwise, every row of RREF(M ) has a pivot on the diagonal; since M is square, this means that RREF(M ) is the identity matrix. So if M is invertible, det RREF(M ) = 1. Notice that because det RREF(M ) = det(E1E2 · · · EkM ), by the theorem above, det RREF(M ) = det(E1) · · · det(Ek) det M . Since each Ei has non-zero determinant, then det RREF(M ) = 0 if and only if det M = 0. This establishes an important theorem: Theorem 8.2.2. For any square matrix M , det M ̸= 0 if and only if M is invertible. Since we know the determinants of the elementary matrices, we can im- mediately obtain the following: Determinants and Inverses 180 8.2 Elementary Matrices and Determinants 181 Figure 8.5: Determinants measure if a matrix is invertible. Corollary 8.2.3. Any elementary matrix Ei j, Ri(λ), Si j(µ) is invertible, ex- cept for Ri(0). In fact, the inverse of an elementary matrix is another ele- mentary matrix. To obtain one last important result, suppose that M and N are square n × n matrices, with reduced row echelon forms such that, for elementary matrices Ei and Fi, M = E1E2 · · · Ek RREF(M ) , and N = F1F2 · · · Fl RREF(N ) . If RREF(M ) is the identity matrix (i.e., M is invertible), then: det(M N ) = det(E1E2 · · · Ek RREF(M )F1F2 · · · Fl RREF(N )) = det(E1E2 · · · EkIF1F2 · · · Fl RREF(N )) = det(E1) · · · det(Ek) det(I) det(F1) · · · det(Fl) det RREF(N ) = det(M ) det(N ) Otherwise, M is not invertible, and det M = 0 = det RREF(M ). Then there exists a row of zeros in RREF(M ), so Rn(λ) RREF(M ) = RREF(M ) for any λ. Then: det(M N ) = det(E1E2 · · · Ek RREF(M )N ) = det(E1) · · · det(Ek) det(RREF(M )N ) = det(E1) · · · det(Ek) det(Rn(λ) RREF(M )N ) = det(E1) · · · det(Ek)λ det(RREF(M )N ) = λ det(M N ) 181 182 Determinants Figure 8.6: “The determinant of a product is the product of determinants.” Which implies that det(M N ) = 0 = det M det N . Thus we have shown that for any matrices M and N , det(M N ) = det M det N This result is extremely important; do not forget it! Alternative proof Reading homework: problem 4 8.3 Review Problems Webwork: Reading Problems 1 , 2 , 3 , 4 2 × 2 Determinant 7 Determinants and invertibility 8, 9, 10, 11 1. Let M =    m 1 1 m 1 2 m1 3 m 2 1 m 2 2 m2 3 m 3 1 m 3 2 m3 3    . 182 8.3 Review Problems 183 Use row operations to put M into row echelon form. For simplicity, assume that m 1 1 ̸= 0 ̸= m 1 1m 2 2 − m 2 1m 1 2. Prove that M is non-singular if and only if: m1 1m 2 2m3 3 − m 1 1m2 3m 3 2 + m 1 2m 2 3m3 1 − m1 2m 2 1m 3 3 + m 1 3m 2 1m 3 2 − m 1 3m 2 2m3 1 ̸= 0 2. (a) What does the matrix E1 2 = ( 0 1 1 0 ) do to M = ( a b d c ) under left multiplication? What about right multiplication? (b) Find elementary matrices R1(λ) and R2(λ) that respectively mul- tiply rows 1 and 2 of M by λ but otherwise leave M the same under left multiplication. (c) Find a matrix S1 2(λ) that adds a multiple λ of row 2 to row 1 under left multiplication. 3. Let ˆσ denote the permutation obtained from σ by transposing the ﬁrst two outputs, i.e. ˆσ(1) = σ(2) and ˆσ(2) = σ(1). Suppose the function f : {1, 2, 3, 4} → R. Write out explicitly the following two sums: ∑ σ f (σ(s)) and ∑ σ f (ˆσ(s) ) . What do you observe? Now write a brief explanation why the following equality holds ∑ σ F (σ) = ∑ σ F (ˆσ) , where the domain of the function F is the set of all permutations of n objects and ˆσ is related to σ by swapping a given pair of objects. 4. Let M be a matrix and Si jM the same matrix with rows i and j switched. Explain every line of the series of equations proving that det M = − det(Si jM ). 5. Let M ′ be the matrix obtained from M by swapping two columns i and j. Show that det M ′ = − det M . 6. The scalar triple product of three vectors u, v, w from R 3 is u · (v × w). Show that this product is the same as the determinant of the matrix whose columns are u, v, w (in that order). What happens to the scalar triple product when the factors are permuted? 183 184 Determinants 7. Show that if M is a 3 × 3 matrix whose third row is a sum of multiples of the other rows (R3 = aR2 + bR1) then det M = 0. Show that the same is true if one of the columns is a sum of multiples of the others. 8. Calculate the determinant below by factoring the matrix into elemen- tary matrices times simpler matrices and using the trick det(M ) = det(E−1EM ) = det(E−1) det(EM ) . Explicitly show each ERO matrix. det  2 1 0 4 3 1 2 2 2   9. Let M = (a b c d ) and N = ( x y z w ) . Compute the following: (a) det M . (b) det N . (c) det(M N ). (d) det M det N . (e) det(M −1) assuming ad − bc ̸= 0. (f) det(M T ) (g) det(M + N ) − (det M + det N ). Is the determinant a linear trans- formation from square matrices to real numbers? Explain. 10. Suppose M = ( a b c d ) is invertible. Write M as a product of elemen- tary row matrices times RREF(M ). 11. Find the inverses of each of the elementary matrices, Ei j, Ri(λ), Si j(λ). Make sure to show that the elementary matrix times its inverse is ac- tually the identity. 12. Let e i j denote the matrix with a 1 in the i-th row and j-th column and 0’s everywhere else, and let A be an arbitrary 2 × 2 matrix. Com- pute det(A + tI2). What is the ﬁrst order term (the t 1 term)? Can you 184 8.3 Review Problems 185 express your results in terms of tr(A)? What about the ﬁrst order term in det(A + tIn) for any arbitrary n × n matrix A in terms of tr(A)? Note that the result of det(A + tI2) is a polynomial in the variable t known as the characteristic polynomial. 13. (Directional) Derivative of the determinant: Notice that det : Mn n → R (where Mn n is the vector space of all n × n matrices) det is a function of n2 variables so we can take directional derivatives of det. Let A be an arbitrary n × n matrix, and for all i and j compute the following: (a) lim t→0 det(I2 + te i j) − det(I2) t (b) lim t→0 det(I3 + te i j) − det(I3) t (c) lim t→0 det(In + te i j) − det(In) t (d) lim t→0 det(In + At) − det(In) t Note, these are the directional derivative in the ei j and A directions. 14. How many functions are in the set {f : {1, . . . , n} → {1, . . . , n}|f −1 exists} ? What about the set {1, . . . , n} {1,...,n} ? Which of these two sets correspond to the set of all permutations of n objects? 185 186 Determinants 8.4 Properties of the Determinant We now know that the determinant of a matrix is non-zero if and only if that matrix is invertible. We also know that the determinant is a multiplicative function, in the sense that det(M N ) = det M det N . Now we will devise some methods for calculating the determinant. Recall that: det M = ∑ σ sgn(σ)m 1 σ(1)m 2 σ(2) · · · mn σ(n). A minor of an n × n matrix M is the determinant of any square matrix obtained from M by deleting one row and one column. In particular, any entry m i j of a square matrix M is associated to a minor obtained by deleting the ith row and jth column of M . It is possible to write the determinant of a matrix in terms of its minors as follows: det M = ∑ σ sgn(σ) m1 σ(1)m 2 σ(2) · · · m n σ(n) = m 1 1 ∑ /σ1 sgn(/σ1) m2 /σ1(2) · · · mn /σ1(n) + m 1 2 ∑ /σ2 sgn(/σ2) m2 /σ2(1)m 3 /σ2(3) · · · m n /σ2(n) + m 1 3 ∑ /σ3 sgn(/σ3) m2 /σ3(1)m 3 /σ3(2)m 4 /σ3(4) · · · m n /σ3(n) + · · · Here the symbols /σk refers to the permutation σ with the input k removed. The summand on the j’th line of the above formula looks like the determinant of the minor obtained by removing the ﬁrst and j’th column of M . However we still need to replace sum of /σj by a sum over permutations of column numbers of the matrix entries of this minor. This costs a minus sign whenever j − 1 is odd. In other words, to expand by minors we pick an entry m 1 j of the ﬁrst row, then add (−1) j−1 times the determinant of the matrix with row i and column j deleted. An example will probably help: 186 8.4 Properties of the Determinant 187 Example 103 Let’s compute the determinant of M =  1 2 3 4 5 6 7 8 9   using expansion by minors: det M = 1 det ( 5 6 8 9 ) − 2 det ( 4 6 7 9 ) + 3 det ( 4 5 7 8 ) = 1(5 · 9 − 8 · 6) − 2(4 · 9 − 7 · 6) + 3(4 · 8 − 7 · 5) = 0 Here, M −1 does not exist because1 det M = 0. Example 104 Sometimes the entries of a matrix allow us to simplify the calculation of the determinant. Take N =  1 2 3 4 0 0 7 8 9  . Notice that the second row has many zeros; then we can switch the ﬁrst and second rows of N before expanding in minors to get: det  1 2 3 4 0 0 7 8 9   = − det  4 0 0 1 2 3 7 8 9   = −4 det ( 2 3 8 9 ) = 24 Example Since we know how the determinant of a matrix changes when you perform row operations, it is often very beneﬁcial to perform row operations before computing the determinant by brute force. 1A fun exercise is to compute the determinant of a 4 × 4 matrix ﬁlled in order, from left to right, with the numbers 1, 2, 3, . . . , 16. What do you observe? Try the same for a 5 × 5 matrix with 1, 2, 3, . . . , 25. Is there a pattern? Can you explain it? 187 188 Determinants Example 105 det   1 2 3 4 5 6 7 8 9   = det   1 2 3 3 3 3 6 6 6   = det   1 2 3 3 3 3 0 0 0   = 0 . Try to determine which row operations we made at each step of this computation. You might suspect that determinants have similar properties with respect to columns as what applies to rows: If M is a square matrix then det M T = det M . Proof. By deﬁnition, det M = ∑ σ sgn(σ)m 1 σ(1)m 2 σ(2) · · · mn σ(n). For any permutation σ, there is a unique inverse permutation σ−1 that undoes σ. If σ sends i → j, then σ−1 sends j → i. In the two-line notation for a permutation, this corresponds to just ﬂipping the permutation over. For example, if σ = [1 2 3 2 3 1 ], then we can ﬁnd σ−1 by ﬂipping the permutation and then putting the columns in order: σ−1 = [2 3 1 1 2 3 ] = [1 2 3 3 1 2 ] . Since any permutation can be built up by transpositions, one can also ﬁnd the inverse of a permutation σ by undoing each of the transpositions used to build up σ; this shows that one can use the same number of transpositions to build σ and σ−1. In particular, sgn σ = sgn σ−1. Reading homework: problem 5 188 8.4 Properties of the Determinant 189 Figure 8.7: Transposes leave the determinant unchanged. Then we can write out the above in formulas as follows: det M = ∑ σ sgn(σ)m1 σ(1)m 2 σ(2) · · · m n σ(n) = ∑ σ sgn(σ)mσ−1(1) 1 m σ−1(2) 2 · · · m σ−1(n) n = ∑ σ sgn(σ−1)m σ−1(1) 1 m σ−1(2) 2 · · · m σ−1(n) n = ∑ σ sgn(σ)mσ(1) 1 m σ(2) 2 · · · m σ(n) n = det M T . The second-to-last equality is due to the existence of a unique inverse permu- tation: summing over permutations is the same as summing over all inverses of permutations (see review problem 3). The ﬁnal equality is by the deﬁnition of the transpose. Example 106 Because of this, we see that expansion by minors also works over columns. Let M =   1 2 3 0 5 6 0 8 9   . Then det M = det M T = 1 det (5 8 6 9 ) = −3 . 189 190 Determinants 8.4.1 Determinant of the Inverse Let M and N be n × n matrices. We previously showed that det(M N ) = det M det N , and det I = 1. Then 1 = det I = det(M M −1) = det M det M −1. As such we have: Theorem 8.4.1. det M −1 = 1 det M 8.4.2 Adjoint of a Matrix Recall that for a 2 × 2 matrix ( d −b −c a ) ( a b c d ) = det (a b c d ) I . Or in a more careful notation: if M = (m 1 1 m 1 2 m 2 1 m 2 2 ) , then M −1 = 1 m 1 1m2 2 − m 1 2m2 1 ( m 2 2 −m 1 2 −m 2 1 m 1 1 ) , so long as det M = m1 1m 2 2 − m 1 2m2 1 ̸= 0. The matrix ( m 2 2 −m 1 2 −m 2 1 m 1 1 ) that appears above is a special matrix, called the adjoint of M . Let’s deﬁne the adjoint for an n × n matrix. The cofactor of M corresponding to the entry m i j of M is the product of the minor associated to mi j and (−1)i+j. This is written cofactor(mi j). 190 8.4 Properties of the Determinant 191 Deﬁnition For M = (mi j) a square matrix, the adjoint matrix adj M is given by adj M = (cofactor(m i j)) T . Example 107 adj   3 −1 −1 1 2 0 0 1 1   =           det ( 2 0 1 1 ) − det (1 0 0 1 ) det (1 2 0 1 ) − det (−1 −1 1 1 ) det ( 3 −1 0 1 ) − det (3 −1 0 1 ) det (−1 −1 2 0 ) − det ( 3 −1 1 0 ) det (3 −1 1 2 )           T Reading homework: problem 6 Let’s compute the product M adj M . For any matrix N , the i, j entry of M N is given by taking the dot product of the ith row of M and the jth column of N . Notice that the dot product of the ith row of M and the ith column of adj M is just the expansion by minors of det M in the ith row. Further, notice that the dot product of the ith row of M and the jth column of adj M with j ̸= i is the same as expanding M by minors, but with the jth row replaced by the ith row. Since the determinant of any matrix with a row repeated is zero, then these dot products are zero as well. We know that the i, j entry of the product of two matrices is the dot product of the ith row of the ﬁrst by the jth column of the second. Then: M adj M = (det M )I Thus, when det M ̸= 0, the adjoint gives an explicit formula for M −1. Theorem 8.4.2. For M a square matrix with det M ̸= 0 (equivalently, if M is invertible), then M −1 = 1 det M adj M The Adjoint Matrix 191 192 Determinants Example 108 Continuing with the previous example, adj  3 −1 −1 1 2 0 0 1 1   =   2 0 2 −1 3 −1 1 −3 7   . Now, multiply:   3 −1 −1 1 2 0 0 1 1     2 0 2 −1 3 −1 1 −3 7   =  6 0 0 0 6 0 0 0 6   ⇒  3 −1 −1 1 2 0 0 1 1   −1 = 1 6   2 0 2 −1 3 −1 1 −3 7   This process for ﬁnding the inverse matrix is sometimes called Cramer’s Rule . 8.4.3 Application: Volume of a Parallelepiped Given three vectors u, v, w in R 3, the parallelepiped determined by the three vectors is the “squished” box whose edges are parallel to u, v, and w as depicted in Figure 8.8. You probably learnt in a calculus course that the volume of this object is |u (v × w)|. This is the same as expansion by minors of the matrix whose columns are u, v, w. Then: Volume = ∣ ∣ det ( u v w) ∣ ∣ 192 8.5 Review Problems 193 Figure 8.8: A parallelepiped. 8.5 Review Problems Webwork: Reading Problems 5 ,6 Row of zeros 12 3 × 3 determinant 13 Triangular determinants 14,15,16,17 Expanding in a column 18 Minors and cofactors 19 1. Find the determinant via expanding by minors.     2 1 3 7 6 1 4 4 2 1 8 0 1 0 2 0     2. Even if M is not a square matrix, both M M T and M T M are square. Is it true that det(M M T ) = det(M T M ) for all matrices M ? How about tr(M M T ) = tr(M T M )? 193 194 Determinants 3. Let σ−1 denote the inverse permutation of σ. Suppose the function f : {1, 2, 3, 4} → R. Write out explicitly the following two sums: ∑ σ f ( σ(s) ) and ∑ σ f (σ−1(s) ) . What do you observe? Now write a brief explanation why the following equality holds ∑ σ F (σ) = ∑ σ F (σ−1) , where the domain of the function F is the set of all permutations of n objects. 4. Suppose M = LU is an LU decomposition. Explain how you would eﬃciently compute det M in this case. How does this decomposition allow you to easily see if M is invertible? 5. In computer science, the complexity of an algorithm is (roughly) com- puted by counting the number of times a given operation is performed. Suppose adding or subtracting any two numbers takes a seconds, and multiplying two numbers takes m seconds. Then, for example, com- puting 2 · 6 − 5 would take a + m seconds. (a) How many additions and multiplications does it take to compute the determinant of a general 2 × 2 matrix? (b) Write a formula for the number of additions and multiplications it takes to compute the determinant of a general n × n matrix using the deﬁnition of the determinant as a sum over permutations. Assume that ﬁnding and multiplying by the sign of a permutation is free. (c) How many additions and multiplications does it take to compute the determinant of a general 3 × 3 matrix using expansion by minors? Assuming m = 2a, is this faster than computing the determinant from the deﬁnition? Hint 194 9 Subspaces and Spanning Sets It is time to study vector spaces more carefully and return to some funda- mental questions: 1. Subspaces: When is a subset of a vector space itself a vector space? (This is the notion of a subspace.) 2. Linear Independence: Given a collection of vectors, is there a way to tell whether they are independent, or if one is a “linear combination” of the others? 3. Dimension: Is there a consistent deﬁnition of how “big” a vector space is? 4. Basis: How do we label vectors? Can we write any vector as a sum of some basic set of vectors? How do we change our point of view from vectors labeled one way to vectors labeled in another way? Let’s start at the top! 9.1 Subspaces Deﬁnition We say that a subset U of a vector space V is a subspace of V if U is a vector space under the inherited addition and scalar multiplication operations of V . 195 196 Subspaces and Spanning Sets Example 109 Consider a plane P in R3 through the origin: ax + by + cz = 0. This equation can be expressed as the homogeneous system (a b c)   x y z   = 0, or M X = 0 with M the matrix (a b c). If X1 and X2 are both solutions to M X = 0, then, by linearity of matrix multiplication, so is µX1 + νX2: M (µX1 + νX2) = µM X1 + νM X2 = 0. So P is closed under addition and scalar multiplication. Additionally, P contains the origin (which can be derived from the above by setting µ = ν = 0). All other vector space requirements hold for P because they hold for all vectors in R3. Theorem 9.1.1 (Subspace Theorem). Let U be a non-empty subset of a vector space V . Then U is a subspace if and only if µu1 + νu2 ∈ U for arbitrary u1, u2 in U , and arbitrary constants µ, ν. Proof. One direction of this proof is easy: if U is a subspace, then it is a vector space, and so by the additive closure and multiplicative closure properties of vector spaces, it has to be true that µu1 + νu2 ∈ U for all u1, u2 in U and all constants constants µ, ν. The other direction is almost as easy: we need to show that if µu1 +νu2 ∈ U for all u1, u2 in U and all constants µ, ν, then U is a vector space. That is, we need to show that the ten properties of vector spaces are satisﬁed. We already know that the additive closure and multiplicative closure properties are satisﬁed. Further, U has all of the other eight properties because V has them. 196 9.2 Building Subspaces 197 Note that the requirements of the subspace theorem are often referred to as “closure”. We can use this theorem to check if a set is a vector space. That is, if we have some set U of vectors that come from some bigger vector space V , to check if U itself forms a smaller vector space we need check only two things: 1. If we add any two vectors in U , do we end up with a vector in U ? 2. If we multiply any vector in U by any constant, do we end up with a vector in U ? If the answer to both of these questions is yes, then U is a vector space. If not, U is not a vector space. Reading homework: problem 1 9.2 Building Subspaces Consider the set U =     1 0 0   ,  0 1 0      ⊂ R3. Because U consists of only two vectors, it clear that U is not a vector space, since any constant multiple of these vectors should also be in U . For example, the 0-vector is not in U , nor is U closed under vector addition. But we know that any two vectors deﬁne a plane: 197 198 Subspaces and Spanning Sets In this case, the vectors in U deﬁne the xy-plane in R3. We can view the xy-plane as the set of all vectors that arise as a linear combination of the two vectors in U . We call this set of all linear combinations the span of U : span(U ) =   x  1 0 0   + y  0 1 0   ∣ ∣ ∣ ∣ ∣ ∣x, y ∈ R    . Notice that any vector in the xy-plane is of the form  x y 0   = x  1 0 0   + y   0 1 0   ∈ span(U ). Deﬁnition Let V be a vector space and S = {s1, s2, . . .} ⊂ V a subset of V . Then the span of S, denoted span(S), is the set span(S) := {r1s1 + r2s2 + · · · + rN sN | ri ∈ R, N ∈ N}. That is, the span of S is the set of all ﬁnite linear combinations1 of elements of S. Any ﬁnite sum of the form “a constant times s1 plus a constant times s2 plus a constant times s3 and so on” is in the span of S. 2. Example 110 Let V = R3 and X ⊂ V be the x-axis. Let P =  0 1 0  , and set S = X ∪ {P } . The vector  2 3 0   is in span(S), because   2 3 0   =   2 0 0   + 3  0 1 0   . Similarly, the vector   −12 17.5 0   is in span(S), because  −12 17.5 0   =   −12 0 0  +17.5   0 1 0   . Similarly, any vector 1Usually our vector spaces are deﬁned over R, but in general we can have vector spaces deﬁned over diﬀerent base ﬁelds such as C or Z2. The coeﬃcients ri should come from whatever our base ﬁeld is (usually R). 2It is important that we only allow ﬁnitely many terms in our linear combinations; in the deﬁnition above, N must be a ﬁnite number. It can be any ﬁnite number, but it must be ﬁnite. We can relax the requirement that S = {s1, s2, . . .} and just let S be any set of vectors. Then we shall write span(S) := {r1s1 +r2s2 +· · ·+rN sN | ri ∈ R, si ∈ S, N ∈ N, } 198 9.2 Building Subspaces 199 of the form  x 0 0   + y  0 1 0   =  x y 0   is in span(S). On the other hand, any vector in span(S) must have a zero in the z-coordinate. (Why?) So span(S) is the xy-plane, which is a vector space. (Try drawing a picture to verify this!) Reading homework: problem 2 Lemma 9.2.1. For any subset S ⊂ V , span(S) is a subspace of V . Proof. We need to show that span(S) is a vector space. It suﬃces to show that span(S) is closed under linear combinations. Let u, v ∈ span(S) and λ, µ be constants. By the deﬁnition of span(S), there are constants ci and di (some of which could be zero) such that: u = c1s1 + c2s2 + · · · v = d 1s1 + d2s2 + · · · ⇒ λu + µv = λ(c1s1 + c2s2 + · · · ) + µ(d1s1 + d 2s2 + · · · ) = (λc 1 + µd 1)s1 + (λc 2 + µd2)s2 + · · · This last sum is a linear combination of elements of S, and is thus in span(S). Then span(S) is closed under linear combinations, and is thus a subspace of V . Note that this proof, like many proofs, consisted of little more than just writing out the deﬁnitions. Example 111 For which values of a does span     1 0 a   ,   1 2 −3   ,  a 1 0      = R3? Given an arbitrary vector  x y z   in R3, we need to ﬁnd constants r1, r2, r3 such that 199 200 Subspaces and Spanning Sets r1  1 0 a   + r2   1 2 −3   + r3  a 1 0   =  x y z   . We can write this as a linear system in the unknowns r1, r2, r3 as follows:  1 1 a 0 2 1 a −3 0    r1 r2 r3   =   x y z   . If the matrix M =  1 1 a 0 2 1 a −3 0   is invertible, then we can ﬁnd a solution M −1  x y z   =  r1 r2 r3   for any vector  x y z   ∈ R3. Therefore we should choose a so that M is invertible: i.e., 0 ̸= det M = −2a2 + 3 + a = −(2a − 3)(a + 1). Then the span is R3 if and only if a ̸= −1, 3 2 . Linear systems as spanning sets Some other very important ways of building subspaces are given in the following examples. Example 112 (The kernel of a linear map). Suppose L : U → V is a linear map between vector spaces. Then if L(u) = 0 = L(u ′) , linearity tells us that L(αu + βu ′) = αL(u) + βL(u ′) = α0 + β0 = 0 . 200 9.2 Building Subspaces 201 Hence, thanks to the subspace theorem, the set of all vectors in U that are mapped to the zero vector is a subspace of V . It is called the kernel of L: kerL := {u ∈ U |L(u) = 0} ⊂ U. Note that ﬁnding a kernel means ﬁnding a solution to a homogeneous linear equation. Example 113 (The image of a linear map). Suppose L : U → V is a linear map between vector spaces. Then if v = L(u) and v′ = L(u ′) , linearity tells us that αv + βv′ = αL(u) + βL(u ′) = L(αu + βu ′) . Hence, calling once again on the subspace theorem, the set of all vectors in V that are obtained as outputs of the map L is a subspace. It is called the image of L: imL := {L(u) | u ∈ U } ⊂ V. Example 114 (An eigenspace of a linear map). Suppose L : V → V is a linear map and V is a vector space. Then if L(u) = λu and L(v) = λv , linearity tells us that L(αu + βv) = αL(u) + βL(v) = αL(u) + βL(v) = αλu + βλv = λ(αu + βv) . Hence, again by subspace theorem, the set of all vectors in V that obey the eigenvector equation L(v) = λv is a subspace of V . It is called an eigenspace Vλ := {v ∈ V |L(v) = λv}. For most scalars λ, the only solution to L(v) = λv will be v = 0, which yields the trivial subspace {0}. When there are nontrivial solutions to L(v) = λv, the number λ is called an eigenvalue, and carries essential information about the map L. Kernels, images and eigenspaces are discussed in great depth in chap- ters 16 and 12. 201 202 Subspaces and Spanning Sets 9.3 Review Problems Webwork: Reading Problems 1 , 2 Subspaces 3, 4, 5, 6 Spans 7, 8 1. Determine if x − x3 ∈ span{x2, 2x + x2, x + x3}. 2. Let U and W be subspaces of V . Are: (a) U ∪ W (b) U ∩ W also subspaces? Explain why or why not. Draw examples in R3. Hint 3. Let L : R3 → R 3 where L(x, y, z) = (x + 2y + z, 2x + y + z, 0) . Find kerL, imL and the eigenspaces R 3 −1, R 3 3. Your answers should be subsets of R 3. Express them using span notation. 202 10 Linear Independence Consider a plane P that includes the origin in R 3 and non-zero vectors {u, v, w} in P . If no two of u, v and w are parallel, then P = span{u, v, w}. But any two vectors determines a plane, so we should be able to span the plane using only two of the vectors u, v, w. Then we could choose two of the vectors in {u, v, w} whose span is P , and express the other as a linear combination of those two. Suppose u and v span P . Then there exist constants d1, d 2 (not both zero) such that w = d1u + d2v. Since w can be expressed in terms of u and v we say that it is not independent. More generally, the relationship c1u + c2v + c3w = 0 ci ∈ R, some ci ̸= 0 expresses the fact that u, v, w are not all independent. 203 204 Linear Independence Deﬁnition We say that the vectors v1, v2, . . . , vn are linearly dependent if there exist constants 1 c1, c 2, . . . , cn not all zero such that c1v1 + c2v2 + · · · + cnvn = 0. Otherwise, the vectors v1, v2, . . . , vn are linearly independent. Remark The zero vector 0V can never be on a list of independent vectors because α0V = 0V for any scalar α. Example 115 Consider the following vectors in R3: v1 =   4 −1 3   , v2 =   −3 7 4   , v3 =   5 12 17   , v4 =  −1 1 0   . Are these vectors linearly independent? No, since 3v1 + 2v2 − v3 + v4 = 0, the vectors are linearly dependent. Worked Example 10.1 Showing Linear Dependence In the above example we were given the linear combination 3v1 +2v2 −v3 +v4 seemingly by magic. The next example shows how to ﬁnd such a linear combination, if it exists. Example 116 Consider the following vectors in R3: v1 =   0 0 1   , v2 =   1 2 1   , v3 =   1 2 3   . Are they linearly independent? We need to see whether the system c 1v1 + c 2v2 + c 3v3 = 0 1Usually our vector spaces are deﬁned over R, but in general we can have vector spaces deﬁned over diﬀerent base ﬁelds such as C or Z2. The coeﬃcients c i should come from whatever our base ﬁeld is (usually R). 204 10.1 Showing Linear Dependence 205 has any solutions for c1, c2, c3. We can rewrite this as a homogeneous system by building a matrix whose columns are the vectors v1, v2 and v3: (v1 v2 v3)   c1 c2 c3   = 0. This system has solutions if and only if the matrix M = (v1 v2 v3) is singular, so we should ﬁnd the determinant of M : det M = det   0 1 1 0 2 2 1 1 3   = det ( 1 1 2 2 ) = 0. Therefore nontrivial solutions exist. At this point we know that the vectors are linearly dependent. If we need to, we can ﬁnd coeﬃcients that demonstrate linear dependence by solving   0 1 1 0 0 2 2 0 1 1 3 0   ∼   1 1 3 0 0 1 1 0 0 0 0 0   ∼   1 0 2 0 0 1 1 0 0 0 0 0   . The solution set {µ(−2, −1, 1) | µ ∈ R} encodes the linear combinations equal to zero; any choice of µ will produce coeﬃcients c1, c2, c3 that satisfy the linear homogeneous equation. In particular, µ = 1 corresponds to the equation c 1v1 + c 2v2 + c 3v3 = 0 ⇒ −2v1 − v2 + v3 = 0. Reading homework: problem 1 Deﬁnition Any sum of vectors v1, . . . , vk multiplied by scalars c1, . . . , ck, namely c1v1 + · · · + ckvk , is called a linear combination of v1, . . . , vk. Theorem 10.1.1 (Linear Dependence). An ordered set of non-zero vectors (v1, . . . , vn) is linearly dependent if and only if one of the vectors vk is ex- pressible as a linear combination of the preceding vectors. Proof. The theorem is an if and only if statement, so there are two things to show. 205 206 Linear Independence i. First, we show that if vk = c1v1 + · · · ck−1vk−1 then the set is linearly dependent. This is easy. We just rewrite the assumption: c1v1 + · · · + ck−1vk−1 − vk + 0vk+1 + · · · + 0vn = 0. This is a vanishing linear combination of the vectors {v1, . . . , vn} with not all coeﬃcients equal to zero, so {v1, . . . , vn} is a linearly dependent set. ii. Now we show that linear dependence implies that there exists k for which vk is a linear combination of the vectors {v1, . . . , vk−1}. The assumption says that c1v1 + c2v2 + · · · + c nvn = 0. Take k to be the largest number for which ck is not equal to zero. So: c1v1 + c2v2 + · · · + ck−1vk−1 + ckvk = 0. (Note that k > 1, since otherwise we would have c1v1 = 0 ⇒ v1 = 0, contradicting the assumption that none of the vi are the zero vector.) So we can rearrange the equation: c1v1 + c2v2 + · · · + ck−1vk−1 = −ckvk ⇒ − c1 ck v1 − c2 ck v2 − · · · − ck−1 ck vk−1 = vk. Therefore we have expressed vk as a linear combination of the previous vectors, and we are done. Worked proof 206 10.2 Showing Linear Independence 207 Example 117 Consider the vector space P2(t) of polynomials of degree less than or equal to 2. Set: v1 = 1 + t v2 = 1 + t 2 v3 = t + t2 v4 = 2 + t + t2 v5 = 1 + t + t2. The set {v1, . . . , v5} is linearly dependent, because v4 = v1 + v2. 10.2 Showing Linear Independence We have seen two diﬀerent ways to show a set of vectors is linearly dependent: we can either ﬁnd a linear combination of the vectors which is equal to zero, or we can express one of the vectors as a linear combination of the other vectors. On the other hand, to check that a set of vectors is linearly independent, we must check that every linear combination of our vectors with non-vanishing coeﬃcients gives something other than the zero vector. Equivalently, to show that the set v1, v2, . . . , vn is linearly independent, we must show that the equation c1v1 + c2v2 + · · · + cnvn = 0 has no solutions other than c1 = c2 = · · · = cn = 0. Example 118 Consider the following vectors in R3: v1 =   0 0 2   , v2 =   2 2 1   , v3 =   1 4 3   . Are they linearly independent? We need to see whether the system c 1v1 + c 2v2 + c 3v3 = 0 has any solutions for c1, c2, c3. We can rewrite this as a homogeneous system: (v1 v2 v3)   c1 c2 c3   = 0. 207 208 Linear Independence This system has solutions if and only if the matrix M = (v1 v2 v3) is singular, so we should ﬁnd the determinant of M : det M = det  0 2 1 0 2 4 2 1 3   = 2 det ( 2 1 2 4 ) = 12. Since the matrix M has non-zero determinant, the only solution to the system of equations (v1 v2 v3)   c1 c2 c3   = 0 is c1 = c2 = c3 = 0. So the vectors v1, v2, v3 are linearly independent. Here is another example with bits: Example 119 Let Z3 2 be the space of 3 × 1 bit-valued matrices (i.e., column vectors). Is the following subset linearly independent?     1 1 0   ,  1 0 1   ,  0 1 1      If the set is linearly dependent, then we can ﬁnd non-zero solutions to the system: c 1   1 1 0   + c 2   1 0 1   + c 3  0 1 1   = 0, which becomes the linear system   1 1 0 1 0 1 0 1 1     c1 c2 c3   = 0. Solutions exist if and only if the determinant of the matrix is non-zero. But: det   1 1 0 1 0 1 0 1 1   = 1 det (0 1 1 1 ) − 1 det (1 1 0 1 ) = −1 − 1 = 1 + 1 = 0 Therefore non-trivial solutions exist, and the set is not linearly independent. Reading homework: problem 2 208 10.3 From Dependent Independent 209 10.3 From Dependent Independent Now suppose vectors v1, . . . , vn are linearly dependent, c1v1 + c2v2 + · · · + cnvn = 0 with c1 ̸= 0. Then: span{v1, . . . , vn} = span{v2, . . . , vn} because any x ∈ span{v1, . . . , vn} is given by x = a1v1 + · · · + anvn = a1 ( −c2 c1 v2 − · · · − cn c1 vn ) + a2v2 + · · · + anvn = (a2 − a1 c2 c1 ) v2 + · · · + (an − a1 cn c1 ) vn. Then x is in span{v2, . . . , vn}. When we write a vector space as the span of a list of vectors, we would like that list to be as short as possible (this idea is explored further in chapter 11). This can be achieved by iterating the above procedure. Example 120 In the above example, we found that v4 = v1 + v2. In this case, any expression for a vector as a linear combination involving v4 can be turned into a combination without v4 by making the substitution v4 = v1 + v2. Then: S = span{1 + t, 1 + t2, t + t2, 2 + t + t 2, 1 + t + t 2} = span{1 + t, 1 + t2, t + t2, 1 + t + t 2}. Now we notice that 1 + t + t2 = 1 2 (1 + t) + 1 2 (1 + t2) + 1 2 (t + t2). So the vector 1 + t + t2 = v5 is also extraneous, since it can be expressed as a linear combination of the remaining three vectors, v1, v2, v3. Therefore S = span{1 + t, 1 + t2, t + t2}. In fact, you can check that there are no (non-zero) solutions to the linear system c 1(1 + t) + c 2(1 + t 2) + c 3(t + t 2) = 0. Therefore the remaining vectors {1 + t, 1 + t2, t + t2} are linearly independent, and span the vector space S. Then these vectors are a minimal spanning set, in the sense that no more vectors can be removed since the vectors are linearly independent. Such a set is called a basis for S. 209 210 Linear Independence 10.4 Review Problems Webwork: Reading Problems 1 ,2 Testing for linear independence 3, 4 Gaussian elimination 5 Spanning and linear independence 6 1. Let Bn be the space of n × 1 bit-valued matrices (i.e., column vectors) over the ﬁeld Z2. Remember that this means that the coeﬃcients in any linear combination can be only 0 or 1, with rules for adding and multiplying coeﬃcients given here. (a) How many diﬀerent vectors are there in Bn? (b) Find a collection S of vectors that span B3 and are linearly inde- pendent. In other words, ﬁnd a basis of B3. (c) Write each other vector in B3 as a linear combination of the vectors in the set S that you chose. (d) Would it be possible to span B3 with only two vectors? Hint 2. Let ei be the vector in Rn with a 1 in the ith position and 0’s in every other position. Let v be an arbitrary vector in R n. (a) Show that the collection {e1, . . . , en} is linearly independent. (b) Demonstrate that v = ∑n i=1(v ei)ei. (c) The span{e1, . . . , en} is the same as what vector space? 3. Consider the ordered set of vectors from R 3    1 2 3   ,  2 4 6   ,   1 0 1   ,  1 4 5     (a) Determine if the set is linearly independent by using the vectors as the columns of a matrix M and ﬁnding RREF(M ). 210 10.4 Review Problems 211 (b) If possible, write each vector as a linear combination of the pre- ceding ones. (c) Remove the vectors which can be expressed as linear combinations of the preceding vectors to form a linearly independent ordered set. (Every vector in your set set should be from the given set.) 4. Gaussian elimination is a useful tool to ﬁgure out whether a set of vectors spans a vector space and if they are linearly independent. Consider a matrix M made from an ordered set of column vectors (v1, v2, . . . , vm) ⊂ Rn and the three cases listed below: (a) RREF(M ) is the identity matrix. (b) RREF(M ) has a row of zeros. (c) Neither case (a) or (b) apply. First give an explicit example for each case, state whether the col- umn vectors you use are linearly independent or spanning in each case. Then, in general, determine whether (v1, v2, . . . , vm) are linearly inde- pendent and/or spanning Rn in each of the three cases. If they are linearly dependent, does RREF(M ) tell you which vectors could be removed to yield an independent set of vectors? 211 212 Linear Independence 212 11 Basis and Dimension In chapter 10, the notions of a linearly independent set of vectors in a vector space V , and of a set of vectors that span V were established; any set of vectors that span V can be reduced to some minimal collection of linearly independent vectors; such a minimal set is called a basis of the subspace V . Deﬁnition Let V be a vector space. Then a set S is a basis for V if S is linearly independent and V = span S. If S is a basis of V and S has only ﬁnitely many elements, then we say that V is ﬁnite-dimensional. The number of vectors in S is the dimension of V . Suppose V is a ﬁnite-dimensional vector space, and S and T are two dif- ferent bases for V . One might worry that S and T have a diﬀerent number of vectors; then we would have to talk about the dimension of V in terms of the basis S or in terms of the basis T . Luckily this isn’t what happens. Later in this chapter, we will show that S and T must have the same number of vec- tors. This means that the dimension of a vector space is basis-independent. In fact, dimension is a very important characteristic of a vector space. Example 121 Pn(t) (polynomials in t of degree n or less) has a basis {1, t, . . . , tn}, since every vector in this space is a sum a 0 1 + a 1 t + · · · + a n t n, a i ∈ R , so Pn(t) = span{1, t, . . . , tn}. This set of vectors is linearly independent; If the polynomial p(t) = c01 + c1t + · · · + cntn = 0, then c0 = c1 = · · · = cn = 0, so p(t) is the zero polynomial. Thus Pn(t) is ﬁnite dimensional, and dim Pn(t) = n + 1. 213 214 Basis and Dimension Theorem 11.0.1. Let S = {v1, . . . , vn} be a basis for a vector space V . Then every vector w ∈ V can be written uniquely as a linear combination of vectors in the basis S: w = c1v1 + · · · + cnvn. Proof. Since S is a basis for V , then span S = V , and so there exist con- stants ci such that w = c1v1 + · · · + cnvn. Suppose there exists a second set of constants d i such that w = d1v1 + · · · + d nvn . Then 0V = w − w = c1v1 + · · · + cnvn − d 1v1 − · · · − dnvn = (c1 − d1)v1 + · · · + (cn − dn)vn. If it occurs exactly once that ci ̸= d i, then the equation reduces to 0 = (ci − di)vi, which is a contradiction since the vectors vi are assumed to be non-zero. If we have more than one i for which ci ̸= d i, we can use this last equation to write one of the vectors in S as a linear combination of other vectors in S, which contradicts the assumption that S is linearly independent. Then for every i, ci = di. Proof Explanation Remark This theorem is the one that makes bases so useful–they allow us to convert abstract vectors into column vectors. By ordering the set S we obtain B = (v1, . . . , vn) and can write w = (v1, . . . , vn)    c1 ... cn    =    c1 ... cn    B . Remember that in general it makes no sense to drop the subscript B on the column vector on the right–most vector spaces are not made from columns of numbers! 214 215 Worked Example Next, we would like to establish a method for determining whether a collection of vectors forms a basis for R n. But ﬁrst, we need to show that any two bases for a ﬁnite-dimensional vector space has the same number of vectors. Lemma 11.0.2. If S = {v1, . . . , vn} is a basis for a vector space V and T = {w1, . . . , wm} is a linearly independent set of vectors in V , then m ≤ n. The idea of the proof is to start with the set S and replace vectors in S one at a time with vectors from T , such that after each replacement we still have a basis for V . Reading homework: problem 1 Proof. Since S spans V , then the set {w1, v1, . . . , vn} is linearly dependent. Then we can write w1 as a linear combination of the vi; using that equation, we can express one of the vi in terms of w1 and the remaining vj with j ̸= i. Then we can discard one of the vi from this set to obtain a linearly independent set that still spans V . Now we need to prove that S1 is a basis; we must show that S1 is linearly independent and that S1 spans V . The set S1 = {w1, v1, . . . , vi−1, vi+1, . . . , vn} is linearly independent: By the previous theorem, there was a unique way to express w1 in terms of the set S. Now, to obtain a contradiction, suppose there is some k and constants ci such that vk = c0w1 + c1v1 + · · · + ci−1vi−1 + ci+1vi+1 + · · · + cnvn. Then replacing w1 with its expression in terms of the collection S gives a way to express the vector vk as a linear combination of the vectors in S, which contradicts the linear independence of S. On the other hand, we cannot express w1 as a linear combination of the vectors in {vj|j ̸= i}, since the expression of w1 in terms of S was unique, and had a non-zero coeﬃcient for the vector vi. Then no vector in S1 can be expressed as a combination of other vectors in S1, which demonstrates that S1 is linearly independent. The set S1 spans V : For any u ∈ V , we can express u as a linear com- bination of vectors in S. But we can express vi as a linear combination of 215 216 Basis and Dimension vectors in the collection S1; rewriting vi as such allows us to express u as a linear combination of the vectors in S1. Thus S1 is a basis of V with n vectors. We can now iterate this process, replacing one of the vi in S1 with w2, and so on. If m ≤ n, this process ends with the set Sm = {w1, . . . , wm, vi1, . . . , vin−m}, which is ﬁne. Otherwise, we have m > n, and the set Sn = {w1, . . . , wn} is a basis for V . But we still have some vector wn+1 in T that is not in Sn. Since Sn is a basis, we can write wn+1 as a combination of the vectors in Sn, which contradicts the linear independence of the set T . Then it must be the case that m ≤ n, as desired. Worked Example Corollary 11.0.3. For a ﬁnite-dimensional vector space V , any two bases for V have the same number of vectors. Proof. Let S and T be two bases for V . Then both are linearly independent sets that span V . Suppose S has n vectors and T has m vectors. Then by the previous lemma, we have that m ≤ n. But (exchanging the roles of S and T in application of the lemma) we also see that n ≤ m. Then m = n, as desired. Reading homework: problem 2 11.1 Bases in Rn. In review question 2, chapter 10 you checked that R n = span         1 0 ... 0      ,      0 1 ... 0      , . . . ,      0 0 ... 1         , and that this set of vectors is linearly independent. (If you didn’t do that problem, check this before reading any further!) So this set of vectors is 216 11.1 Bases in R n. 217 a basis for R n, and dim R n = n. This basis is often called the standard or canonical basis for R n. The vector with a one in the ith position and zeros everywhere else is written ei. (You could also view it as the function {1, 2, . . . , n} → R where ei(j) = 1 if i = j and 0 if i ̸= j.) It points in the direction of the ith coordinate axis, and has unit length. In multivariable calculus classes, this basis is often written {ˆi, ˆj, ˆk} for R3. Note that it is often convenient to order basis elements, so rather than writing a set of vectors, we would write a list. This is called an ordered basis. For example, the canonical ordered basis for R n is (e1, e2, . . . , en). The possibility to reorder basis vectors is not the only way in which bases are non-unique. Bases are not unique. While there exists a unique way to express a vector in terms of any particular basis, bases themselves are far from unique. For example, both of the sets {( 1 0 ) , (0 1 )} and {( 1 1 ) , ( 1 −1 )} are bases for R2. Rescaling any vector in one of these sets is already enough to show that R2 has inﬁnitely many bases. But even if we require that all of the basis vectors have unit length, it turns out that there are still inﬁnitely many bases for R2 (see review question 3). To see whether a set of vectors S = {v1, . . . , vm} is a basis for R n, we have to check that the elements are linearly independent and that they span R n. From the previous discussion, we also know that m must equal n, so lets assume S has n vectors. If S is linearly independent, then there is no non- trivial solution of the equation 0 = x1v1 + · · · + xnvn. Let M be a matrix whose columns are the vectors vi and X the column vector with entries xi. Then the above equation is equivalent to requiring that there is a unique solution to M X = 0 . To see if S spans Rn, we take an arbitrary vector w and solve the linear system w = x1v1 + · · · + xnvn 217 218 Basis and Dimension in the unknowns xi. For this, we need to ﬁnd a unique solution for the linear system M X = w. Thus, we need to show that M −1 exists, so that X = M −1w is the unique solution we desire. Then we see that S is a basis for R n if and only if det M ̸= 0. Theorem 11.1.1. Let S = {v1, . . . , vm} be a collection of vectors in R n. Let M be the matrix whose columns are the vectors in S. Then S is a basis for V if and only if m is the dimension of V and det M ̸= 0. Remark Also observe that S is a basis if and only if RREF(M ) = I. Example 122 Let S = {(1 0 ) , ( 0 1 )} and T = {( 1 1 ) , ( 1 −1 )} . Then set MS = ( 1 0 0 1 ) . Since det MS = 1 ̸= 0, then S is a basis for R2. Likewise, set MT = ( 1 1 1 −1 ) . Since det MT = −2 ̸= 0, then T is a basis for R2. 11.2 Matrix of a Linear Transformation (Redux) Not only do bases allow us to describe arbitrary vectors as column vectors, they also permit linear transformations to be expressed as matrices. This is a very powerful tool for computations, which is covered in chapter 7 and reviewed again here. Suppose we have a linear transformation L : V → W and ordered input and output bases E = (e1, . . . , en) and F = (f1, . . . , fm) for V and W re- spectively (of course, these need not be the standard basis–in all likelihood V is not R n). Since for each ej, L(ej) is a vector in W , there exist unique numbers mi j such that L(ej) = f1m 1 j + · · · + fmm m j = (f1, . . . , fm)    m 1 j ... m m j    . 218 11.2 Matrix of a Linear Transformation (Redux) 219 The number m i j is the ith component of L(ej) in the basis F , while the fi are vectors (note that if α is a scalar, and v a vector, αv = vα, we have used the latter—rather uncommon—notation in the above formula). The numbers m i j naturally form a matrix whose jth column is the column vector displayed above. Indeed, if v = e1v1 + · · · + envn , Then L(v) = L(v1e1 + v2e2 + · · · + vnen) = v1L(e1) + v2L(e2) + · · · + vnL(en) = m∑ j=1 L(ej)vj = m∑ j=1 (f1m 1 j + · · · + fmm m j )vj = n∑ i=1 fi [ m∑ j=1 M i j vj] = ( f1 f2 · · · fm)      m 1 1 m1 2 · · · m 1 n m 2 1 m2 2 ... . . . ... m m 1 · · · m m n           v1 v2 ... vn      In the column vector-basis notation this equality looks familiar: L    v1 ... vn    E =       m 1 1 . . . m 1 n ... ... m m 1 . . . m m n       v1 ... vn       F . The array of numbers M = (mi j) is called the matrix of L in the input and output bases E and F for V and W , respectively. This matrix will change if we change either of the bases. Also observe that the columns of M are computed by examining L acting on each basis vector in V expanded in the basis vectors of W . Example 123 Let L : P1(t) ↦→ P1(t), such that L(a + bt) = (a + b)t. Since V = 219 220 Basis and Dimension P1(t) = W , let’s choose the same ordered basis B = (1 − t, 1 + t) for V and W . L(1 − t) = (1 − 1)t = 0 = (1 − t) · 0 + (1 + t) · 0 = (1 − t, 1 + t ) ( 0 0 ) L(1 + t) = (1 + 1)t = 2t = (1 − t) · −1 + (1 + t) · 1 = (1 − t, 1 + t ) (−1 1 ) ⇒ L ( a b ) B = (( 0 −1 0 1 ) ( a b )) B . When the vector space is R n and the standard basis is used, the problem of ﬁnding the matrix of a linear transformation will seem almost trivial. It is worthwhile working through it once in the above language though. Example 124 Any vector in Rn can be written as a linear combination of the standard (ordered) basis (e1, . . . en). The vector ei has a one in the ith position, and zeros everywhere else. I.e. e1 =      1 0 ... 0      , e2 =      0 1 ... 0      , . . . , en =      0 0 ... 1      . Then to ﬁnd the matrix of any linear transformation L : Rn → Rn, it suﬃces to know what L(ei) is for every i. For any matrix M , observe that M ei is equal to the ith column of M . Then if the ith column of M equals L(ei) for every i, then M v = L(v) for every v ∈ Rn. Then the matrix representing L in the standard basis is just the matrix whose ith column is L(ei). For example, if L   1 0 0   =   1 4 7   , L  0 1 0   =  2 5 8   , L  0 0 1   =   3 6 9   , then the matrix of L in the standard basis is simply  1 2 3 4 5 6 7 8 9   . 220 11.3 Review Problems 221 Alternatively, this information would often be presented as L   x y z   =   x + 2y + 3z 4x + 5y + 6z 7x + 8y + 9z   . You could either rewrite this as L  x y z   =   1 2 3 4 5 6 7 8 9     x y z   , to immediately learn the matrix of L, or taking a more circuitous route: L  x y z   = L  x   1 0 0   + y  0 0 1   + z  0 0 1     = x  1 4 7   + y  2 5 8   + z  3 6 9   =   1 2 3 4 5 6 7 8 9     x y z   . 11.3 Review Problems Webwork: Reading Problems 1 ,2 Basis checks 3,4 Computing column vectors 5,6 1. (a) Draw the collection of all unit vectors in R 2. (b) Let Sx = {(1 0 ) , x } , where x is a unit vector in R2. For which x is Sx a basis of R2? (c) Sketch all unit vectors in R 3. (d) For which x ∈ R 3 is Sx =     1 0 0   ,  0 1 0   , x    a basis for R 3. (e) Discuss the generalization of the above to R n. 2. Let Bn be the vector space of column vectors with bit entries 0, 1. Write down every basis for B1 and B2. How many bases are there for B3? B4? Can you make a conjecture for the number of bases for Bn? 221 222 Basis and Dimension (Hint: You can build up a basis for Bn by choosing one vector at a time, such that the vector you choose is not in the span of the previous vectors you’ve chosen. How many vectors are in the span of any one vector? Any two vectors? How many vectors are in the span of any k vectors, for k ≤ n?) Hint 3. Suppose that V is an n-dimensional vector space. (a) Show that any n linearly independent vectors in V form a basis. (Hint: Let {w1, . . . , wm} be a collection of n linearly independent vectors in V , and let {v1, . . . , vn} be a basis for V . Apply the method of Lemma 11.0.2 to these two sets of vectors.) (b) Show that any set of n vectors in V which span V forms a basis for V . (Hint: Suppose that you have a set of n vectors which span V but do not form a basis. What must be true about them? How could you get a basis from this set? Use Corollary 11.0.3 to derive a contradiction.) 4. Let S = {v1, . . . , vn} be a subset of a vector space V . Show that if every vector w in V can be expressed uniquely as a linear combination of vec- tors in S, then S is a basis of V . In other words: suppose that for every vector w in V , there is exactly one set of constants c1, . . . , cn so that c1v1 + · · · + cnvn = w. Show that this means that the set S is linearly independent and spans V . (This is the converse to theorem 11.0.1.) 5. Vectors are objects that you can add together; show that the set of all linear transformations mapping R3 → R is itself a vector space. Find a basis for this vector space. Do you think your proof could be modiﬁed to work for linear transformations R n → R? For RN → R m? For RR? Hint: Represent R 3 as column vectors, and argue that a linear trans- formation T : R 3 → R is just a row vector. 222 11.3 Review Problems 223 6. Let Sn denote the vector space of all n × n symmetric matrices; Sn := {M : Rn → R n | M = M T }. Let An denote the vector space of all n × n anti-symmetric matrices; An = {M : Rn → R n | M = −M T }. (a) Find a basis for S3. (b) Find a basis for A3. (c) Can you ﬁnd a basis for Sn? For An? Hint: Describe it in terms of combinations of the matrices F i j which have a 1 in the i-th row and the j-th column and 0 every- where else. Note that {F i j | 1 ≤ i ≤ r, 1 ≤ j ≤ k} is a basis for M r k . 7. Give the matrix of the linear transformation L with respect to the input and output bases B and B′ listed below: (a) L : V → W where B = (v1, . . . , vn) is a basis for V and B′ = (L(v1), . . . , L(vn)) is a basis for W . (b) L : V → V where B = B′ = (v1, . . . , vn) and L(vi) = λivi for all 1 ≤ i ≤ n. 223 224 Basis and Dimension 224 12 Eigenvalues and Eigenvectors In a vector space with no structure other than the vector space rules, no vector other than the zero vector is any more important than any other. Once one also has a linear transformation the situation changes dramatically. We begin with a fun example, of a type bound to reappear in your future scientiﬁc studies: String Theory Consider a vibrating string, whose displacement at point x at time t is given by a function y(x, t): The set of all displacement functions for the string can be modeled by a vector space V = {y : R 2 → R∣ ∣ ∣ ∣all partial derivatives ∂k+my(x, t) ∂xk∂tm exist} . The concavity and the acceleration of the string at the point (x, t) are ∂2y ∂x2 (x, t) and ∂2y ∂t2 (x, t) respectively. Since quantities must exist at each point on the string for the wave equation to make sense, we required that all partial derivatives of y(x, t) exist. 225 226 Eigenvalues and Eigenvectors Note also that the function y(x, t) = 0 —drawn in grey—is the only special vector in the vector space V . We now add some extra information. The string’s behavior in time and space can be modeled by a wave equation ∂2y ∂t2 = ∂2y ∂x2 , which says that the acceleration of a point on the string is equal its concavity at that point. For example, if the string were made of stretched rubber, it would prefer to be in a straight line, so this equation makes good intuitive sense. Not all of the functions in V are solutions to the wave equation; not all of the functions in the vector space V describe the way a string would really vibrate. The ways a string would really vibrate are (at least approximately) solutions to the wave equation above, which can rewritten as a linear function W y = 0 where W = ( − ∂2 ∂t2 + ∂2 ∂x2 ) : V → V . Some examples of solutions are y1(x, t) = sin(t) sin(x) y2(x, t) = 3 sin(2t) sin(2x) and y3(x, t) = sin(t) sin(x) + 3 sin(2t) sin(2x) . Since W y = 0 is a homogeneous linear equation, linear combinations of solutions are solutions; in other words the kernel ker(w) is a vector space. Given the linear function W , some vectors are now more special than others. We can use musical intuition to do more! If the ends of the string were held ﬁxed, we suspect that it would prefer to vibrate at certain frequencies corresponding to musical notes. This is modeled by looking at solutions of the form y(x, t) = sin(ωt)v(x) . Here the periodic sine function accounts for the string’s vibratory motion, while the function v(x) gives the shape of the string at any ﬁxed instant of time. Observe that W ( sin(ωt)v(x) ) = sin(ωt) ( d2f dx2 + ω2f ) . This suggests we introduce a new vector space U = {v : R → R ∣ ∣ ∣ ∣ all derivatives dkf dxk exist } , 226 12.1 Invariant Directions 227 as well as a new linear function L := d2 dx2 : U −→ U . The number ω is called an angular frequency in many contexts, lets call its square λ := −ω2 to match notations we will use later (notice that for this particular problem λ must then be negative). Then, because we want W (y) = 0, which implies d2f /dx2 = ω2f , it follows that the vector v(x) ∈ U determining the vibrating string’s shape obeys L(v) = λv . This is perhaps one of the most important equations in all of linear algebra! It is the eigenvalue-eigenvector equation. In this problem we have to solve it both for λ, to determine which frequencies (or musical notes) our string likes to sing, and the vector v determining the string’s shape. The vector v is called an eigenvector and λ its corresponding eigenvalue. The solution sets for each λ are called Vλ. For any λ the set Vk is a vector space since elements of this set are solutions to the homogeneous equation (L − λ)v = 0. We began this chapter by stating “In a vector space, with no other struc- ture, no vector is more important than any other.” Our aim is to show you that when a linear operator L acts on a vector space, vectors that solve the equation L(v) = λv play a central role. 12.1 Invariant Directions Have a look at the linear transformation L depicted below: 227 228 Eigenvalues and Eigenvectors It was picked at random by choosing a pair of vectors L(e1) and L(e2) as the outputs of L acting on the canonical basis vectors. Notice how the unit square with a corner at the origin is mapped to a parallelogram. The second line of the picture shows these superimposed on one another. Now look at the second picture on that line. There, two vectors f1 and f2 have been carefully chosen such that if the inputs into L are in the parallelogram spanned by f1 and f2, the outputs also form a parallelogram with edges lying along the same two directions. Clearly this is a very special situation that should correspond to interesting properties of L. Now lets try an explicit example to see if we can achieve the last picture: Example 126 Consider the linear transformation L such that L ( 1 0 ) = ( −4 −10 ) and L ( 0 1 ) = (3 7 ) , so that the matrix of L in the standard basis is ( −4 3 −10 7 ) . Recall that a vector is a direction and a magnitude; L applied to ( 1 0 ) or ( 0 1 ) changes both the direction and the magnitude of the vectors given to it. Notice that L ( 3 5 ) = ( −4 · 3 + 3 · 5 −10 · 3 + 7 · 5 ) = (3 5 ) . 228 12.1 Invariant Directions 229 Figure 12.1: The eigenvalue–eigenvector equation is probably the most im- portant one in linear algebra. Then L ﬁxes the direction (and actually also the magnitude) of the vector v1 = ( 3 5 ) . Reading homework: problem 1 Now, notice that any vector with the same direction as v1 can be written as cv1 for some constant c. Then L(cv1) = cL(v1) = cv1, so L ﬁxes every vector pointing in the same direction as v1. Also notice that L ( 1 2 ) = ( −4 · 1 + 3 · 2 −10 · 1 + 7 · 2 ) = ( 2 4 ) = 2 (1 2 ) , so L ﬁxes the direction of the vector v2 = (1 2 ) but stretches v2 by a factor of 2. Now notice that for any constant c, L(cv2) = cL(v2) = 2cv2. Then L stretches every vector pointing in the same direction as v2 by a factor of 2. In short, given a linear transformation L it is sometimes possible to ﬁnd a vector v ̸= 0 and constant λ ̸= 0 such that Lv = λv. We call the direction of the vector v an invariant direction. In fact, any vector pointing in the same 229 230 Eigenvalues and Eigenvectors direction also satisﬁes this equation because L(cv) = cL(v) = λcv. More generally, any non-zero vector v that solves L(v) = λv is called an eigenvector of L, and λ (which now need not be zero) is an eigenvalue. Since the direction is all we really care about here, then any other vector cv (so long as c ̸= 0) is an equally good choice of eigenvector. Notice that the relation “u and v point in the same direction” is an equivalence relation. In our example of the linear transformation L with matrix ( −4 3 −10 7 ) , we have seen that L enjoys the property of having two invariant directions, represented by eigenvectors v1 and v2 with eigenvalues 1 and 2, respectively. It would be very convenient if we could write any vector w as a linear combination of v1 and v2. Suppose w = rv1 + sv2 for some constants r and s. Then L(w) = L(rv1 + sv2) = rL(v1) + sL(v2) = rv1 + 2sv2. Now L just multiplies the number r by 1 and the number s by 2. If we could write this as a matrix, it would look like: (1 0 0 2 ) ( s t ) which is much slicker than the usual scenario L( x y ) = ( a b c d )(x y ) = ( ax + by cx + dy ) . Here, s and t give the coordinates of w in terms of the vectors v1 and v2. In the previous example, we multiplied the vector by the matrix L and came up with a complicated expression. In these coordinates, we see that L has a very simple diagonal matrix, whose diagonal entries are exactly the eigenvalues of L. This process is called diagonalization. It makes complicated linear sys- tems much easier to analyze. 230 12.1 Invariant Directions 231 Reading homework: problem 2 Now that we’ve seen what eigenvalues and eigenvectors are, there are a number of questions that need to be answered. • How do we ﬁnd eigenvectors and their eigenvalues? • How many eigenvalues and (independent) eigenvectors does a given linear transformation have? • When can a linear transformation be diagonalized? We will start by trying to ﬁnd the eigenvectors for a linear transformation. 2 × 2 Example Example 127 Let L : R2 → R2 such that L(x, y) = (2x + 2y, 16x + 6y). First, we ﬁnd the matrix of L, this is quickest in the standard basis: (x y ) L ↦−→ ( 2 2 16 6 ) ( x y ) . We want to ﬁnd an invariant direction v = ( x y ) such that Lv = λv or, in matrix notation, ( 2 2 16 6 ) ( x y ) = λ ( x y ) ⇔ ( 2 2 16 6 ) ( x y ) = ( λ 0 0 λ ) ( x y ) ⇔ ( 2 − λ 2 16 6 − λ ) ( x y ) = ( 0 0 ) . 231 232 Eigenvalues and Eigenvectors This is a homogeneous system, so it only has solutions when the matrix (2 − λ 2 16 6 − λ ) is singular. In other words, det ( 2 − λ 2 16 6 − λ ) = 0 ⇔ (2 − λ)(6 − λ) − 32 = 0 ⇔ λ2 − 8λ − 20 = 0 ⇔ (λ − 10)(λ + 2) = 0 For any square n × n matrix M , the polynomial in λ given by PM (λ) = det(λI − M ) = (−1) n det(M − λI) is called the characteristic polynomial of M , and its roots are the eigenvalues of M . In this case, we see that L has two eigenvalues, λ1 = 10 and λ2 = −2. To ﬁnd the eigenvectors, we need to deal with these two cases separately. To do so, we solve the linear system ( 2 − λ 2 16 6 − λ ) ( x y ) = ( 0 0 ) with the particular eigenvalue λ plugged in to the matrix. λ = 10: We solve the linear system ( −8 2 16 −4 ) ( x y ) = ( 0 0 ) . Both equations say that y = 4x, so any vector ( x 4x ) will do. Since we only need the direction of the eigenvector, we can pick a value for x. Setting x = 1 is convenient, and gives the eigenvector v1 = ( 1 4 ) . λ = −2: We solve the linear system ( 4 2 16 8 ) ( x y ) = (0 0 ) . Here again both equations agree, because we chose λ to make the system singular. We see that y = −2x works, so we can choose v2 = ( 1 −2 ) . Our process was the following: 232 12.2 The Eigenvalue–Eigenvector Equation 233 1. Find the characteristic polynomial of the matrix M for L, given by1 det(λI−M ). 2. Find the roots of the characteristic polynomial; these are the eigenvalues of L. 3. For each eigenvalue λi, solve the linear system (M − λiI)v = 0 to obtain an eigenvector v associated to λi. Jordan block example 12.2 The Eigenvalue–Eigenvector Equation In section 12, we developed the idea of eigenvalues and eigenvectors in the case of linear transformations R2 → R 2. In this section, we will develop the idea more generally. Eigenvalues Deﬁnition If L : V → V is linear and for some scalar λ and v ̸= 0V Lv = λv. then λ is an eigenvalue of L with eigenvector v. This equation says that the direction of v is invariant (unchanged) under L. Let’s try to understand this equation better in terms of matrices. Let V be a ﬁnite-dimensional vector space and let L : V → V . If we have a basis for V we can represent L by a square matrix M and ﬁnd eigenvalues λ and associated eigenvectors v by solving the homogeneous system (M − λI)v = 0. This system has non-zero solutions if and only if the matrix M − λI is singular, and so we require that 1To save writing many minus signs compute det(M − λI); which is equivalent if you only need the roots. 233 234 Eigenvalues and Eigenvectors Figure 12.2: Don’t forget the characteristic polynomial; you will need it to compute eigenvalues. det(λI − M ) = 0. The left hand side of this equation is a polynomial in the variable λ called the characteristic polynomial PM (λ) of M . For an n × n matrix, the characteristic polynomial has degree n. Then PM (λ) = λ n + c1λn−1 + · · · + cn. Notice that PM (0) = det(−M ) = (−1) n det M . Now recall the following. Theorem 12.2.1. (The Fundamental Theorem of Algebra) Any polynomial can be factored into a product of ﬁrst order polynomials over C. This theorem implies that there exists a collection of n complex num- bers λi (possibly with repetition) such that PM (λ) = (λ − λ1)(λ − λ2) · · · (λ − λn) =⇒ PM (λi) = 0. The eigenvalues λi of M are exactly the roots of PM (λ). These eigenvalues could be real or complex or zero, and they need not all be diﬀerent. The number of times that any given root λi appears in the collection of eigenvalues is called its multiplicity. 234 12.2 The Eigenvalue–Eigenvector Equation 235 Example 128 Let L be the linear transformation L : R3 → R3 given by L   x y z   =   2x + y − z x + 2y − z −x − y + 2z   . In the standard basis the matrix M representing L has columns Lei for each i, so:  x y z   L ↦−→   2 1 −1 1 2 −1 −1 −1 2    x y z   . Then the characteristic polynomial of L is2 PM (λ) = det  λ − 2 −1 1 −1 λ − 2 1 1 1 λ − 2   = (λ − 2)[(λ − 2) 2 − 1] + [−(λ − 2) − 1] + [−(λ − 2) − 1] = (λ − 1) 2(λ − 4) . So L has eigenvalues λ1 = 1 (with multiplicity 2), and λ2 = 4 (with multiplicity 1). To ﬁnd the eigenvectors associated to each eigenvalue, we solve the homogeneous system (M − λiI)X = 0 for each i. λ = 4: We set up the augmented matrix for the linear system:  −2 1 −1 0 1 −2 −1 0 −1 −1 −2 0   ∼   1 −2 −1 0 0 −3 −3 0 0 −3 −3 0   ∼   1 0 1 0 0 1 1 0 0 0 0 0   . Any vector of the form t   −1 −1 1   is then an eigenvector with eigenvalue 4; thus L leaves a line through the origin invariant. 2It is often easier (and equivalent) to solve det(M − λI) = 0. 235 236 Eigenvalues and Eigenvectors λ = 1: Again we set up an augmented matrix and ﬁnd the solution set:   1 1 −1 0 1 1 −1 0 −1 −1 1 0   ∼  1 1 −1 0 0 0 0 0 0 0 0 0   . Then the solution set has two free parameters, s and t, such that z = z =: t, y = y =: s, and x = −s + t. Thus L leaves invariant the set:    s   −1 1 0   + t   1 0 1   ∣ ∣ ∣ ∣ ∣ ∣s, t ∈ R    . This set is a plane through the origin. So the multiplicity two eigenvalue has two independent eigenvectors,  −1 1 0   and  1 0 1   that determine an invariant plane. Example 129 Let V be the vector space of smooth (i.e. inﬁnitely diﬀerentiable) functions f : R → R. Then the derivative is a linear operator d dx : V → V . What are the eigenvectors of the derivative? In this case, we don’t have a matrix to work with, so we have to make do. A function f is an eigenvector of d dx if there exists some number λ such that d dx f = λf . An obvious candidate is the exponential function, eλx; indeed, d dx eλx = λeλx. The operator d dx has an eigenvector eλx for every λ ∈ R. 12.3 Eigenspaces In the previous example, we found two eigenvectors   −1 1 0   and  1 0 1   for L, both with eigenvalue 1. Notice that  −1 1 0   +   1 0 1   =  0 1 1   236 12.3 Eigenspaces 237 is also an eigenvector of L with eigenvalue 1. In fact, any linear combination r  −1 1 0   + s  1 0 1   of these two eigenvectors will be another eigenvector with the same eigen- value. More generally, let {v1, v2, . . .} be eigenvectors of some linear transforma- tion L with the same eigenvalue λ. A linear combination of the vi is given by c1v1 + c2v2 + · · · for some constants c1, c 2, . . .. Then L(c1v1 + c2v2 + · · · ) = c1Lv1 + c2Lv2 + · · · by linearity of L = c1λv1 + c2λv2 + · · · since Lvi = λvi = λ(c1v1 + c2v2 + · · · ). So every linear combination of the vi is an eigenvector of L with the same eigenvalue λ. In simple terms, any sum of eigenvectors is again an eigenvector if they share the same eigenvalue. The space of all vectors with eigenvalue λ is called an eigenspace. It is, in fact, a vector space contained within the larger vector space V . It contains 0V , since L0V = 0V = λ0V , and is closed under addition and scalar multiplication by the above calculation. All other vector space properties are inherited from the fact that V itself is a vector space. In other words, the subspace theorem (9.1.1, chapter 9) ensures that Vλ := {v ∈ V |Lv = 0} is a subspace of V . Eigenspaces Reading homework: problem 3 You can now attempt the second sample midterm. 237 238 Eigenvalues and Eigenvectors 12.4 Review Problems Webwork: Reading Problems 1 , 2 , 3 Characteristic polynomial 4, 5, 6 Eigenvalues 7, 8 Eigenspaces 9, 10 Eigenvectors 11, 12, 13, 14 Complex eigenvalues 15 1. Try to ﬁnd more solutions to the vibrating string problem ∂2y/∂t2 = ∂2y/∂x2 using the ansatz y(x, t) = sin(ωt)f (x) . What equation must f (x) obey? Can you write this as an eigenvector equation? Suppose that the string has length L and f (0) = f (L) = 0. Can you ﬁnd any solutions for f (x)? 2. Let M = ( 2 1 0 2 ) . Find all eigenvalues of M . Does M have two linearly independent eigenvectors? Is there a basis in which the matrix of M is diagonal? (I.e., can M be diagonalized?) 3. Consider L : R 2 → R 2 with L ( x y ) = ( x cos θ + y sin θ −x sin θ + y cos θ ) . (a) Write the matrix of L in the basis ( 1 0 ) , (0 1 ) . (b) When θ ̸= 0, explain how L acts on the plane. Draw a picture. (c) Do you expect L to have invariant directions? (Consider also special values of θ.) (d) Try to ﬁnd real eigenvalues for L by solving the equation L(v) = λv. (e) Are there complex eigenvalues for L, assuming that i = √−1 exists? 238 12.4 Review Problems 239 4. Let L be the linear transformation L : R3 → R 3 given by L  x y z   =  x + y x + z y + z   . Let ei be the vector with a one in the ith position and zeros in all other positions. (a) Find Lei for each i = 1, 2, 3. (b) Given a matrix M =   m1 1 m 1 2 m 1 3 m 2 1 m 2 2 m 2 3 m 3 1 m 3 2 m 3 3  , what can you say about M ei for each i? (c) Find a 3 × 3 matrix M representing L. (d) Find the eigenvectors and eigenvalues of M. 5. Let A be a matrix with eigenvector v with eigenvalue λ. Show that v is also an eigenvector for A 2 and ﬁnd the corresponding eigenvalue. How about for A n where n ∈ N? Suppose that A is invertible. Show that v is also an eigenvector for A −1. 6. A projection is a linear operator P such that P 2 = P . Let v be an eigenvector with eigenvalue λ for a projection P , what are all possible values of λ? Show that every projection P has at least one eigenvector. Note that every complex matrix has at least 1 eigenvector, but you need to prove the above for any ﬁeld. 7. Explain why the characteristic polynomial of an n × n matrix has de- gree n. Make your explanation easy to read by starting with some simple examples, and then use properties of the determinant to give a general explanation. 8. Compute the characteristic polynomial PM (λ) of the matrix M = ( a b c d ) . Now, since we can evaluate polynomials on square matrices, we can plug M into its characteristic polynomial and ﬁnd the matrix PM (M ). 239 240 Eigenvalues and Eigenvectors What do you ﬁnd from this computation? Does something similar hold for 3 × 3 matrices? (Try assuming that the matrix of M is diagonal to answer this.) 9. Discrete dynamical system. Let M be the matrix given by M = (3 2 2 3 ) . Given any vector v(0) = (x(0) y(0) ) , we can create an inﬁnite sequence of vectors v(1), v(2), v(3), and so on using the rule: v(t + 1) = M v(t) for all natural numbers t. (This is known as a discrete dynamical system whose initial condition is v(0).) (a) Find all eigenvectors and eigenvalues of M. (b) Find all vectors v(0) such that v(0) = v(1) = v(2) = v(3) = · · · (Such a vector is known as a ﬁxed point of the dynamical system.) (c) Find all vectors v(0) such that v(0), v(1), v(2), v(3), . . . all point in the same direction. (Any such vector describes an invariant curve of the dynamical system.) Hint 240 13 Diagonalization Given a linear transformation, it is highly desirable to write its matrix with respect to a basis of eigenvectors. 13.1 Diagonalizability Suppose we are lucky, and we have L : V → V , and the ordered basis B = (v1, . . . , vn) is a set of eigenvectors for L, with eigenvalues λ1, . . . , λn. Then: L(v1) = λ1v1 L(v2) = λ2v2 ... L(vn) = λnvn As a result, the matrix of L in the basis of eigenvectors B is diagonal: L      x1 x2 ... xn      B =           λ1 λ2 . . . λn           x1 x2 ... xn           B , where all entries oﬀ the diagonal are zero. 241 242 Diagonalization Suppose that V is any n-dimensional vector space. We call a linear trans- formation L : V ↦→ V diagonalizable if there exists a collection of n linearly independent eigenvectors for L. In other words, L is diagonalizable if there exists a basis for V of eigenvectors for L. In a basis of eigenvectors, the matrix of a linear transformation is diag- onal. On the other hand, if an n × n matrix is diagonal, then the standard basis vectors ei must already be a set of n linearly independent eigenvectors. We have shown: Theorem 13.1.1. Given an ordered basis B for a vector space V and a linear transformation L : V → V , then the matrix for L in the basis B is diagonal if and only if B consists of eigenvectors for L. Non-diagonalizable example Reading homework: problem 1 Typically, however, we do not begin a problem with a basis of eigenvec- tors, but rather have to compute these. Hence we need to know how to change from one basis to another: 13.2 Change of Basis Suppose we have two ordered bases S = (v1, . . . , vn) and S′ = (v′ 1, . . . , v′ n) for a vector space V . (Here vi and v′ i are vectors, not components of vectors in a basis!) Then we may write each v′ k uniquely as v′ k = ∑ i vipi k , this is v′ k as a linear combination of the vi. In matrix notation (v′ 1, v′ 2, · · · , v′ n) = ( v1, v2, · · · , vn)      p1 1 p1 2 · · · p1 n p2 1 p2 2 ... ... pn 1 · · · pn n      . 242 13.2 Change of Basis 243 Here, the pi k are constants, which we can regard as entries of a square ma- trix P = (pi k). The matrix P must have an inverse since we can also write each vj uniquely as a linear combination of the v′ k; vj = ∑ k v′ kqk j . Then we can write vj = ∑ k ∑ i vipi kqk j . But ∑ k pi kqk j is the k, j entry of the product matrix P Q. Since the expression for vj in the basis S is vj itself, then P Q maps each vj to itself. As a result, each vj is an eigenvector for P Q with eigenvalue 1, so P Q is the identity, i.e. P Q = I ⇔ Q = P −1 . The matrix P is called a change of basis matrix. There is a quick and dirty trick to obtain it; look at the formula above relating the new basis vectors v′ 1, v′ 2, . . . v′ n to the old ones v1, v2, . . . , vn. In particular focus on v′ 1 for which v′ 1 = ( v1, v2, · · · , vn)      p1 1 p2 1 ... pn 1      . This says that the ﬁrst column of the change of basis matrix P is really just the components of the vector v′ 1 in the basis v1, v2, . . . , vn. The columns of the change of basis matrix are the components of the new basis vectors in terms of the old basis vectors. Example 130 Suppose S′ = (v′ 1, v′ 2) is an ordered basis for a vector space V and that with respect to some other ordered basis S = (v1, v2) for V v′ 1 = ( 1√2 1√2 ) S and v′ 2 = ( 1√3 − 1√3 ) S . 243 244 Diagonalization This means v′ 1 = (v1, v2) ( 1√2 1√2 ) = v1 + v2√2 and v′ 2 = (v1, v2) ( 1√3 − 1√3 ) = v1 − v2√3 . The change of basis matrix has as its columns just the components of v′ 1 and v′ 2; P = ( 1√2 1√3 1√2 − 1√3 ) . Changing basis changes the matrix of a linear transformation. However, as a map between vector spaces, the linear transformation is the same no matter which basis we use. Linear transformations are the actual objects of study of this book, not matrices; matrices are merely a convenient way of doing computations. Change of Basis Example Lets now calculate how the matrix of a linear transformation changes when changing basis. To wit, let L : V −→ W with matrix M = (mi j) in the ordered input and output bases S = (v1, . . . , vn) and T = (w1, . . . , wm) so L(vi) = ∑ k wkm k i . Now, suppose S′ = (v′ 1, . . . , v′ n) and T ′ = (w′ 1, . . . , w′ m) are new ordered input and out bases with matrix M ′ = (m ′k i ). Then L(v′ i) = ∑ k wkm ′k i . Let P = (pi j) be the change of basis matrix from input basis S to the basis S′ and Q = (qj k) be the change of basis matrix from output basis T to the basis T ′. Then: L(v′ j) = L ( ∑ i vipi j ) = ∑ i L(vi)pi j = ∑ i ∑ k wkm k i pi j. 244 13.2 Change of Basis 245 Meanwhile, we have: L(v′ i) = ∑ k vkm ′k i = ∑ k ∑ j vjqj km k i . Since the expression for a vector in a basis is unique, then we see that the entries of M P are the same as the entries of QM ′. In other words, we see that M P = QM ′ or M ′ = Q−1M P. Example 131 Let V be the space of polynomials in t and degree 2 or less and L : V → R2 where L(1) = ( 1 2 ) L(t) = (2 1 ) , L(t 2) = ( 3 3 ) . From this information we can immediately read oﬀ the matrix M of L in the bases S = (1, t, t2) and T = (e1, e2), the standard basis for R2, because (L(1), L(t), L(t 2) ) = (e1 + 2e2, 2e1 + e2, 3e1 + 3e2) = (e1, e2) (1 2 3 2 1 3 ) ⇒ M = ( 1 2 3 2 1 3 ) . Now suppose we are more interested in the bases S′ = (1 + t, t + t 2, 1 + t 2) , T ′ = ((1 2 ) , (2 1 )) =: (w′ 1, w′ 2) . To compute the new matrix M ′ of L we could simply calculate what L does the the new input basis vectors in terms of the new output basis vectors: (L(1 + t), L(t + t 2), L(1 + t 2)) = (( 1 2 ) + (2 1 ) , (2 1 ) + ( 3 3 ) , ( 1 2 ) + ( 3 3 )) = (w′ 1 + w′ 2, w′ 1 + 2w′ 2, 2w′ 1 + w′ 2) = (w′ 1, w′ 2) ( 1 1 2 1 2 1 ) ⇒ M ′ = (1 1 2 1 2 1 ) . Alternatively we could calculate the change of basis matrices P and Q by noting that (1 + t, t + t 2, 1 + t 2) = (1, t, t2)   1 0 1 1 1 0 0 1 1   ⇒ P =  1 0 1 1 1 0 0 1 1   245 246 Diagonalization and (w′ 1, w′ 2) = (e1 + 2e2, 2e1 + e2) = (e1, e1) ( 1 2 2 1 ) ⇒ Q = ( 1 2 2 1 ) . Hence M ′ = Q−1M P = − 1 3 ( 1 −2 −2 1 ) ( 1 2 3 2 1 3 )  1 0 1 1 1 0 0 1 1   = (1 1 2 1 2 1 ) . Notice that the change of basis matrices P and Q are both square and invertible. Also, since we really wanted Q−1, it is more eﬃcient to try and write (e1, e2) in terms of (w′ 1, w′ 2) which would yield directly Q−1. Alternatively, one can check that M P = QM ′. 13.3 Changing to a Basis of Eigenvectors If we are changing to a basis of eigenvectors, then there are various simpliﬁ- cations: • Since L : V → V , most likely you already know the matrix M of L using the same input basis as output basis S = (u1, . . . , un) (say). • In the new basis of eigenvectors S′(v1, . . . , vn), the matrix D of L is diagonal because Lvi = λivi and so (L(v1), L(v2), . . . , L(vn) ) = (v1, v2, . . . , vn)      λ1 0 · · · 0 0 λ2 0 ... . . . ... 0 0 · · · λn      . • If P is the change of basis matrix from S to S′, the diagonal matrix of eigenvalues D and the original matrix are related by D = P −1M P This motivates the following deﬁnition: 246 13.3 Changing to a Basis of Eigenvectors 247 Deﬁnition A matrix M is diagonalizable if there exists an invertible ma- trix P and a diagonal matrix D such that D = P −1M P. We can summarize as follows. • Change of basis rearranges the components of a vector by the change of basis matrix P , to give components in the new basis. • To get the matrix of a linear transformation in the new basis, we con- jugate the matrix of L by the change of basis matrix: M ↦→ P −1M P . If for two matrices N and M there exists a matrix P such that M = P −1N P , then we say that M and N are similar. Then the above discussion shows that diagonalizable matrices are similar to diagonal matrices. Corollary 13.3.1. A square matrix M is diagonalizable if and only if there exists a basis of eigenvectors for M . Moreover, these eigenvectors are the columns of a change of basis matrix P which diagonalizes M . Reading homework: problem 2 Example 132 Let’s try to diagonalize the matrix M =   −14 −28 −44 −7 −14 −23 9 18 29   . The eigenvalues of M are determined by det(M − λI) = −λ3 + λ 2 + 2λ = 0. So the eigenvalues of M are −1, 0, and 2, and associated eigenvectors turn out to be v1 =   −8 −1 3   , v2 =  −2 1 0   , and v3 =   −1 −1 1   . In order for M to be diagonalizable, we need the vectors v1, v2, v3 to be linearly independent. Notice that the matrix P = (v1 v2 v3) =   −8 −2 −1 −1 1 −1 3 0 1   247 248 Diagonalization Figure 13.1: This theorem answers the question: “What is diagonalization?” is invertible because its determinant is −1. Therefore, the eigenvectors of M form a basis of R, and so M is diagonalizable. Moreover, because the columns of P are the components of eigenvectors, M P = (M v1 M v2 M v3) = (−1.v1 0.v2 2.v3) = (v1 v2 v3)   −1 0 0 0 0 0 0 0 2   . Hence, the matrix P of eigenvectors is a change of basis matrix that diagonalizes M ; P −1M P =   −1 0 0 0 0 0 0 0 2   . 2 × 2 Example 13.4 Review Problems Webwork: Reading Problems 1 , 2 No real eigenvalues 3 Diagonalization 4, 5, 6, 7 1. Let Pn(t) be the vector space of polynomials of degree n or less, and d dt : Pn(t) → Pn(t) be the derivative operator. Find the matrix of d dt in the ordered bases E = (1, t, . . . , t n) for the domain and F = 248 13.4 Review Problems 249 (t n, . . . , , t, 1) for the codomain. Determine if this derivative operator is diagonalizable. Recall from Chapter 6 that the derivative operator is linear . 2. When writing a matrix for a linear transformation, we have seen that the choice of basis matters. In fact, even the order of the basis matters! (a) Write all possible reorderings of the standard basis (e1, e2, e3) for R 3. (b) Write each change of basis matrix between the standard basis and each of its reorderings. Make as many observations as you can about these matrices. what are their entries? Do you notice anything about how many of each type of entry appears in each row and column? What are their determinants? (Note: These matrices are known as permutation matrices.) (c) Given L : R 3 → R3 is linear and L  x y z   =   2y − z 3x 2z + x + y   write the matrix M for L in the standard basis, and two reorder- ings of the standard basis. How are these matrices related? 3. Let X = {♥, ♣, ♠} , Y = {∗, ⋆} . Write down two diﬀerent ordered bases, S, S′ and T, T ′ respectively, for each of the vector spaces R X and R Y . Find the change of basis matrices P and Q that map these bases to one another. Now consider the map ℓ : Y → X , where ℓ(∗) = ♥ and ℓ(⋆) = ♠. Show that ℓ can be used to deﬁne a linear transformation L : R X → R Y . Compute the matrices M and M ′ of L in the bases S, T and then S′, T ′. Use your change of basis matrices P and Q to check that M ′ = Q −1M P . 4. Recall that tr M N = tr N M . Use this fact to show that the trace of a square matrix M does not depend on the basis you used to compute M . 249 250 Diagonalization 5. When is the 2 × 2 matrix ( a b c d ) diagonalizable? Include examples in your answer. 6. Show that similarity of matrices is an equivalence relation. (The deﬁ- nition of an equivalence relation is given in the background WeBWorK set.) 7. Jordan form • Can the matrix (λ 1 0 λ ) be diagonalized? Either diagonalize it or explain why this is impossible. • Can the matrix   λ 1 0 0 λ 1 0 0 λ   be diagonalized? Either diagonalize it or explain why this is impossible. • Can the n × n matrix          λ 1 0 · · · 0 0 0 λ 1 · · · 0 0 0 0 λ · · · 0 0 ... ... ... . . . ... ... 0 0 0 · · · λ 1 0 0 · · · 0 λ          be diagonalized? Either diagonalize it or explain why this is impossible. Note: It turns out that every matrix is similar to a block ma- trix whose diagonal blocks look like diagonal matrices or the ones above and whose oﬀ-diagonal blocks are all zero. This is called the Jordan form of the matrix and a (maximal) block that looks like        λ 1 0 · · · 0 0 λ 1 0 ... . . . . . . λ 1 0 0 0 λ        is called a Jordan n-cell or a Jordan block where n is the size of the block. 8. Let A and B be commuting matrices (i.e., AB = BA) and suppose that A has an eigenvector v with eigenvalue λ. 250 13.4 Review Problems 251 (a) Show that Bv is also an eigenvector of A with eigenvalue λ. (b) Additionally suppose that A is diagonalizable with distinct eigen- values. What is the dimension of each eigenspace of A? (c) Show that v is also an eigenvector of B. (d) Explain why this shows that A and B can be simultaneously diago- nalized (i.e. there is an ordered basis in which both their matrices are diagonal). 251 252 Diagonalization 252 14 Orthonormal Bases and Complements You may have noticed that we have only rarely used the dot product. That is because many of the results we have obtained do not require a preferred notion of lengths of vectors. Once a dot or inner product is available, lengths of and angles between vectors can be measured–very powerful machinery and results are available in this case. 14.1 Properties of the Standard Basis The standard notion of the length of a vector x = (x1, x2, . . . , xn) ∈ R n is ||x|| = √x x = √ (x1)2 + (x2)2 + · · · (xn)2 . The canonical/standard basis in R n e1 =      1 0 ... 0      , e2 =      0 1 ... 0      , . . . , en =      0 0 ... 1      , has many useful properties with respect to the dot product and lengths. • Each of the standard basis vectors has unit length; ∥ei∥ = √ ei ei = √ eT i ei = 1 . 253 254 Orthonormal Bases and Complements • The standard basis vectors are orthogonal (in other words, at right angles or perpendicular); ei ej = e T i ej = 0 when i ̸= j This is summarized by e T i ej = δij = { 1 i = j 0 i ̸= j , where δij is the Kronecker delta. Notice that the Kronecker delta gives the entries of the identity matrix. Given column vectors v and w, we have seen that the dot product v w is the same as the matrix multiplication vT w. This is an inner product on R n. We can also form the outer product vwT , which gives a square matrix. The outer product on the standard basis vectors is interesting. Set Π1 = e1e T 1 =      1 0 ... 0      (1 0 · · · 0 ) =      1 0 · · · 0 0 0 · · · 0 ... ... 0 0 · · · 0      ... Πn = ene T n =      0 0 ... 1      (0 0 · · · 1 ) =      0 0 · · · 0 0 0 · · · 0 ... ... 0 0 · · · 1      254 14.2 Orthogonal and Orthonormal Bases 255 In short, Πi is the diagonal square matrix with a 1 in the ith diagonal position and zeros everywhere else 1. Notice that ΠiΠj = eieT i eje T j = eiδije T j . Then: ΠiΠj = { Πi i = j 0 i ̸= j . Moreover, for a diagonal matrix D with diagonal entries λ1, . . . , λn, we can write D = λ1Π1 + · · · + λnΠn. 14.2 Orthogonal and Orthonormal Bases There are many other bases that behave in the same way as the standard basis. As such, we will study: • Orthogonal bases {v1, . . . , vn}: vi vj = 0 if i ̸= j . In other words, all vectors in the basis are perpendicular. • Orthonormal bases {u1, . . . , un}: ui uj = δij. In addition to being orthogonal, each vector has unit length. Suppose T = {u1, . . . , un} is an orthonormal basis for R n. Because T is a basis, we can write any vector v uniquely as a linear combination of the vectors in T ; v = c1u1 + · · · cnun. Since T is orthonormal, there is a very easy way to ﬁnd the coeﬃcients of this linear combination. By taking the dot product of v with any of the vectors 1This is reminiscent of an older notation, where vectors are written in juxtaposition. This is called a “dyadic tensor”, and is still used in some applications. 255 256 Orthonormal Bases and Complements in T , we get v ui = c1u1 ui + · · · + ciui ui + · · · + cnun ui = c1 · 0 + · · · + ci · 1 + · · · + cn · 0 = ci, ⇒ ci = v ui ⇒ v = (v u1)u1 + · · · + (v un)un = ∑ i (v ui)ui . This proves the following theorem. Theorem 14.2.1. For an orthonormal basis {u1, . . . , un}, any vector v can be expressed as v = ∑ i (v ui)ui. Reading homework: problem 1 All orthonormal bases for R 2 14.2.1 Orthonormal Bases and Dot Products To calculate lengths of, and angles between vectors in R n we most commonly use the dot product:    v1 ... vn    ·    w1 ... wn    := v1w1 + · · · + vnwn . When dealing with more general vector spaces the dot product makes no sense, and one must instead choose an appropriate inner product. By “ap- propriate”, we mean an inner product well-suited to the problem one is try- ing to solve. If the vector space V under study has an orthonormal basis O = (u1, . . . , un) meaning ⟨ui, uj⟩ = δij , 256 14.2 Orthogonal and Orthonormal Bases 257 where ⟨·, ·⟩ is the inner product, you might ask whether this can be related to a dot product? The answer to this question is yes and rather easy to understand: Given an orthonormal basis, the information of two vectors v and v′ in V can be encoded in column vectors v = ⟨v, u1⟩u1 + · · · + ⟨v, un⟩un = (u1, . . . , un)    ⟨v, u1⟩ ... ⟨v, un⟩    =    ⟨v, u1⟩ ... ⟨v, un⟩    O , v′ = ⟨v′, u1⟩u1 + · · · + ⟨v′, un⟩un = (u1, . . . , un)    ⟨v′, u1⟩ ... ⟨v′, un⟩    =    ⟨v′, u1⟩ ... ⟨v′, un⟩    O . The dot product of these two column vectors is    ⟨v, u1⟩ ... ⟨v, un⟩    ·    ⟨v′, u1⟩ ... ⟨v′, un⟩    = ⟨v, u1⟩⟨v′, u1⟩ + · · · + ⟨v, un⟩⟨v, ′ un⟩ . This agrees exactly with the inner product of v and v′ because ⟨v, v′⟩ = 〈 ⟨v, u1⟩u1 + · · · + ⟨v, un⟩un, ⟨v′, u1⟩u1 + · · · + ⟨v′, un⟩un〉 = ⟨v, u1⟩⟨v′, u1⟩⟨u1, u1⟩ + ⟨v, u2⟩⟨v′, u1⟩⟨u2, u1⟩ + · · · · · · + ⟨v, un−1⟩⟨v′, un⟩⟨un−1, un⟩ + ⟨v, un⟩⟨v′, un⟩⟨un, un⟩ = ⟨v, u1⟩⟨v′, u1⟩ + · · · + ⟨v, un⟩⟨v′, un⟩ . The above computation looks a little daunting, but only the linearity prop- erty of inner products and the fact that ⟨ui, uj⟩ can equal either zero or one was used. Because inner products become dot products once one uses an orthonormal basis, we will quite often use the dot product notation in situations where one really should write an inner product. Conversely, dot product computations can always be rewritten in terms of an inner product, if needed. Example 133 Consider the space of polynomials given by V = span{1, x} with inner product ⟨p, p′⟩ = ∫ 1 0 p(x)p′(x)dx. An obvious basis to use is B = (1, x) but it is not hard to check that this is not orthonormal, instead we take O = (1, 2 √3 (x − 1 2 )) . 257 258 Orthonormal Bases and Complements This is an orthonormal basis since,for example: 〈 2√3 (x − 1 2 ), 1 〉 = 2 √3 ∫ 1 0 (x − 1 2 )dx = 0 , and 〈x − 1 2 , x − 1 2 〉 = ∫ 1 0 (x − 1 2 )2dx = 1 12 = ( 1 2√3 )2 . An arbitrary vector v = a + bx is given in terms of the orthonormal basis O by v = (a + b 2 ).1 + b (x − 1 2 ) = (1, 2 √3 (x − 1 2 )) (a + b 2 b 2 √3 ) = (a + b 2 b 2√3 ) O . Hence we can predict the inner product of a + bx and a′ + b′x using the dot product: ( a + b 2 b 2 √3 ) ·  a′ + b′ 2 b′ 2 √3   = (a + b 2 )(a ′ + b′ 2 ) + bb′ 12 = aa ′ + 1 2 (ab ′ + a′b) + 1 3 bb ′ . Indeed ⟨a + bx, a ′ + b ′x⟩ = ∫ 1 0 (a + bx)(a ′ + b ′x)dx = aa ′ + 1 2 (ab ′ + a ′b) + 1 3 bb ′ . 14.3 Relating Orthonormal Bases Suppose T = {u1, . . . , un} and R = {w1, . . . , wn} are two orthonormal bases for R n. Then w1 = (w1 u1)u1 + · · · + (w1 un)un ... wn = (wn u1)u1 + · · · + (wn un)un ⇒ wi = ∑ j uj(uj wi) Thus the matrix for the change of basis from T to R is given by P = (pj i ) = (uj wi). 258 14.3 Relating Orthonormal Bases 259 We would like to calculate the product P P T . For that, we ﬁrst develop a dirty trick for products of dot products: (u v)(w z) = (u T v)(wT z) = u T (vwT )z . The object vwT is the square matrix made from the outer product of v and w. Now we are ready to compute the components of the matrix product P P T . ∑ i (uj wi)(wi uk) = ∑ i (uT j wi)(wT i uk) = uT j [∑ i (wiwT i ) ] uk (∗) = uT j Inuk = uT j uk = δjk. The equality (∗) is explained below. Assuming (∗) holds, we have shown that P P T = In, which implies that P T = P −1. The equality in the line (∗) says that ∑ i wiwT i = In. To see this, we examine (∑ i wiwT i ) v for an arbitrary vector v. We can ﬁnd constants cj such that v = ∑ j cjwj, so that ( ∑ i wiwT i ) v = ( ∑ i wiwT i ) ( ∑ j cjwj ) = ∑ j cj ∑ i wiwT i wj = ∑ j cj ∑ i wiδij = ∑ j cjwj since all terms with i ̸= j vanish = v. Thus, as a linear transformation, ∑ i wiwT i = In ﬁxes every vector, and thus must be the identity In. 259 260 Orthonormal Bases and Complements Deﬁnition A matrix P is orthogonal if P −1 = P T . Then to summarize, Theorem 14.3.1. A change of basis matrix P relating two orthonormal bases is an orthogonal matrix. I.e., P −1 = P T . Reading homework: problem 2 Example 134 Consider R3 with the ordered orthonormal basis S = (u1, u2, u3) =       2√6 1√6 −1√6    ,    0 1√2 1√2    ,    1√3 −1√3 1√3       . Let E be the standard basis (e1, e2, e3). Since we are changing from the standard basis to a new basis, then the columns of the change of basis matrix are exactly the new basis vectors. Then the change of basis matrix from E to S is given by P = (P j i ) = (ej · ui) =   e1 u1 e1 u2 e1 u3 e2 u1 e2 u2 e2 u3 e3 u1 e3 u2 e3 u3   = (u1 u2 u3) =    2√6 0 1√3 1√6 1√2 −1√3 −1√6 1√2 1√3    . From our theorem, we observe that P −1 = P T =   uT 1 uT 2 uT 3   =    2√6 1√6 −1√6 0 1√2 1√2 1√3 −1√3 1√3    . 260 14.4 Gram-Schmidt & Orthogonal Complements 261 We can check that P T P = I by a lengthy computation, or more simply, notice that (P T P ) =   uT 1 uT 2 uT 3   (u1 u2 u3) =   1 0 0 0 1 0 0 0 1   . Above we are using orthonormality of the ui and the fact that matrix multiplication amounts to taking dot products between rows and columns. It is also very important to realize that the columns of an orthogonal matrix are made from an orthonormal set of vectors. Orthonormal Change of Basis and Diagonal Matrices. Suppose D is a diagonal matrix and we are able to use an orthogonal matrix P to change to a new basis. Then the matrix M of D in the new basis is: M = P DP −1 = P DP T . Now we calculate the transpose of M . M T = (P DP T )T = (P T ) T DT P T = P DP T = M The matrix M = P DP T is symmetric! 14.4 Gram-Schmidt & Orthogonal Complements Given a vector v and some other vector u not in span {v} we can construct the new vector v⊥ := v − u · v u · u u . 261 262 Orthonormal Bases and Complements v u v⊥ u·v u·u u = v∥ This new vector v⊥ is orthogonal to u because u v⊥ = u v − u · v u · uu u = 0. Hence, {u, v⊥} is an orthogonal basis for span{u, v}. When v is not par- allel to u, v⊥ ̸= 0, and normalizing these vectors we obtain { u |u| , v⊥ |v⊥|}, an orthonormal basis for the vector space span {u, v}. Sometimes we write v = v⊥ + v∥ where: v⊥ = v − u · v u · u u v∥ = u · v u · u u. This is called an orthogonal decomposition because we have decomposed v into a sum of orthogonal vectors. This decomposition depends on u; if we change the direction of u we change v⊥ and v∥. If u, v are linearly independent vectors in R3, then the set {u, v⊥, u × v⊥} would be an orthogonal basis for R 3. This set could then be normalized by dividing each vector by its length to obtain an orthonormal basis. However, it often occurs that we are interested in vector spaces with di- mension greater than 3, and must resort to craftier means than cross products to obtain an orthogonal basis2. 2Actually, given a set T of (n − 1) independent vectors in n-space, one can deﬁne an analogue of the cross product that will produce a vector orthogonal to the span of T , using a method exactly analogous to the usual computation for calculating the cross product of two vectors in R3. This only gets us the “last” orthogonal vector, though; the Gram– Schmidt process described in this section gives a way to get a full orthogonal basis. 262 14.4 Gram-Schmidt & Orthogonal Complements 263 Given a third vector w, we should ﬁrst check that w does not lie in the span{u, v}, i.e., check that u, v and w are linearly independent. If it does not, we then can deﬁne w⊥ := w − u w u u u − v⊥ w v⊥ v⊥ v⊥. We can check that u w⊥ and v⊥ w⊥ are both zero: u w⊥ = u (w − u w u u u − v⊥ w v⊥ v⊥ v⊥) = u w − u w u u u u − v⊥ w v⊥ v⊥ u v⊥ = u w − u w − v⊥ w v⊥ v⊥ u v⊥ = 0 since u is orthogonal to v⊥, and v⊥ w⊥ = v⊥ ( w − u w u u u − v⊥ w v⊥ v⊥ v⊥) = v⊥ w − u w u u v⊥ u − v⊥ w v⊥ v⊥ v⊥ v⊥ = v⊥ w − u w u u v⊥ u − v⊥ w = 0 because u is orthogonal to v⊥. Since w⊥ is orthogonal to both u and v⊥, we have that {u, v⊥, w⊥} is an orthogonal basis for span{u, v, w}. 263 264 Orthonormal Bases and Complements 14.4.1 The Gram-Schmidt Procedure In fact, given an ordered set (v1, v2, . . .) of linearly independent vectors, we can deﬁne an orthogonal basis for span{v1, v2, . . .} consisting of the vectors v⊥ 1 := v1 v⊥ 2 := v2 − v⊥ 1 · v2 v⊥ 1 · v⊥ 1 v⊥ 1 v⊥ 3 := v3 − v⊥ 1 · v3 v⊥ 1 · v⊥ 1 v⊥ 1 − v⊥ 2 · v3 v⊥ 2 · v⊥ 2 v⊥ 2 ... v⊥ i := vi − v⊥ 1 · vi v⊥ 1 · v⊥ 1 v⊥ 1 − v⊥ 2 · vi v⊥ 2 · v⊥ 2 v⊥ 2 − · · · − v⊥ i−1 · vi v⊥ i−1 · v⊥ i−1 v⊥ i−1 ... Notice that each v⊥ i here depends on v⊥ j for every j < i. This allows us to inductively/algorithmically build up a linearly independent, orthogonal set of vectors {v⊥ 1 , v⊥ 2 , . . .} such that span{v⊥ 1 , v⊥ 2 , . . .} = span{v1, v2, . . .}. That is, an orthogonal basis for the latter vector space. Note that the set of vectors you start out with needs to be ordered to uniquely specify the algorithm; changing the order of the vectors will give a diﬀerent orthogonal basis. You might need to be the one to put an order on the initial set of vectors. This algorithm is called the Gram–Schmidt orthogonalization pro- cedure–Gram worked at a Danish insurance company over one hundred years ago, Schmidt was a student of Hilbert (the famous German mathmatician). Example 135 We’ll obtain an orthogonal basis for R3 by appling Gram-Schmidt to the linearly independent set     1 1 1   ,  1 1 0   ,  3 1 1      . Because he Gram-Schmidt algorithm uses the ﬁrst vector from the ordered set the largest number of times, we will choose the vector with the most zeros to be the ﬁrst in hopes of simplifying computations; we choose to order the set as (v1, v2, v3) :=     1 1 0   ,  1 1 1   ,  3 1 1     . 264 14.5 QR Decomposition 265 First, we set v⊥ 1 := v1. Then v⊥ 2 :=   1 1 1   − 2 2  1 1 0   =  0 0 1   v⊥ 3 :=   3 1 1   − 4 2  1 1 0   − 1 1   0 0 1   =   1 −1 0   . Then the set      1 1 0   ,   0 0 1   ,   1 −1 0      is an orthogonal basis for R3. To obtain an orthonormal basis we simply divide each of these vectors by its length, yielding       1√2 1√2 0    ,    0 0 1    ,    1√2 −1√2 0       . A 4 × 4 Gram--Schmidt Example 14.5 QR Decomposition In Chapter 7, Section 7.7 teaches you how to solve linear systems by decom- posing a matrix M into a product of lower and upper triangular matrices M = LU . The Gram–Schmidt procedure suggests another matrix decomposition, M = QR , where Q is an orthogonal matrix and R is an upper triangular matrix. So- called QR-decompositions are useful for solving linear systems, eigenvalue problems and least squares approximations. You can easily get the idea behind the QR decomposition by working through a simple example. 265 266 Orthonormal Bases and Complements Example 136 Find the QR decomposition of M =   2 −1 1 1 3 −2 0 1 −2   . What we will do is to think of the columns of M as three 3-vectors and use Gram– Schmidt to build an orthonormal basis from these that will become the columns of the orthogonal matrix Q. We will use the matrix R to record the steps of the Gram– Schmidt procedure in such a way that the product QR equals M . To begin with we write M =    2 − 7 5 1 1 14 5 −2 0 1 −2       1 1 5 0 0 1 0 0 0 1    . In the ﬁrst matrix the ﬁrst two columns are orthogonal because we simply replaced the second column of M by the vector that the Gram–Schmidt procedure produces from the ﬁrst two columns of M , namely    − 7 5 14 5 1    =    −1 3 1    − 1 5    2 1 0    . The matrix on the right is almost the identity matrix, save the + 1 5 in the second entry of the ﬁrst row, whose eﬀect upon multiplying the two matrices precisely undoes what we we did to the second column of the ﬁrst matrix. For the third column of M we use Gram–Schmidt to deduce the third orthogonal vector    − 1 6 1 3 − 7 6    =    1 −2 −2    − 0    2 1 0    − −9 54 5    − 7 5 14 5 1    , and therefore, using exactly the same procedure write M =    2 − 7 5 − 1 6 1 14 5 1 3 0 1 − 7 6       1 1 5 0 0 1 − 5 6 0 0 1    . This is not quite the answer because the ﬁrst matrix is now made of mutually orthog- onal column vectors, but a bona ﬁde orthogonal matrix is comprised of orthonormal 266 14.6 Orthogonal Complements 267 vectors. To achieve that we divide each column of the ﬁrst matrix by its length and multiply the corresponding row of the second matrix by the same amount: M =      2 √5 5 − 7 √30 90 − √6 18 √5 5 7 √30 45 √6 9 0 √30 18 − 7 √6 18           √5 √5 5 0 0 3√30 5 − √30 2 0 0 √6 2      = QR . Geometrically what has happened here is easy to see. We started with three vectors given by the columns of M and rotated them such that the ﬁrst lies along the x- axis, the second in the xy-plane and the third in some other generic direction (here it happens to be in the yz-plane). A nice check of the above result is to verify that entry (i, j) of the matrix R equals the dot product of the i-th column of Q with the j-th column of M . (Some people memorize this fact and use it as a recipe for computing QR decompositions.) A good test of your own understanding is to work out why this is true! Another QR decomposition example 14.6 Orthogonal Complements Let U and V be subspaces of a vector space W . In Review Exercise 2, Chapter 9, you are asked to show that U ∩ V is a subspace of W , and that U ∪ V is not a subspace. However, span(U ∪ V ) is certainly a subspace, since the span of any subset of a vector space is a subspace. Notice that all elements of span(U ∪ V ) take the form u + v with u ∈ U and v ∈ V . We call the subspace U + V := span(U ∪ V ) = {u + v | u ∈ U, v ∈ V } the sum of U and V . Here, we are not adding vectors, but vector spaces to produce a new vector space. Example 137 span        1 1 0 0     ,     0 1 1 0        + span        0 1 1 0     ,     0 0 1 1        = span        1 1 0 0     ,     0 1 1 0     ,     0 0 1 1        . 267 268 Orthonormal Bases and Complements Notice that the addends have elements in common;     0 1 1 0     is in both addends. Even though both of the addends are 2-dimensional their sum is not 4-dimensional. In the special case that U and V do not have any non-zero vectors in common, their sum is a vector space with dimension dim U + dim V . Deﬁnition If U and V are subspaces of a vector space W such that U ∩ V = {0W } then the vector space U ⊕ V := span(U ∪ V ) = {u + v | u ∈ U, v ∈ V } is the direct sum of U and V . Remark • When U ∩ V = {0W }, U + V = U ⊕ V. • When U ∩ V ̸= {0W }, U + V ̸= U ⊕ V . This distinction is important because the direct sum has a very nice property: Theorem 14.6.1. If w ∈ U ⊕ V then there is only one way to write w as the sum of a vector in U and a vector in V . Proof. Suppose that u + v = u ′ + v′, with u, u ′ ∈ U , and v, v′ ∈ V . Then we could express 0 = (u − u′) + (v − v′). Then (u − u′) = −(v − v′). Since U and V are subspaces, we have (u − u′) ∈ U and −(v − v′) ∈ V . But since these elements are equal, we also have (u − u′) ∈ V . Since U ∩ V = {0}, then (u − u ′) = 0. Similarly, (v − v′) = 0. Therefore u = u′ and v = v′, proving the theorem. Reading homework: problem 3 Here is a sophisticated algebra question: Given a subspace U in W , what are the solutions to U ⊕ V = W. That is, how can we write W as the direct sum of U and some- thing? 268 14.6 Orthogonal Complements 269 There is not a unique answer to this question as can be seen from the following picture of subspaces in W = R 3. However, using the inner product, there is a natural candidate U ⊥ for this second subspace as shown below. Deﬁnition If U is a subspace of the vector space W then the vector space U ⊥ := {w ∈ W ∣ ∣w u = 0 for all u ∈ U } is the orthogonal complement of U in W . Remark The symbols “U ⊥” are often read as “U -perp”. This is the set of all vectors in W orthogonal to every vector in U . Notice also that in the above deﬁnition we have implicitly assumed that the inner product is the dot product. For a general inner product, the above deﬁnition would read U ⊥ := {w ∈ W ∣ ∣ ⟨w, u⟩ = 0 for all u ∈ U } . 269 270 Orthonormal Bases and Complements Possibly by now you are feeling overwhelmed, it may help to watch this quick overview video. Overview Example 138 Consider any plane P through the origin in R3. Then P is a subspace, and P ⊥ is the line through the origin orthogonal to P . For example, if P is the xy-plane, then R3 = P ⊕ P ⊥ = {(x, y, 0)|x, y ∈ R} ⊕ {(0, 0, z)|z ∈ R}. Theorem 14.6.2. Let U be a subspace of a ﬁnite-dimensional vector space W . Then the set U ⊥ is a subspace of W , and W = U ⊕ U ⊥. Proof. First, to see that U ⊥ is a subspace, we only need to check closure, which requires a simple check: Suppose v, w ∈ U ⊥, then we know v u = 0 = w u (∀u ∈ U ) . Hence ⇒ u (αv + βw) = αu v + βu w = 0 (∀u ∈ U ) , and so αv + βw ∈ U ⊥. Next, to form a direct sum between U and U ⊥ we need to show that U ∩ U ⊥ = {0}. This holds because if u ∈ U and u ∈ U ⊥ it follows that u u = 0 ⇔ u = 0. Finally, we show that any vector w ∈ W is in U ⊕ U ⊥. (This is where we use the assumption that W is ﬁnite-dimensional.) Let e1, . . . , en be an orthonormal basis for U . Set: u = (w e1)e1 + · · · + (w en)en ∈ U , u ⊥ = w − u . It is easy to check that u ⊥ ∈ U ⊥ (see the Gram-Schmidt procedure). Then w = u + u ⊥, so w ∈ U ⊕ U ⊥, and we are done. Reading homework: problem 4 270 14.6 Orthogonal Complements 271 Example 139 Consider any line L through the origin in R4. Then L is a subspace, and L⊥ is a 3-dimensional subspace orthogonal to L. For example, let L = span        1 1 1 1        be a line in R4. Then L ⊥ =        x y z w     ∈ R 4 ∣ ∣ ∣ ∣ ∣ ∣ ∣ ∣ (x, y, z, w) (1, 1, 1, 1) = 0    =        x y z w     ∈ R 4 ∣ ∣ ∣ ∣ ∣ ∣ ∣ ∣ x + y + z + w = 0    . Using the Gram-Schmidt procedure one may ﬁnd an orthogonal basis for L⊥. The set        1 −1 0 0     ,     1 0 −1 0     ,     1 0 0 −1        forms a basis for L⊥ so, ﬁrst, we order the basis as (v1, v2, v2) =         1 −1 0 0     ,     1 0 −1 0     ,     1 0 0 −1         . Next, we set v⊥ 1 = v1. Then v⊥ 2 =     1 0 −1 0     − 1 2     1 −1 0 0     =     1 2 1 2 −1 0     , v⊥ 3 =     1 0 0 −1     − 1 2     1 −1 0 0     − 1/2 3/2     1 2 1 2 −1 0     =      1 3 1 3 1 3 −1      . 271 272 Orthonormal Bases and Complements So the set        1 −1 0 0     ,     1 2 1 2 −1 0     ,     1 3 1 3 1 3 −1        is an orthogonal basis for L⊥. Dividing each basis vector by its length yields         1√2 − 1√2 0 0      ,      1√6 1√6 − 2√6 0      ,       √3 6√3 6√3 6 − √3 2          , and orthonormal basis for L⊥. Moreover, we have R4 = L ⊕ L ⊥ =        c c c c     ∣ ∣ ∣ ∣ ∣ ∣ ∣ ∣ c ∈ R    ⊕        x y z w     ∈ R 4 ∣ ∣ ∣ ∣ ∣ ∣ ∣ ∣ x + y + z + w = 0    , a decomposition of R4 into a line and its three dimensional orthogonal complement. Notice that for any subspace U , the subspace (U ⊥) ⊥ is just U again. As such, ⊥ is an involution on the set of subspaces of a vector space. (An invo- lution is any mathematical operation which performed twice does nothing.) 14.7 Review Problems Webwork: Reading Problems 1 , 2 , 3 , 4 Gram–Schmidt 5 Orthogonal eigenbasis 6, 7 Orthogonal complement 8 1. Let D = (λ1 0 0 λ2 ) . (a) Write D in terms of the vectors e1 and e2, and their transposes. (b) Suppose P = (a b c d ) is invertible. Show that D is similar to M = 1 ad − bc ( λ1ad − λ2bc −(λ1 − λ2)ab (λ1 − λ2)cd −λ1bc + λ2ad ) . 272 14.7 Review Problems 273 (c) Suppose the vectors ( a, b ) and (c, d ) are orthogonal. What can you say about M in this case? (Hint: think about what M T is equal to.) 2. Suppose S = {v1, . . . , vn} is an orthogonal (not orthonormal) basis for R n. Then we can write any vector v as v = ∑ i civi for some constants ci. Find a formula for the constants ci in terms of v and the vectors in S. Hint 3. Let u, v be linearly independent vectors in R3, and P = span{u, v} be the plane spanned by u and v. (a) Is the vector v⊥ := v − u·v u·uu in the plane P ? (b) What is the (cosine of the) angle between v⊥ and u? (c) How can you ﬁnd a third vector perpendicular to both u and v⊥? (d) Construct an orthonormal basis for R 3 from u and v. (e) Test your abstract formulæ starting with u = ( 1, 2, 0 ) and v = ( 0, 1, 1 ) . Hint 4. Find an orthonormal basis for R 4 which includes (1, 1, 1, 1) using the following procedure: (a) Pick a vector perpendicular to the vector v1 =     1 1 1 1     273 274 Orthonormal Bases and Complements from the solution set of the matrix equation vT 1 x = 0 . Pick the vector v2 obtained from the standard Gaussian elimina- tion procedure which is the coeﬃcient of x2. (b) Pick a vector perpendicular to both v1 and v2 from the solutions set of the matrix equation( vT 1 vT 2 ) x = 0 . Pick the vector v3 obtained from the standard Gaussian elimina- tion procedure with x3 as the coeﬃcient. (c) Pick a vector perpendicular to v1, v2, and v3 from the solution set of the matrix equation    vT 1 vT 2 vT 3    x = 0 . Pick the vector v4 obtained from the standard Gaussian elimina- tion procedure with x3 as the coeﬃcient. (d) Normalize the four vectors obtained above. 5. Use the inner product f · g := ∫ 1 0 f (x)g(x)dx on the vector space V = span{1, x, x2, x 3} to perform the Gram-Schmidt procedure on the set of vectors {1, x, x2, x 3}. 6. Use the inner product f · g := ∫ 2π 0 f (x)g(x)dx on the vector space V = span{sin(x), sin(2x), sin(3x)} to perform the Gram-Schmidt procedure on the set of vectors {sin(x), sin(2x), sin(3x)}. Try to build an orthonormal basis for the vector space span{sin(nx) | n ∈ N} . 274 14.7 Review Problems 275 7. (a) Show that if Q is an orthogonal n × n matrix, then u v = (Qu) (Qv) , for any u, v ∈ R n. That is, Q preserves the inner product. (b) Does Q preserve the outer product? (c) If the set of vectors {u1, . . . , un} is orthonormal and {λ1, · · · , λn} is a set of numbers, then what are the eigenvalues and eigenvectors of the matrix M = ∑n i=1 λiuiuT i ? (d) How would the eigenvectors and eigenvalues of this matrix change if we replaced {u1, . . . , un} by {Qu1, . . . , Qun}? 8. Carefully write out the Gram-Schmidt procedure for the set of vectors     1 1 1   ,   1 −1 1   ,   1 1 −1      . Is it possible to rescale the second vector obtained in the procedure to a vector with integer components? 9. (a) Suppose u and v are linearly independent. Show that u and v⊥ are also linearly independent. Explain why {u, v⊥} is a basis for span{u, v}. Hint (b) Repeat the previous problem, but with three independent vectors u, v, w where v⊥ and w⊥ are as deﬁned by the Gram-Schmidt procedure. 10. Find the QR factorization of M =   1 0 2 −1 2 0 −1 −2 2   . 11. Given any three vectors u, v, w, when do v⊥ or w⊥ of the Gram–Schmidt procedure vanish? 275 276 Orthonormal Bases and Complements 12. For U a subspace of W , use the subspace theorem to check that U ⊥ is a subspace of W . 13. Let Sn and An deﬁne the space of n × n symmetric and anti-symmetric matrices, respectively. These are subspaces of the vector space M n n of all n × n matrices. What is dim M n n , dim Sn, and dim An? Show that M n n = Sn + An. Deﬁne an inner product on square matrices M · N = trM N . Is A ⊥ n = Sn? Is M n n = Sn ⊕ An? 14. The vector space V = span{sin(t), sin(2t), sin(3t), sin(3t)} has an inner product: f · g := ∫ 2π 0 f (t)g(t)dt . Find the orthogonal compliment to U = span{sin(t) + sin(2t)} in V . Express sin(t) − sin(2t) as the sum of vectors from U and U ⊥. 276 15 Diagonalizing Symmetric Matrices Symmetric matrices have many applications. For example, if we consider the shortest distance between pairs of important cities, we might get a table like the following. Davis Seattle San Francisco Davis 0 2000 80 Seattle 2000 0 2010 San Francisco 80 2010 0 Encoded as a matrix, we obtain M =   0 2000 80 2000 0 2010 80 2010 0   = M T . Deﬁnition A matrix M is symmetric if M T = M. One very nice property of symmetric matrices is that they always have real eigenvalues. Review exercise 1 guides you through the general proof, but below is an example for 2 × 2 matrices. 277 278 Diagonalizing Symmetric Matrices Example 140 For a general symmetric 2 × 2 matrix, we have: Pλ ( a b b d ) = det (λ − a −b −b λ − d ) = (λ − a)(λ − d) − b 2 = λ2 − (a + d)λ − b 2 + ad ⇒ λ = a + d 2 ± √ b2 + ( a − d 2 )2. Notice that the discriminant 4b2 + (a − d)2 is always positive, so that the eigenvalues must be real. Now, suppose a symmetric matrix M has two distinct eigenvalues λ ̸= µ and eigenvectors x and y; M x = λx, M y = µy. Consider the dot product x y = xT y = yT x and calculate xT M y = xT µy = µx y, and xT M y = (yT M x) T (by transposing a 1 × 1 matrix) = (yT λx) T = (λx y)T = λx y. Subtracting these two results tells us that: 0 = xT M y − xT M y = (µ − λ) x y. Since µ and λ were assumed to be distinct eigenvalues, λ − µ is non-zero, and so x y = 0. We have proved the following theorem. Theorem 15.0.1. Eigenvectors of a symmetric matrix with distinct eigen- values are orthogonal. Reading homework: problem 1 278 279 Example 141 The matrix M = ( 2 1 1 2 ) has eigenvalues determined by det(M − λI) = (2 − λ) 2 − 1 = 0. So the eigenvalues of M are 3 and 1, and the associated eigenvectors turn out to be(1 1 ) and ( 1 −1 ). It is easily seen that these eigenvectors are orthogonal; ( 1 1 ) ( 1 −1 ) = 0. In chapter 14 we saw that the matrix P built from any orthonormal basis (v1, . . . , vn) for R n as its columns, P = ( v1 · · · vn) , was an orthogonal matrix. This means that P −1 = P T , or P P T = I = P T P. Moreover, given any (unit) vector x1, one can always ﬁnd vectors x2, . . . , xn such that (x1, . . . , xn) is an orthonormal basis. (Such a basis can be obtained using the Gram-Schmidt procedure.) Now suppose M is a symmetric n × n matrix and λ1 is an eigenvalue with eigenvector x1 (this is always the case because every matrix has at least one eigenvalue–see Review Problem 3). Let P be the square matrix of orthonormal column vectors P = ( x1 x2 · · · xn) , While x1 is an eigenvector for M , the others are not necessarily eigenvectors for M . Then M P = (λ1x1 M x2 · · · M xn) . 279 280 Diagonalizing Symmetric Matrices But P is an orthogonal matrix, so P −1 = P T . Then: P −1 = P T =    xT 1 ... xT n    ⇒ P T M P =      xT 1 λ1x1 ∗ · · · ∗ xT 2 λ1x1 ∗ · · · ∗ ... ... xT n λ1x1 ∗ · · · ∗      =      λ1 ∗ · · · ∗ 0 ∗ · · · ∗ ... ∗ ... 0 ∗ · · · ∗      =      λ1 0 · · · 0 0 ... ˆM 0      . The last equality follows since P T M P is symmetric. The asterisks in the matrix are where “stuﬀ” happens; this extra information is denoted by ˆM in the ﬁnal expression. We know nothing about ˆM except that it is an (n − 1) × (n − 1) matrix and that it is symmetric. But then, by ﬁnding an (unit) eigenvector for ˆM , we could repeat this procedure successively. The end result would be a diagonal matrix with eigenvalues of M on the diagonal. Again, we have proved a theorem: Theorem 15.0.2. Every symmetric matrix is similar to a diagonal matrix of its eigenvalues. In other words, M = M T ⇔ M = P DP T where P is an orthogonal matrix and D is a diagonal matrix whose entries are the eigenvalues of M . Reading homework: problem 2 280 15.1 Review Problems 281 To diagonalize a real symmetric matrix, begin by building an orthogonal matrix from an orthonormal basis of eigenvectors, as in the example below. Example 142 The symmetric matrix M = (2 1 1 2 ) , has eigenvalues 3 and 1 with eigenvectors ( 1 1 ) and ( 1 −1 ) respectively. After normal- izing these eigenvectors, we build the orthogonal matrix: P = ( 1√2 1√2 1√2 −1√2 ) . Notice that P T P = I. Then: M P = ( 3√2 1√2 3√2 −1√2 ) = ( 1√2 1√2 1√2 −1√2 ) ( 3 0 0 1 ) . In short, M P = P D, so D = P T M P . Then D is the diagonalized form of M and P the associated change-of-basis matrix from the standard basis to the basis of eigenvectors. 3 × 3 Example 15.1 Review Problems Webwork: Reading Problems 1 , 2 , Diagonalizing a symmetric matrix 3, 4 1. (On Reality of Eigenvalues) (a) Suppose z = x + iy where x, y ∈ R, i = √−1, and z = x − iy. Compute zz and zz in terms of x and y. What kind of numbers are zz and zz? (The complex number z is called the complex conjugate of z). (b) Suppose that λ = x + iy is a complex number with x, y ∈ R, and that λ = λ. Does this determine the value of x or y? What kind of number must λ be? 281 282 Diagonalizing Symmetric Matrices (c) Let x =    z1 ... zn    ∈ C n. Let x† = ( z1 · · · zn) ∈ C n (a 1 × n complex matrix or a row vector). Compute x†x. Using the result of part 1a, what can you say about the number x†x? (E.g., is it real, imaginary, positive, negative, etc.) (d) Suppose M = M T is an n × n symmetric matrix with real entries. Let λ be an eigenvalue of M with eigenvector x, so M x = λx. Compute: x†M x x†x (e) Suppose Λ is a 1 × 1 matrix. What is ΛT ? (f) What is the size of the matrix x†M x? (g) For any matrix (or vector) N , we can compute N by applying complex conjugation to each entry of N . Compute (x†)T . Then compute (x†M x)T . Note that for matrices AB + C = AB + C. (h) Show that λ = λ. Using the result of a previous part of this problem, what does this say about λ? Hint 2. Let x1 =  a b c   , where a2 + b2 + c2 = 1. Find vectors x2 and x3 such that {x1, x2, x3} is an orthonormal basis for R3. What can you say about the matrix P whose columns are the vectors x1, x2 and x3 that you found? 3. Let V ∋ v ̸= 0 be a vector space, dimV = n and L : V linear −−−→ V . (a) Explain why the list of vectors (v, Lv, L 2v, . . . , Lnv) is linearly dependent. 282 15.1 Review Problems 283 (b) Explain why there exist scalars αi not all zero such that α0v + α1Lv + α2L 2v + · · · + αnLnv = 0 . (c) Let m be the largest integer such that αm ̸= 0 and p(z) = α0 + α1z + α2z2 + · · · + αmzn . Explain why the polynomial p(z) can be written as p(z) = αm(z − λ1)(z − λ2) . . . (z − λm) . [Note that some of the roots λi could be complex.] (d) Why does the following equation hold (L − λ1)(L − λ2) . . . (L − λm)v = 0 ? (e) Explain why one of the numbers λi (1 ≤ i ≤ m) must be an eigenvalue of L. 4. (Dimensions of Eigenspaces) (a) Let A =  4 0 0 0 2 −2 0 −2 2   . Find all eigenvalues of A. (b) Find a basis for each eigenspace of A. What is the sum of the dimensions of the eigenspaces of A? (c) Based on your answer to the previous part, guess a formula for the sum of the dimensions of the eigenspaces of a real n×n symmetric matrix. Explain why your formula must work for any real n × n symmetric matrix. 5. If M is not square then it can not be symmetric. However, M M T and M T M are symmetric, and therefore diagonalizable. (a) Is it the case that all of the eigenvalues of M M T must also be eigenvalues of M T M ? 283 284 Diagonalizing Symmetric Matrices (b) Given an eigenvector of M M T how can you obtain an eigenvector of M T M ? (c) Let M =  1 2 3 3 2 1   . Compute an orthonormal basis of eigenvectors for both M M T and M T M . If any of the eigenvalues for these two matrices agree, choose an order for them and use it to help order your orthonor- mal bases. Finally, change the input and output bases for the matrix M to these ordered orthonormal bases. Comment on what you ﬁnd. (Hint: The result is called the Singular Value Decompo- sition Theorem.) 284 16 Kernel, Range, Nullity, Rank Given a linear transformation L : V → W , we often want to know if it has an inverse, i.e., if there exists a linear trans- formation M : W → V such that for any vector v ∈ V , we have M Lv = v , and for any vector w ∈ W , we have LM w = w . A linear transformation is a special kind of function from one vector space to another. So before we discuss which linear transformations have inverses, let us ﬁrst discuss inverses of arbitrary functions. When we later specialize to linear transformations, we’ll also ﬁnd some nice ways of creating subspaces. Let f : S → T be a function from a set S to a set T . Recall that S is called the domain of f , T is called the codomain or target of f . We now formally introduce a term that should be familar to you from many previous courses. 285 286 Kernel, Range, Nullity, Rank 16.1 Range Deﬁnition The range of a function f : S → T is the set ran(f ) := {f (s)|s ∈ S} ⊂ T . It is the subset of the codomain consisting of elements to which the function f maps, i.e., the things in T which you can get to by starting in S and applying f . The range of a matrix is very easy to ﬁnd; the range of a matrix is the span of its columns. Thus, calculation of the range of a matrix is very easy until the last step: simpliﬁcation. One aught to end by the calculation by writing the vector space as the span of a linearly independent set. Example 143 of calculating the range of a matrix. ran   1 2 0 1 1 2 1 2 0 0 1 1   :=      1 2 0 1 1 2 1 2 0 0 1 1       x y z w     |     x y z w     ∈ R4    =    x   1 1 0   + y   2 2 0   + z   0 1 1   + w  1 2 1   ∣ ∣ ∣ ∣ ∣ ∣ x, y, z, w ∈ R    . That is ran  1 2 0 1 1 2 1 2 0 0 1 1   = span      1 1 0   ,   2 2 0   ,  0 1 1   ,  1 2 1      but since RREF  1 2 0 1 1 2 1 2 0 0 1 1   =   1 2 0 1 0 0 1 1 0 0 0 0   the second and fourth columns (which are the non-pivot columns), can be expressed as linear combinations of columns to their left. They can then be removed from the set in the span to obtain ran  1 2 0 1 1 2 1 2 0 0 1 1   = span      1 1 0   ,   0 1 1      . 286 16.2 Image 287 It might occur to you that the range of the 3 × 4 matrix from the last example can be expressed as the range of a 3 × 2 matrix; ran  1 2 0 1 1 2 1 2 0 0 1 1   = ran  1 0 1 1 0 1   . Indeed, because the span of a set of vectors does not change when we replace the vectors with another set through an invertible process, we can calculate ranges through strings of equalities of ranges of matrices that diﬀerer by Elementary Column Operations, ECOs, ending with the range of a matrix in Column Reduced Echelon Form, CREF, with its zero columns deleted. Example 144 Calculating a range with ECOs ran   0 1 1 1 3 1 1 2 0   c1↔c3= ran  1 1 0 1 3 1 0 2 1   c′ 2=c2−c1 = ran  1 0 0 1 2 1 0 2 1   c′ 2= 1 2 c2 = ran   1 0 0 1 1 1 0 1 1   c′ 3=c3−c2 = ran   1 0 0 1 1 0 0 1 0   = ran   1 0 1 1 0 1   . This is an eﬃcient way to compute and encode the range of a matrix. 16.2 Image Deﬁnition For any subset U of the domain S of a function f : S → T the image of U is f (U ) = Im U := {f (x)|x ∈ U } . Example 145 The image of the cube U =    a   1 0 0   + b   0 1 0   + c   0 0 1   ∣ ∣ ∣ ∣ ∣ ∣a, b, c ∈ [0, 1]    under multiplication by the matrix M =  1 0 0 1 1 1 0 0 1   287 288 Kernel, Range, Nullity, Rank is the parallelepiped Img U =    a   1 1 0   + b  0 1 0   + c  0 1 1   ∣ ∣ ∣ ∣ ∣ ∣ a, b, c ∈ [0, 1]    . Note that for most subsets U of the domain S of a function f the image of U is not a vector space. The range of a function is the particular case of the image where the subset of the domain is the entire domain; ranf = ImgS. For this reason, the range of f is also sometimes called the image of f and is sometimes denoted im(f ) or f (S). We have seen that the range of a matrix is always a span of vectors, and hence a vector space. Note that we prefer the phrase “range of f ” to the phrase “image of f” because we wish to avoid confusion between homophones; the word “image” is also used to describe a single element of the codomain assigned to a single element of the domain. For example, one might say of the function A : R → R with rule of correspondence A(x =) = 2x − 1 for all x in R that the image of 2 is 3 with this second meaning of the word “image” in mind. By contrast, one would never say that the range of 2 is 3 since the former is not a function and the latter is not a set. For thinking about inverses of function we want to think in the oposite direction in a sense. Deﬁnition The pre-image of any subset U ⊂ T is f −1(U ) := {s ∈ S|f (s) ∈ U } ⊂ S. The pre-image of a set U is the set of all elements of S which map to U . Example 146 The pre-image of the set U =    a  2 1 1   ∣ ∣ ∣ ∣ ∣ ∣ a ∈ [0, 1]    (a line segment) under the matrix M =   1 0 1 0 1 1 0 1 1   : R3 → R3 is the set M −1U = {x|M x = v for some v ∈ U } =     x y z   ∣ ∣ ∣ ∣ ∣ ∣   1 0 1 0 1 1 0 1 1     x y z   = a  2 1 1   for some a ∈ [0, 1]    . 288 16.2 Image 289 Figure 16.1: For the function f : S → T , S is the domain, T is the tar- get/codomain, f (S) is the range and f −1(U ) is the pre-image of U ⊂ T . Since RREF  1 0 1 2a 0 1 1 a 0 1 1 a   =   1 0 1 2a 0 1 1 a 0 0 0 0   we have M −1U =    a  2 1 0   + b  −1 −1 1   ∣ ∣ ∣ ∣ ∣ ∣ a ∈ [0, 1], b ∈ R    , a strip from a plane in R3. 16.2.1 One-to-one and Onto The function f is one-to-one (sometimes denoted 1:1) if diﬀerent elements in S always map to diﬀerent elements in T . That is, f is one-to-one if for any elements x ̸= y ∈ S, we have that f (x) ̸= f (y), as pictured below. 289 290 Kernel, Range, Nullity, Rank One-to-one functions are also called injective functions (and sometimes called monomorphisms.) Notice that injectivity is a condition on the pre- images of f . The function f is onto if every element of T is mapped to by some element of S. That is, f is onto if for any t ∈ T , there exists some s ∈ S such that f (s) = t. Onto functions are also called surjective functions (and sometimes epimorphisms.) Notice that surjectivity is a condition on the range of f . If f is both injective and surjective, it is bijective (or an isomorphism.) 290 16.2 Image 291 Theorem 16.2.1. A function f : S → T has an inverse function g : T → S if and only if f is bijective. Proof. This is an “if and only if” statement so the proof has two parts. 1. (Existence of an inverse ⇒ bijective.) Suppose that f has an inverse function g. We need to show f is bijec- tive, which we break down into injective and surjective. • The function f is injective: Suppose that we have s, s ′ ∈ S such that f (s) = f (s′). We must have that g(f (s)) = s for any s ∈ S, so in particular g(f (s)) = s and g(f (s′)) = s′. But since f (s) = f (s′), we have g(f (s)) = g(f (s′)) so s = s′. Therefore, f is injective. • The function f is surjective: Let t be any element of T . We must have that f (g(t)) = t. Thus, g(t) is an element of S which maps to t. So f is surjective. 2. (Bijectivity ⇒ existence of an inverse.) Suppose that f is bijective. Hence f is surjective, so every element t ∈ T has at least one pre- image. Being bijective, f is also injective, so every t has no more than one pre-image. Therefore, to construct an inverse function g, we simply deﬁne g(t) to be the unique pre-image f −1(t) of t. Now let us specialize to functions f that are linear maps between two vector spaces. Everything we said above for arbitrary functions is exactly the same for linear functions. However, the structure of vector spaces lets us say much more about one-to-one and onto functions whose domains are vector spaces than we can say about functions on general sets. For example, we know that a linear function always sends 0V to 0W , i.e., f (0V ) = 0W In Review Exercise 2, you will show that a linear transformation is one-to-one if and only if 0V is the only vector that is sent to 0W . Linear functions are unlike arbitrary functions between sets in that, by looking at just one (very special) vector, we can ﬁgure out whether f is one-to-one! 291 292 Kernel, Range, Nullity, Rank 16.2.2 Kernel Let L : V → W be a linear transformation. Suppose L is not injective. Then we can ﬁnd v1 ̸= v2 such that Lv1 = Lv2. So v1 − v2 ̸= 0, but L(v1 − v2) = 0. Deﬁnition If L : V → W is a linear function then the set ker L = {v ∈ V | Lv = 0W } ⊂ V is called the kernel of L. Notice that if L has matrix M in some basis, then ﬁnding the kernel of L is equivalent to solving the homogeneous system M X = 0. Example 147 Let L(x, y) = (x + y, x + 2y, y). Is L one-to-one? To ﬁnd out, we can solve the linear system:  1 1 0 1 2 0 0 1 0   ∼  1 0 0 0 1 0 0 0 0   . Then all solutions of M X = 0 are of the form x = y = 0. In other words, ker L = {0}, and so L is injective. Reading homework: problem 1 Notice that in the above example we found ker  1 1 1 2 0 1   = ker  1 0 0 1 0 0   . In general, an eﬃcient way to get the kernel of a matrix is to write a string of equalities between kernels of matrices which diﬀer by row operations and, once RREF is reached, note that the linear relationships between the columns for a basis for the nullspace. 292 16.2 Image 293 Example 148 of calculating the kernel of a matrix. ker   1 2 0 1 1 2 1 2 0 0 1 1   = ker  1 2 0 1 0 0 1 1 0 0 1 1   = ker   1 2 0 1 0 0 1 1 0 0 0 0   = span        −2 1 0 0     ,     −1 0 −1 1        . The two column vectors in this last line describe linear relations between the columns c1, c2, c3, c4. In particular −2c1 + 1c2 = 0 and −c1 − c3 + c4 = 0. In general, a description of the kernel of a matrix should be of the form span{v1, v2, . . . , vn} with one vector vi for each non-pivot column. To agree with the standard procedure, think about how to describe each non-pivot column in terms of columns to its left; this will yield an expression of the form wherein each vector has a 1 as its last non-zero entry. (Think of Column Reduced Echelon Form, CREF.) Thinking again of augmented matrices, if a matrix has more than one element in its kernel then it is not invertible since the existence of multiple solutions to M x = 0 implies that RREF M ̸= I. However just because the kernel of a linear function is trivial does not mean that the function is invertible. Example 149 ker   1 0 1 1 0 1   = {(0 0 )} since the matrix has no non-pivot columns. However,  1 0 1 1 0 1   : R2 → R3 is not invertible because there are many things in its codomain that are not in its range, such as   1 0 0  . A trivial kernel only gives us half of what is needed for invertibility. Theorem 16.2.2. A linear transformation L : V → W is injective iﬀ kerL = {0V } . 293 294 Kernel, Range, Nullity, Rank Proof. The proof of this theorem is Review Exercise 2. Theorem 16.2.3. If L : V linear −−−→ W then ker L is a subspace of V . Proof. Notice that if L(v) = 0 and L(u) = 0, then for any constants c, d, L(cu + dv) = 0. Then by the subspace theorem, the kernel of L is a subspace of V . Example 150 Let L : R3 → R be the linear transformation deﬁned by L(x, y, z) = (x + y + z). Then ker L consists of all vectors (x, y, z) ∈ R3 such that x + y + z = 0. Therefore, the set V = {(x, y, z) ∈ R3 | x + y + z = 0} is a subspace of R3. When L : V → V , the above theorem has an interpretation in terms of the eigenspaces of L. Suppose L has a zero eigenvalue. Then the associated eigenspace consists of all vectors v such that Lv = 0v = 0; the 0-eigenspace of L is exactly the kernel of L. In the example where L(x, y) = (x + y, x + 2y, y), the map L is clearly not surjective, since L maps R2 to a plane through the origin in R3. But any plane through the origin is a subspace. In general notice that if w = L(v) and w′ = L(v′), then for any constants c, d, linearity of L ensures that cw + dw′ = L(cv + dv′) . Now the subspace theorem strikes again, and we have the following theorem: Theorem 16.2.4. If L : V → W is linear then the range L(V ) is a subspace of W . Example 151 Let L(x, y) = (x + y, x + 2y, y). The range of L is a plane through the origin and thus a subspace of R3. Indeed the matrix of L in the standard basis is   1 1 1 2 0 1   . The columns of this matrix encode the possible outputs of the function L because L(x, y) =   1 1 1 2 0 1   (x y ) = x  1 1 0   + y  1 2 1   . 294 16.2 Image 295 Thus L(R 2) = span     1 1 0   ,   1 2 1      Hence, when bases and a linear transformation is are given, people often refer to its range as the column space of the corresponding matrix. To ﬁnd a basis of the range of L, we can start with a basis S = {v1, . . . , vn} for V . Then the most general input for L is of the form α1v1 + · · · + αnvn. In turn, its most general output looks like L (α1v1 + · · · + αnvn) = α1Lv1 + · · · + αnLvn ∈ span{Lv1, . . . Lvn} . Thus L(V ) = span L(S) = span{Lv1, . . . , Lvn} . However, the set {Lv1, . . . , Lvn} may not be linearly independent; we must solve c1Lv1 + · · · + cnLvn = 0 , to determine whether it is. By ﬁnding relations amongst the elements of L(S) = {Lv1, . . . , Lvn}, we can discard vectors until a basis is arrived at. The size of this basis is the dimension of the range of L, which is known as the rank of L. Deﬁnition The rank of a linear transformation L is the dimension of its range. The nullity of a linear transformation is the dimension of the kernel. The notation for these numbers is null L := dim ker L, rank L := dim L(V ) = dim ran L. 295 296 Kernel, Range, Nullity, Rank Theorem 16.2.5 (Dimension Formula). Let L : V → W be a linear trans- formation, with V a ﬁnite-dimensional vector space1. Then: dim V = dim ker V + dim L(V ) = null L + rank L. Proof. Pick a basis for V : {v1, . . . , vp, u1, . . . , uq}, where v1, . . . , vp is also a basis for ker L. This can always be done, for exam- ple, by ﬁnding a basis for the kernel of L and then extending to a basis for V . Then p = null L and p + q = dim V . Then we need to show that q = rank L. To accomplish this, we show that {L(u1), . . . , L(uq)} is a basis for L(V ). To see that {L(u1), . . . , L(uq)} spans L(V ), consider any vector w in L(V ). Then we can ﬁnd constants ci, d j such that: w = L(c1v1 + · · · + cpvp + d1u1 + · · · + dquq) = c1L(v1) + · · · + cpL(vp) + d1L(u1) + · · · + dqL(uq) = d 1L(u1) + · · · + dqL(uq) since L(vi) = 0, ⇒ L(V ) = span{L(u1), . . . , L(uq)}. Now we show that {L(u1), . . . , L(uq)} is linearly independent. We argue by contradiction. Suppose there exist constants dj (not all zero) such that 0 = d1L(u1) + · · · + d qL(uq) = L(d1u1 + · · · + dquq). But since the uj are linearly independent, then d1u1 + · · · + dquq ̸= 0, and so d1u1 + · · · + dquq is in the kernel of L. But then d1u1 + · · · + dquq must be in the span of {v1, . . . , vp}, since this was a basis for the kernel. This contradicts the assumption that {v1, . . . , vp, u1, . . . , uq} was a basis for V , so we are done. 1The formula still makes sense for inﬁnite dimensional vector spaces, such as the space of all polynomials, but the notion of a basis for an inﬁnite dimensional space is more sticky than in the ﬁnite-dimensional case. Furthermore, the dimension formula for inﬁnite dimensional vector spaces isn’t useful for computing the rank of a linear transformation, since an equation like ∞ = ∞ + x cannot be solved for x. As such, the proof presented assumes a ﬁnite basis for V . 296 16.3 Summary 297 Reading homework: problem 2 Example 152 (Row rank equals column rank) Suppose M is an m × n matrix. The matrix M itself is a linear transformation M : Rn → Rm but it must also be the matrix of some linear transformation L : V linear −→ W . Here we only know that dim V = n and dim W = m. The rank of the map L is the dimension of its image and also the number of linearly independent columns of M . Hence, this is sometimes called the column rank of M . The dimension formula predicts the dimension of the kernel, i.e. the nullity: null L = dimV − rankL = n − r. To compute the kernel we would study the linear system M x = 0 , which gives m equations for the n-vector x. The row rank of a matrix is the number of linearly independent rows (viewed as vectors). Each linearly independent row of M gives an independent equation satisﬁed by the n-vector x. Every independent equation on x reduces the size of the kernel by one, so if the row rank is s, then null L + s = n. Thus we have two equations: null L + s = n and null L = n − r . From these we conclude the r = s. In other words, the row rank of M equals its column rank. 16.3 Summary We have seen that a linear transformation has an inverse if and only if it is bijective (i.e., one-to-one and onto). We also know that linear transforma- tions can be represented by matrices, and we have seen many ways to tell whether a matrix is invertible. Here is a list of them: Theorem 16.3.1 (Invertibility). Let V be an n-dimensional vector space and suppose L : V → V is a linear transformation with matrix M in some basis. Then M is an n × n matrix, and the following statements are equivalent: 297 298 Kernel, Range, Nullity, Rank 1. If v is any vector in R n, then the system M x = v has exactly one solution. 2. The matrix M is row-equivalent to the identity matrix. 3. If v is any vector in V , then L(x) = v has exactly one solution. 4. The matrix M is invertible. 5. The homogeneous system M x = 0 has no non-zero solutions. 6. The determinant of M is not equal to 0. 7. The transpose matrix M T is invertible. 8. The matrix M does not have 0 as an eigenvalue. 9. The linear transformation L does not have 0 as an eigenvalue. 10. The characteristic polynomial det(λI − M ) does not have 0 as a root. 11. The columns (or rows) of M span Rn. 12. The columns (or rows) of M are linearly independent. 13. The columns (or rows) of M are a basis for R n. 14. The linear transformation L is injective. 15. The linear transformation L is surjective. 16. The linear transformation L is bijective. Note: it is important that M be an n × n matrix! If M is not square, then it can’t be invertible, and many of the statements above are no longer equivalent to each other. Proof. Many of these equivalences were proved earlier in other chapters. Some were left as review questions or sample ﬁnal questions. The rest are left as exercises for the reader. Invertibility Conditions 298 16.4 Review Problems 299 16.4 Review Problems Webwork: Reading Problems 1 , 2 , Elements of kernel 3 Basis for column space 4 Basis for kernel 5 Basis for kernel and range 6 Orthonomal range basis 7 Orthonomal kernel basis 8 Orthonomal kernel and range bases 9 Orthonomal kernel, range and row space bases 10 Rank 11 1. Consider an arbitrary matrix M : Rm → Rn. (a) Argue that M x = 0 if only if x is perpendicular to all columns of M T . (b) Argue that M x = 0 if only if x is perpendicular to all of the linear combinations of the columns of M T . (c) Argue that ker M is perpendicular to ran M T . (d) Argue further Rm = ker M ⊕ ran M T . (e) Argue analogously that R n = ker M T ⊕ ran M . The equations in the last two parts describe how a linear transforma- tion M : Rm → R n determines orthogonal decompositions of both it’s domain and target. This result sometimes goes by the humble name The Fundamental Theorem of Linear Algebra. 2. Let L : V → W be a linear transformation. Show that ker L = {0V } if and only if L is one-to-one: (a) (Trivial kernel ⇒ injective.) Suppose that ker L = {0V }. Show that L is one-to-one. Think about methods of proof–does a proof by contradiction, a proof by induction, or a direct proof seem most appropriate? (b) (Injective ⇒ trivial kernel.) Now suppose that L is one-to-one. Show that ker L = {0V }. That is, show that 0V is in ker L, and then show that there are no other vectors in ker L. 299 300 Kernel, Range, Nullity, Rank Hint 3. Let {v1, . . . , vn} be a basis for V and L : V → W is a linear function. Carefully explain why L(V ) = span{Lv1, . . . , Lvn} . 4. Suppose L : R 4 → R 3 whose matrix M in the standard basis is row equivalent to the following matrix:  1 0 0 −1 0 1 0 1 0 0 1 1   = RREF(M ) ∼ M. (a) Explain why the ﬁrst three columns of the original matrix M form a basis for L(R 4). (b) Find and describe an algorithm (i.e., a general procedure) for computing a basis for L(R n) when L : R n → R m. (c) Use your algorithm to ﬁnd a basis for L(R4) when L : R 4 → R3 is the linear transformation whose matrix M in the standard basis is  2 1 1 4 0 1 0 5 4 1 1 6   . 5. Claim: If {v1, . . . , vn} is a basis for ker L, where L : V → W , then it is always possible to extend this set to a basis for V . Choose some simple yet non-trivial linear transformations with non- trivial kernels and verify the above claim for those transformations. 6. Let Pn(x) be the space of polynomials in x of degree less than or equal to n, and consider the derivative operator d dx : Pn(x) → Pn(x) . 300 16.4 Review Problems 301 Find the dimension of the kernel and image of this operator. What happens if the target space is changed to Pn−1(x) or Pn+1(x)? Now consider P2(x, y), the space of polynomials of degree two or less in x and y. (Recall how degree is counted; xy is degree two, y is degree one and x2y is degree three, for example.) Let L := ∂ ∂x + ∂ ∂y : P2(x, y) → P2(x, y). (For example, L(xy) = ∂ ∂x (xy) + ∂ ∂y (xy) = y + x.) Find a basis for the kernel of L. Verify the dimension formula in this case. 7. Lets demonstrate some ways the dimension formula can break down if a vector space is inﬁnite dimensional. (a) Let R[x] be the vector space of all polynomials in the variable x with real coeﬃcients. Let D = d dx be the usual derivative operator. Show that the range of D is R[x]. What is ker D? Hint: Use the basis {xn | n ∈ N}. (b) Let L : R[x] → R[x] be the linear map L(p(x)) = xp(x) . What is the kernel and range of M ? (c) Let V be an inﬁnite dimensional vector space and L : V → V be a linear operator. Suppose that dim ker L < ∞, show that dim L(V ) is inﬁnite. Also show that when dim L(V ) < ∞ that dim ker L is inﬁnite. 8. This question will answer the question, “If I choose a bit vector at random, what is the probability that it lies in the span of some other vectors?” i. Given a collection S of k bit vectors in B3, consider the bit ma- trix M whose columns are the vectors in S. Show that S is linearly independent if and only if the kernel of M is trivial, namely the set kerM = {v ∈ B3| M v = 0} contains only the zero vector. 301 302 Kernel, Range, Nullity, Rank ii. Give some method for choosing a random bit vector v in B3. Sup- pose S is a collection of 2 linearly independent bit vectors in B3. How can we tell whether S ∪ {v} is linearly independent? Do you think it is likely or unlikely that S ∪ {v} is linearly independent? Explain your reasoning. iii. If P is the characteristic polynomial of a 3 × 3 bit matrix, what must the degree of P be? Given that each coeﬃcient must be either 0 or 1, how many possibilities are there for P ? How many of these possible characteristic polynomials have 0 as a root? If M is a 3×3 bit matrix chosen at random, what is the probability that it has 0 as an eigenvalue? (Assume that you are choosing a random matrix M in such a way as to make each characteristic polynomial equally likely.) What is the probability that the columns of M form a basis for B3? (Hint: what is the relationship between the kernel of M and its eigenvalues?) Note: We could ask the same question for real vectors: If I choose a real vector at random, what is the probability that it lies in the span of some other vectors? In fact, once we write down a reasonable way of choosing a random real vector, if I choose a real vector in Rn at random, the probability that it lies in the span of n − 1 other real vectors is zero! 302 17 Least squares and Singular Values Consider the linear algebraic equation L(x) = v, where L : U linear −−−→ W and v ∈ W are known while x is unknown. As we have seen, this system may have one solution, no solutions, or inﬁnitely many solutions. But if v is not in the range of L there will never be any solutions for L(x) = v. However, for many applications we do not need an exact solution of the system; instead, we may only need the best approximation possible. “My work always tried to unite the Truth with the Beautiful, but when I had to choose one or the other, I usually chose the Beautiful.” – Hermann Weyl. 303 304 Least squares and Singular Values If the vector space W has a notion of lengths of vectors, we can try to ﬁnd x that minimizes ||L(x) − v||. This method has many applications, such as when trying to ﬁt a (perhaps linear) function to a “noisy” set of observations. For example, suppose we measured the position of a bicycle on a racetrack once every ﬁve seconds. Our observations won’t be exact, but so long as the observations are right on average, we can ﬁgure out a best-possible linear function of position of the bicycle in terms of time. Suppose M is the matrix for the linear function L : U → W in some bases for U and W . The vectors v and x are represented by column vectors V and X in these bases. Then we need to approximate M X − V ≈ 0 . Note that if dim U = n and dim W = m then M can be represented by an m × n matrix and x and v as vectors in R n and R m, respectively. Thus, we can write W = L(U ) ⊕ L(U ) ⊥. Then we can uniquely write v = v∥ + v⊥, with v∥ ∈ L(U ) and v⊥ ∈ L(U ) ⊥. Thus we should solve L(u) = v∥. In components, v⊥ is just V − M X, and is the part we will eventually wish to minimize. In terms of M , recall that L(V ) is spanned by the columns of M . (In the standard basis, the columns of M are M e1, . . ., M en.) Then v⊥ must be perpendicular to the columns of M . i.e., M T (V − M X) = 0, or M T M X = M T V. Solutions of M T M X = M T V for X are called least squares solutions to M X = V . Notice that any solution X to M X = V is a least squares solution. 304 305 However, the converse is often false. In fact, the equation M X = V may have no solutions at all, but still have least squares solutions to M T M X = M T V . Observe that since M is an m × n matrix, then M T is an n × m matrix. Then M T M is an n × n matrix, and is symmetric, since (M T M ) T = M T M . Then, for any vector X, we can evaluate X T M T M X to obtain a num- ber. This is a very nice number, though! It is just the length |M X| 2 = (M X) T (M X) = X T M T M X. Reading homework: problem 1 Now suppose that ker L = {0}, so that the only solution to M X = 0 is X = 0. (This need not mean that M is invertible because M is an n × m matrix, so not necessarily square.) However the square matrix M T M is invertible. To see this, suppose there was a vector X such that M T M X = 0. Then it would follow that X T M T M X = |M X| 2 = 0. In other words the vector M X would have zero length, so could only be the zero vector. But we are assuming that ker L = {0} so M X = 0 implies X = 0. Thus the kernel of M T M is {0} so this matrix is invertible. So, in this case, the least squares solution (the X that solves M T M X = M V ) is unique, and is equal to X = (M T M ) −1M T V. In a nutshell, this is the least squares method: • Compute M T M and M T V . • Solve (M T M )X = M T V by Gaussian elimination. Example 153 Captain Conundrum falls oﬀ of the leaning tower of Pisa and makes three (rather shaky) measurements of his velocity at three diﬀerent times. t s v m/s 1 11 2 19 3 31 Having taken some calculus1, he believes that his data are best approximated by a straight line v = at + b. 1In fact, he is a Calculus Superhero. 305 306 Least squares and Singular Values Then he should ﬁnd a and b to best ﬁt the data. 11 = a · 1 + b 19 = a · 2 + b 31 = a · 3 + b. As a system of linear equations, this becomes:   1 1 2 1 3 1   ( a b ) ? =  11 19 31   . There is likely no actual straight line solution, so instead solve M T M X = M T V . (1 2 3 1 1 1 )   1 1 2 1 3 1   ( a b ) = (1 2 3 1 1 1 )  11 19 31   . This simpliﬁes to ( 14 6 142 6 3 61 ) ∼ ( 1 0 10 0 1 1 3 ) . Thus, the least-squares ﬁt is the line v = 10 t + 1 3 . Notice that this equation implies that Captain Conundrum accelerates towards Italian soil at 10 m/s2 (which is an excellent approximation to reality) and that he started at a downward velocity of 1 3 m/s (perhaps somebody gave him a shove...)! 17.1 Projection Matrices We have seen that even if M X = V has no solutions M T M X = M T V does have solutions. One way to think about this is, since the codomain of M is the direct sum codom M = ranM ⊕ ker M T there is a unique way to write V = Vr+Vk with Vk ∈ ker M T and Vr ∈ ran M , and it is clear that M x = V only has a solution of V ∈ ran M ⇔ Vk = 0. If not, then the closest thing to a solution of M X = V is a solution to 306 17.1 Projection Matrices 307 M X = Vr. We learned to ﬁnd solutions to this in the previous subsection of this book. But here is another question, how can we determine what Vr is given M and V ? The answer is simple; suppose X is a solution to M X = Vr. Then M X = Vr =⇒ M T M x = M T Vr =⇒ M T M x = M T (Vr + 0) =⇒ M T M x = M T (Vr+Vk) =⇒ M T M x = M T V =⇒ X = (M T M ) −1M T V if indeed M T M is invertible. Since, by assumption, X is a solution M (M T M ) −1M T V = Vr. That is, the matrix which projects V onto its ran M part is M (M T M ) −1M T . Example 154 To project   1 1 1   onto span      1 1 0   ,   1 −1 0      = ran   1 1 1 −1 0 0   multi- ply by the matrix   1 1 1 −1 0 0     ( 1 1 0 1 −1 0 )   1 1 1 −1 0 0     −1 ( 1 1 0 1 −1 0 ) =   1 1 1 −1 0 0   (2 0 0 2 )−1 ( 1 1 0 1 −1 0 ) = 1 2   1 1 1 −1 0 0   (1 1 0 1 −1 0 ) = 1 2   2 0 0 0 2 0 0 0 0   . This gives 1 2  2 0 0 0 2 0 0 0 0    1 1 1   =  1 1 0   . 307 308 Least squares and Singular Values 17.2 Singular Value Decomposition Suppose L : V linear −−−→W . It is unlikely that dim V =: n = m := dim W so a m × n matrix M of L in bases for V and W will not be square. Therefore there is no eigenvalue problem we can use to uncover a preferred basis. However, if the vector spaces V and W both have inner products, there does exist an analog of the eigenvalue problem, namely the singular values of L. Before giving the details of the powerful technique known as the singular value decomposition, we note that it is an excellent example of what Eugene Wigner called the “Unreasonable Eﬀectiveness of Mathematics”: There is a story about two friends who were classmates in high school, talking about their jobs. One of them became a statistician and was working on population trends. He showed a reprint to his former classmate. The reprint started, as usual with the Gaussian distribution and the statistician explained to his former classmate the meaning of the symbols for the actual population and so on. His classmate was a bit incredulous and was not quite sure whether the statistician was pulling his leg. “How can you know that?” was his query. “And what is this symbol here?” “Oh,” said the statistician, this is “π.” “And what is that?” “The ratio of the circumference of the circle to its diameter.” “Well, now you are pushing your joke too far,” said the classmate, “surely the population has nothing to do with the circumference of the circle.” Eugene Wigner, Commun. Pure and Appl. Math. XIII, 1 (1960). Whenever we mathematically model a system, any “canonical quantities” (those that do not depend on any choices we make for calculating them) will correspond to important features of the system. For examples, the eigenval- ues of the eigenvector equation you found in review question 1, chapter 12 encode the notes and harmonics that a guitar string can play! Singular values appear in many linear algebra applications, especially those involving very large data sets such as statistics and signal processing. Let us focus on the m×n matrix M of a linear transformation L : V → W written in orthonormal bases for the input and outputs of L (notice, the existence of these othonormal bases is predicated on having inner products for V and W ). Even though the matrix M is not square, both the matrices M M T and M T M are square and symmetric! In terms of linear transformations M T is the matrix of a linear transformation L ∗ : W linear −−−→V . 308 17.2 Singular Value Decomposition 309 Thus LL ∗ : W → W and L ∗L : V → V and both have eigenvalue problems. Moreover, as is shown in Chapter 15, both L ∗L and LL ∗ have orthonormal bases of eigenvectors, and both M M T and M T M can be diagonalized. Next, let us make a simplifying assumption, namely ker L = {0}. This is not necessary, but will make some of our computations simpler. Now suppose we have found an orthonormal basis (u1, . . . , un) for V composed of eigenvectors for L∗L. That is L∗Lui = λiui . Then multiplying by L gives LL ∗Lui = λiLui . I.e., Lui is an eigenvector of LL ∗. The vectors (Lu1, . . . , Lun) are linearly independent, because ker L = {0} (this is where we use our simplifying as- sumption, but you can try and extend our analysis to the case where it no longer holds). Lets compute the angles between and lengths of these vectors. For that we express the vectors ui in the bases used to compute the matrix M of L. Denoting these column vectors by Ui we then compute (M Ui) · (M Uj) = U T i M T M Uj = λj U T i Uj = λj Ui · Uj = λjδij . We see that vectors (Lu1, . . . , Lun) are orthogonal but not orthonormal. Moreover, the length of Lui is √λi. Normalizing gives the orthonormal and linearly independent ordered set ( Lu1√λ1 , . . . , Lun√ λn ) . In general, this cannot be a basis for W since ker L = {0}, dim L(V ) = dim V, and in turn dim V ≤ dim W , so n ≤ m. However, it is a subset of the eigenvectors of LL ∗ so there is an orthonor- mal basis of eigenvectors of LL ∗ of the form O′ = ( Lu1√ λ1 , . . . , Lun√λn , vn+1, . . . , vm ) =: (v1, . . . , vm) . Now lets compute the matrix of L with respect to the orthonormal basis O = (u1, . . . , un) for V and the orthonormal basis O′ = (v1, . . . , vm) for W . 309 310 Least squares and Singular Values As usual, our starting point is the computation of L acting on the input basis vectors; LO = ( Lu1, . . . , Lun) = (√λ1 v1, . . . , √ λn vn) = ( v1, . . . , vm)              √ λ1 0 · · · 0 0 √ λ2 · · · 0 ... ... . . . ... 0 0 · · · √λn 0 0 · · · 0 ... ... ... 0 0 · · · 0              . The result is very close to diagonalization; the numbers √λi along the leading diagonal are called the singular values of L. Example 155 Let the matrix of a linear transformation be M =    1 2 1 2 −1 1 − 1 2 − 1 2    . Clearly ker M = {0} while M T M = ( 3 2 − 1 2 − 1 2 3 2 ) which has eigenvalues and eigenvectors λ = 1 , u1 := ( 1√2 1√2 ) ; λ = 2 , u2 := ( 1√2 − 1√2 ) . so our orthonormal input basis is O = (( 1√2 1√2 ) , ( 1√2 − 1√2 )) . These are called the right singular vectors of M . The vectors M u1 =    1√2 0 − 1√2    and M u2 =    0 − √2 0    310 17.2 Singular Value Decomposition 311 are eigenvectors of M M T =   1 2 0 − 1 2 0 2 0 − 1 2 0 1 2   with eigenvalues 1 and 2, respectively. The third eigenvector (with eigenvalue 0) of M M T is v3 =    1√2 0 1√2    . The eigenvectors M u1 and M u2 are necessarily orthogonal, dividing them by their lengths we obtain the left singular vectors and in turn our orthonormal output basis O′ =       1√2 0 − 1√2    ,    0 −1 0    ,    1√2 0 1√2       . The new matrix M ′ of the linear transformation given by M with respect to the bases O and O′ is M ′ =  1 0 0 √2 0 0   , so the singular values are 1, √2. Finally note that arranging the column vectors of O and O′ into change of basis matrices P = ( 1√2 1√2 1√2 − 1√2 ) , Q =     1√2 0 1√2 0 −1 0 − 1√2 0 1√2     , we have, as usual, M ′ = Q −1M P . Singular vectors and values have a very nice geometric interpretation; they provide an orthonormal bases for the domain and range of L and give the factors by which L stretches the orthonormal input basis vectors. This is depicted below for the example we just computed. 311 312 Least squares and Singular Values Congratulations, you have reached the end of the book! Now test your skills on the sample ﬁnal exam. 17.3 Review Problems Webwork: Reading Problem 1 , 1. Let L : U → V be a linear transformation. Suppose v ∈ L(U ) and you have found a vector ups that obeys L(ups) = v. Explain why you need to compute ker L to describe the solution set of the linear system L(u) = v. Hint 2. Suppose that M is an m × n matrix with trivial kernel. Show that for any vectors u and v in R m: • uT M T M v = vT M T M u. 312 17.3 Review Problems 313 • vT M T M v ≥ 0. In case you are concerned (you don’t need to be) and for future reference, the notation v ≥ 0 means each component vi ≥ 0. • If vT M T M v = 0, then v = 0. (Hint: Think about the dot product in R n.) Hint 3. Rewrite the Gram-Schmidt algorithm in terms of projection matrices. 4. Show that if v1, . . . , vk are linearly independent that the matrix M = (v1 · · · vk) is not necessarily invertible but the matrix M T M is invert- ible. 5. Write out the singular value decomposition theorem of a 3 × 1, a 3 × 2, and a 3 × 3 symmetric matrix. Make it so that none of the components of your matrices are zero but your computations are simple. Explain why you choose the matrices you choose. 6. Find the best polynomial approximation to a solution to the diﬀerential equation d dx f = x + x2 by considering the derivative to have domain and codomain span {1, x, x2}. (Hint: Begin by deﬁning bases for the domain and codomain.) 313 314 Least squares and Singular Values 314 A List of Symbols ∈ “Is an element of”. ∼ “Is equivalent to”, see equivalence relations. Also, “is row equivalent to” for matrices. R The real numbers. In The n × n identity matrix. P F n The vector space of polynomials of degree at most n with coeﬃcients in the ﬁeld F. Mr k The vector space of r × k matrices. 315 316 List of Symbols 316 B Fields Deﬁnition A ﬁeld F is a set with two operations + and ·, such that for all a, b, c ∈ F the following axioms are satisﬁed: A1. Addition is associative (a + b) + c = a + (b + c). A2. There exists an additive identity 0. A3. Addition is commutative a + b = b + a. A4. There exists an additive inverse −a. M1. Multiplication is associative (a · b) · c = a · (b · c). M2. There exists a multiplicative identity 1. M3. Multiplication is commutative a · b = b · a. M4. There exists a multiplicative inverse a−1 if a ̸= 0. D. The distributive law holds a · (b + c) = ab + ac. Roughly, all of the above mean that you have notions of +, −, × and ÷ just as for regular real numbers. Fields are a very beautiful structure; some examples are rational num- bers Q, real numbers R, and complex numbers C. These examples are in- ﬁnite, however this does not necessarily have to be the case. The smallest 317 318 Fields example of a ﬁeld has just two elements, Z2 = {0, 1} or bits. The rules for addition and multiplication are the usual ones save that 1 + 1 = 0 . 318 C Online Resources Here are some internet places to get linear algebra help: • Strang’s MIT Linear Algebra Course. Videos of lectures and more: http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/ • Beezer’s online Linear Algebra Course http://linear.ups.edu/version3.html • The Khan Academy has thousands of free videos on a multitude of topics including linear algebra: http://www.khanacademy.org/ • The Linear Algebra toolkit: http://www.math.odu.edu/∼bogacki/lat/ • Carter, Tapia and Papakonstantinou’s online linear algebra resource http://ceee.rice.edu/Books/LA/index.html • S.O.S. Mathematics Matrix Algebra primer: http://www.sosmath.com/matrix/matrix.html • The Numerical Methods Guy on Youtube. Lots of worked examples: 319 320 Online Resources http://www.youtube.com/user/numericalmethodsguy • Interactive Mathematics. Lots of useful math lessons on many topics: http://www.intmath.com/ • Stat Trek. A quick matrix tutorial for statistics students: http://stattrek.com/matrix-algebra/matrix.aspx • Wolfram’s Mathworld. An online mathematics encyclopædia: http://mathworld.wolfram.com/ • Paul Dawkin’s online math notes: http://tutorial.math.lamar.edu/ • Math Doctor Bob: http://www.youtube.com/user/MathDoctorBob?feature=watch • Some pictures of how to rotate objects with matrices: http://people.cornellcollege.edu/dsherman/visualize-matrix.html • xkcd. Geek jokes: http://xkcd.com/184/ • See the bridge actually fall down: http://anothermathgeek.hubpages.com/hub/What-the-Heck-are-Eigenvalues-and-Eigenvectors 320 D Sample First Midterm Here are some worked problems typical for what you might expect on a ﬁrst midterm examination. 1. Solve the following linear system. Write the solution set in vector form. Check your solution. Write one particular solution and one homogeneous solution, if they exist. What does the solution set look like geometrically? x + 3y = 4 x − 2y + z = 1 2x + y + z = 5 2. Consider the system of equations    x − z + 2w = −1 x + y + z − w = 2 − y − 2z + 3w = −3 5x + 2y − z + 4w = 1 (a) Write an augmented matrix for this system. (b) Use elementary row operations to ﬁnd its reduced row echelon form. (c) Write the solution set for the system in the form S = {X0 + ∑ i µiYi : µi ∈ R}. 321 322 Sample First Midterm (d) What are the vectors X0 and Yi called and which matrix equations do they solve? (e) Check separately that X0 and each Yi solve the matrix systems you claimed they solved in part (d). 3. Use row operations to invert the matrix     1 2 3 4 2 4 7 11 3 7 14 25 4 11 25 50     4. Let M = ( 2 1 3 −1 ) . Calculate M T M −1. Is M symmetric? What is the trace of the transpose of f (M ), where f (x) = x2 − 1? 5. In this problem M is the matrix M = ( cos θ sin θ − sin θ cos θ ) and X is the vector X = ( x y ) . Calculate all possible dot products between the vectors X and M X. Com- pute the lengths of X and M X. What is the angle between the vectors M X and X. Draw a picture of these vectors in the plane. For what values of θ do you expect equality in the triangle and Cauchy–Schwartz inequalities? 6. Let M be the matrix         1 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1         Find a formula for M k for any positive integer power k. Try some simple examples like k = 2, 3 if confused. 7. What does it mean for a function to be linear? Check that integration is a linear function from V to V , where V = {f : R → R | f is integrable} is a vector space over R with usual addition and scalar multiplication. 322 323 8. What are the four main things we need to deﬁne for a vector space? Which of the following is a vector space over R? For those that are not vector spaces, modify one part of the deﬁnition to make it into a vector space. (a) V = { 2 × 2 matrices with entries in R}, usual matrix addition, and k · ( a b c d ) = ( ka b kc d ) for k ∈ R. (b) V = {polynomials with complex coeﬃcients of degree ≤ 3}, with usual addition and scalar multiplication of polynomials. (c) V = {vectors in R3 with at least one entry containing a 1}, with usual addition and scalar multiplication. 9. Subspaces: If V is a vector space, we say that U is a subspace of V when the set U is also a vector space, using the vector addition and scalar multiplica- tion rules of the vector space V . (Remember that U ⊂ V says that “U is a subset of V ”, i.e., all elements of U are also elements of V . The symbol ∀ means “for all” and ∈ means “is an element of”.) Explain why additive closure (u + w ∈ U ∀ u, v ∈ U ) and multiplicative closure (r.u ∈ U ∀ r ∈ R, u ∈ V ) ensure that (i) the zero vector 0 ∈ U and (ii) every u ∈ U has an additive inverse. In fact it suﬃces to check closure under addition and scalar multiplication to verify that U is a vector space. Check whether the following choices of U are vector spaces: (a) U =      x y 0   : x, y ∈ R    (b) U =     1 0 z   : z ∈ R    10. Find an LU decomposition for the matrix     1 1 −1 2 1 3 2 2 −1 −3 −4 6 0 4 7 −2     323 324 Sample First Midterm Use your result to solve the system    x + y − z + 2w = 7 x + 3y + 2z + 2w = 6 −x − 3y − 4z + 6w = 12 4y + 7z − 2w = −7 Solutions 1. As an additional exercise, write out the row operations above the ∼ signs below.    1 3 0 4 1 −2 1 1 2 1 1 5    ∼    1 3 0 4 0 −5 1 −3 0 −5 1 −3    ∼    1 0 3 5 11 5 0 1 − 1 5 3 5 0 0 0 0    . Solution set is     x y z   =   11 5 3 5 0   + µ   − 3 5 1 5 1   : µ ∈ R    . Geometrically this represents a line in R3 through the point   11 5 3 5 0   running parallel to the vector    − 3 5 1 5 1   . The vector   11 5 3 5 0   is a particular solution and  − 3 5 1 5 1   is a homogeneous solution. As a double check note that   1 3 0 1 −2 1 2 1 1     11 5 3 5 0   =   4 1 5   and   1 3 0 1 −2 1 2 1 1    − 3 5 1 5 1   =  0 0 0   . 324 325 2. (a) The augmented matrix      1 0 −1 2 −1 1 1 1 −1 2 0 −1 −2 3 −3 5 2 −1 4 1      encodes the system of equations. (b) Again, write out the row operations as an additional exercise. The above augmented matrix is row equivalent to      1 0 −1 2 −1 0 1 2 −3 3 0 −1 −2 3 −3 0 2 4 −6 6      ∼      1 0 −1 2 −1 0 1 2 −3 3 0 0 0 0 0 0 0 0 0 0      which is in reduced row echelon form. (c) Solution set is    X =     −1 3 0 0     + µ1     1 −2 1 0     + µ2     −2 3 0 1     : µ1, µ2 ∈ R    . (d) The vector X0 =     −1 3 0 0     is a particular solution and the vectors Y1 =     1 −2 1 0     and Y2 =     −2 3 0 1     are homogeneous solutions. They obey M X = V , M Y1 = 0 = M Y2 . where M =     1 0 −1 2 1 1 1 −1 0 −1 −2 3 5 2 −1 4     and V =     −1 2 −3 1     . 325 326 Sample First Midterm (e) This amounts to explicitly performing the matrix manipulations M X − V, M Y1, and M Y2 to verify that they are all zero vectors. 3. As usual, be sure to write out the row operations above the ∼’s so your work can be easily checked.     1 2 3 4 1 0 0 0 2 4 7 11 0 1 0 0 3 7 14 25 0 0 1 0 4 11 25 50 0 0 0 1     ∼     1 2 3 4 1 0 0 0 0 0 1 3 −2 1 0 0 0 1 5 13 −3 0 1 0 0 3 13 34 −4 0 0 1     ∼     1 0 −7 −22 7 0 −2 0 0 1 5 13 −3 0 1 0 0 0 1 3 −2 1 0 0 0 0 −2 −5 5 0 −3 1     ∼     1 0 0 −1 −7 7 −2 0 0 1 0 −2 7 −5 1 0 0 0 1 3 −2 1 0 0 0 0 0 1 1 2 −3 1     ∼     1 0 0 0 −6 9 −5 1 0 1 0 0 9 −1 −5 2 0 0 1 0 −5 −5 9 −3 0 0 0 1 1 2 −3 1     . Check     1 2 3 4 2 4 7 11 3 7 14 25 4 11 25 50         −6 9 −5 1 9 −1 −5 2 −5 −5 9 −3 1 2 −3 1     =     1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1     . 4. M T M −1 = (2 3 1 −1 ) ( 1 5 1 5 3 5 − 2 5 ) = ( 11 5 − 4 5 − 2 5 3 5 ) . 326 327 Since M T M −1 ̸= I, it follows M T ̸= M so M is not symmetric. Finally trf (M ) T = trf (M ) = tr(M 2 − I) = tr ( 2 1 3 −1 ) ( 2 1 3 −1 ) − trI = (2 · 2 + 1 · 3) + (3 · 1 + (−1) · (−1)) − 2 = 9 . 5. First X (M X) = X T M X = (x y) ( cos θ sin θ − sin θ cos θ ) ( x y ) = (x y) ( x cos θ + y sin θ −x sin θ + y cos θ ) = (x2 + y2) cos θ . Now ||X|| = √X X = √ x2 + y2 and (M X) (M X) = XM T M X. But M T M = ( cos θ − sin θ sin θ cos θ ) ( cos θ sin θ − sin θ cos θ ) = ( cos2 θ + sin2 θ 0 0 cos2 θ + sin2 θ ) = I . Hence ||M X|| = ||X|| = √ x2 + y2. Thus the cosine of the angle between X and M X is given by X (M X) ||X|| ||M X|| = (x2 + y2) cos θ √ x2 + y2 √ x2 + y2 = cos θ . In other words, the angle is θ OR −θ. You should draw two pictures, one where the angle between X and M X is θ, the other where it is −θ. For Cauchy–Schwartz, |X (M X)| ||X|| ||M X|| = | cos θ| = 1 when θ = 0, π. For the triangle equality M X = X achieves ||X + M X|| = ||X|| + ||M X||, which requires θ = 0. 6. This is a block matrix problem. Notice the that matrix M is really just M = ( I I 0 I ) , where I and 0 are the 3×3 identity zero matrices, respectively. But M 2 = (I I 0 I ) ( I I 0 I ) = (I 2I 0 I ) and M 3 = ( I I 0 I ) ( I 2I 0 I ) = ( I 3I 0 I ) 327 328 Sample First Midterm so, M k = (I kI 0 I ) , or explicitly M k =         1 0 0 k 0 0 0 1 0 0 k 0 0 0 1 0 0 k 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1         . 7. We can call a function f : V −→ W linear if the sets V and W are vector spaces and f obeys f (αu + βv) = αf (u) + βf (v) , for all u, v ∈ V and α, β ∈ R. Now, integration is a linear transformation from the space V of all inte- grable functions (don’t be confused between the deﬁnition of a linear func- tion above, and integrable functions f (x) which here are the vectors in V ) to the real numbers R, because ∫ ∞ −∞(αf (x) + βg(x))dx = α ∫ ∞ −∞ f (x)dx + β ∫ ∞ −∞ g(x)dx. 8. The four main ingredients are (i) a set V of vectors, (ii) a number ﬁeld K (usually K = R), (iii) a rule for adding vectors (vector addition) and (iv) a way to multiply vectors by a number to produce a new vector (scalar multiplication). There are, of course, ten rules that these four ingredients must obey. (a) This is not a vector space. Notice that distributivity of scalar multi- plication requires 2u = (1 + 1)u = u + u for any vector u but 2 · ( a b c d ) = ( 2a b 2c d ) which does not equal ( a b c d ) + ( a b c d ) = ( 2a 2b 2c 2d ) . This could be repaired by taking k · ( a b c d ) = ( ka kb kc kd ) . 328 329 (b) This is a vector space. Although, the question does not ask you to, it is a useful exercise to verify that all ten vector space rules are satisﬁed. (c) This is not a vector space for many reasons. An easy one is that (1, −1, 0) and (−1, 1, 0) are both in the space, but their sum (0, 0, 0) is not (i.e., additive closure fails). The easiest way to repair this would be to drop the requirement that there be at least one entry equaling 1. 9. (i) Thanks to multiplicative closure, if u ∈ U , so is (−1)·u. But (−1)·u+u = (−1) · u + 1 · u = (−1 + 1) · u = 0.u = 0 (at each step in this chain of equalities we have used the fact that V is a vector space and therefore can use its vector space rules). In particular, this means that the zero vector of V is in U and is its zero vector also. (ii) Also, in V , for each u there is an element −u such that u + (−u) = 0. But by additive close, (−u) must also be in U , thus every u ∈ U has an additive inverse. (a) This is a vector space. First we check additive closure: let   x y 0   and   z w 0   be arbitrary vectors in U . But since   x y 0   +   z w 0   =   x + z y + w 0  , so is their sum (because vectors in U are those whose third component vanishes). Multiplicative closure is similar: for any α ∈ R, α  x y 0   =   αx αy 0  , which also has no third component, so is in U . (b) This is not a vector space for various reasons. A simple one is that u =  1 0 z   is in U but the vector u + u =   2 0 2z   is not in U (it has a 2 in the ﬁrst component, but vectors in U always have a 1 there). 10.     1 1 −1 2 1 3 2 2 −1 −3 −4 6 0 4 7 −2     =     1 0 0 0 1 1 0 0 −1 0 1 0 0 0 0 1         1 1 −1 2 0 2 3 0 0 −2 −5 8 0 4 7 −2     329 330 Sample First Midterm =     1 0 0 0 1 1 0 0 −1 −1 1 0 0 2 0 1         1 1 −1 2 0 2 3 0 0 0 −2 8 0 0 1 −2     =     1 0 0 0 1 1 0 0 −1 −1 1 0 0 2 − 1 2 1         1 1 −1 2 0 2 3 0 0 0 −2 8 0 0 0 2     . To solve M X = V using M = LU we ﬁrst solve LW = V whose augmented matrix reads     1 0 0 0 7 1 1 0 0 6 −1 −1 1 0 12 0 2 − 1 2 1 −7     ∼     1 0 0 0 7 0 1 0 0 −1 0 0 1 0 18 0 2 − 1 2 1 −7     ∼     1 0 0 0 7 0 1 0 0 −1 0 0 1 0 18 0 0 0 1 4     , from which we can read oﬀ W . Now we compute X by solving U X = W with the augmented matrix     1 1 −1 2 7 0 2 3 0 −1 0 0 −2 8 18 0 0 0 2 4     ∼     1 1 −1 2 7 0 2 3 0 −1 0 0 −2 0 2 0 0 0 1 2     ∼     1 1 −1 2 7 0 2 0 0 2 0 0 1 0 −1 0 0 0 1 2     ∼     1 0 0 0 1 0 1 0 0 1 0 0 1 0 −1 0 0 0 1 2     . So x = 1, y = 1, z = −1 and w = 2. 330 E Sample Second Midterm Here are some worked problems typical for what you might expect on a second midterm examination. 1. Determinants: The determinant det M of a 2 × 2 matrix M = ( a b c d ) is deﬁned by det M = ad − bc . (a) For which values of det M does M have an inverse? (b) Write down all 2 × 2 bit matrices with determinant 1. (Remember bits are either 0 or 1 and 1 + 1 = 0.) (c) Write down all 2 × 2 bit matrices with determinant 0. (d) Use one of the above examples to show why the following statement is FALSE. Square matrices with the same determinant are always row equivalent. 2. Let A =     1 1 1 2 2 3 4 5 6     . Compute det A. Find all solutions to (i) AX = 0 and (ii) AX =   1 2 3   for 331 332 Sample Second Midterm the vector X ∈ R3. Find, but do not solve, the characteristic polynomial of A. 3. Let M be any 2 × 2 matrix. Show det M = − 1 2 trM 2 + 1 2 (trM ) 2 . 4. The permanent: Let M = (M i j ) be an n × n matrix. An operation producing a single number from M similar to the determinant is the “permanent” perm M = ∑ σ M 1 σ(1)M 2 σ(2) · · · M n σ(n) . For example perm ( a b c d ) = ad + bc . Calculate perm   1 2 3 4 5 6 7 8 9   . What do you think would happen to the permanent of an n × n matrix M if (include a brief explanation with each answer): (a) You multiplied M by a number λ. (b) You multiplied a row of M by a number λ. (c) You took the transpose of M . (d) You swapped two rows of M . 5. Let X be an n × 1 matrix subject to X T X = (1) , and deﬁne H = I − 2XX T , (where I is the n × n identity matrix). Show H = H T = H −1. 332 333 6. Suppose λ is an eigenvalue of the matrix M with associated eigenvector v. Is v an eigenvector of M k (where k is any positive integer)? If so, what would the associated eigenvalue be? Now suppose that the matrix N is nilpotent, i.e. N k = 0 for some integer k ≥ 2. Show that 0 is the only eigenvalue of N . 7. Let M = ( 3 −5 1 −3 ) . Compute M 12. (Hint: 212 = 4096.) 8. The Cayley Hamilton Theorem: Calculate the characteristic polynomial PM (λ) of the matrix M = ( a b c d ). Now compute the matrix polynomial PM (M ). What do you observe? Now suppose the n×n matrix A is “similar” to a diagonal matrix D, in other words A = P −1DP for some invertible matrix P and D is a matrix with values λ1, λ2, . . . λn along its diagonal. Show that the two matrix polynomials PA(A) and PA(D) are similar (i.e. PA(A) = P −1PA(D)P ). Finally, compute PA(D), what can you say about PA(A)? 9. Deﬁne what it means for a set U to be a subspace of a vector space V . Now let U and W be non-trivial subspaces of V . Are the following also subspaces? (Remember that ∪ means “union” and ∩ means “intersection”.) (a) U ∪ W (b) U ∩ W In each case draw examples in R3 that justify your answers. If you answered “yes” to either part also give a general explanation why this is the case. 10. Deﬁne what it means for a set of vectors {v1, v2, . . . , vn} to (i) be linearly independent, (ii) span a vector space V and (iii) be a basis for a vector space V . Consider the following vectors in R3 u =  −1 −4 3   , v =  4 5 0   , w =   10 7 h + 3   . For which values of h is {u, v, w} a basis for R3? 333 334 Sample Second Midterm Solutions 1. (a) Whenever detM = ad − bc ̸= 0. (b) Unit determinant bit matrices: ( 1 0 0 1 ) , ( 1 1 0 1 ) , ( 1 0 1 1 ) , ( 0 1 1 0 ) , ( 1 1 1 0 ) , ( 0 1 1 1 ) . (c) Bit matrices with vanishing determinant: (0 0 0 0 ) , (1 0 0 0 ) , (0 1 0 0 ) , ( 0 0 1 0 ) , ( 0 0 0 1 ) , (1 1 0 0 ) , (0 0 1 1 ) , (1 0 1 0 ) , (0 1 0 1 ) , ( 1 1 1 1 ) . As a check, count that the total number of 2×2 bit matrices is 2(number of entries) = 24 = 16. (d) To disprove this statement, we just need to ﬁnd a single counterexam- ple. All the unit determinant examples above are actually row equiva- lent to the identity matrix, so focus on the bit matrices with vanishing determinant. Then notice (for example), that ( 1 1 0 0 ) ∼/ (0 0 0 0 ) . So we have found a pair of matrices that are not row equivalent but do have the same determinant. It follows that the statement is false. 2. detA = 1.(2.6 − 3.5) − 1.(2.6 − 3.4) + 1.(2.5 − 2.4) = −1 . (i) Since detA ̸= 0, the homogeneous system AX = 0 only has the solution X = 0. (ii) It is eﬃcient to compute the adjoint adj A =   −3 0 2 −1 2 −1 1 −1 0   T =   −3 −1 1 0 2 −1 2 −1 0   Hence A−1 =   3 1 −1 0 −2 1 −2 1 0   . 334 335 Thus X =   3 1 −1 0 −2 1 −2 1 0    1 2 3   =   2 −1 0   . Finally, PA(λ) = − det   1 − λ 1 1 2 2 − λ 3 4 5 6 − λ   = − [(1 − λ)[(2 − λ)(6 − λ) − 15] − [2.(6 − λ) − 12] + [10 − 4.(2 − λ)] ] = λ3 − 9λ2 − λ + 1 . 3. Call M = ( a b c d ) . Then detM = ad − bc, yet − 1 2 tr M 2 + 1 2 (tr M )2 = − 1 2 tr (a2 + bc ∗ ∗ bc + d2 ) − 1 2 (a + d) 2 = − 1 2 (a2 + 2bc + d 2) + 1 2 (a2 + 2ad + d 2) = ad − bc , which is what we were asked to show. 4. perm  1 2 3 4 5 6 7 8 9   = 1 · (5 · 9 + 6 · 8) + 2 · (4 · 9 + 6 · 7) + 3 · (4 · 8 + 5 · 7) = 450 . (a) Multiplying M by λ replaces every matrix element M i σ(j) in the formula for the permanent by λM i σ(j), and therefore produces an overall factor λn. (b) Multiplying the ith row by λ replaces M i σ(j) in the formula for the permanent by λM i σ(j). Therefore the permanent is multiplied by an overall factor λ. (c) The permanent of a matrix transposed equals the permanent of the original matrix, because in the formula for the permanent this amounts to summing over permutations of rows rather than columns. But we could then sort the product M σ(1) 1 M σ(2) 2 . . . M σ(n) n back into its original order using the inverse permutation σ−1. But summing over permuta- tions is equivalent to summing over inverse permutations, and therefore the permanent is unchanged. 335 336 Sample Second Midterm (d) Swapping two rows also leaves the permanent unchanged. The argu- ment is almost the same as in the previous part, except that we need only reshuﬄe two matrix elements M j σ(i) and M i σ(j) (in the case where rows i and j were swapped). Then we use the fact that summing over all permutations σ or over all permutations ̃σ obtained by swapping a pair in σ are equivalent operations. 5. Firstly, lets call (1) = 1 (the 1 × 1 identity matrix). Then we calculate H T = (I − 2XX T )T = I T − 2(XX T )T = I − 2(X T )T X T = I − 2XX T = H , which demonstrates the ﬁrst equality. Now we compute H 2 = (I − 2XX T )(I − 2XX T ) = I − 4XX T + 4XX T XX T = I − 4XX T + 4X(X T X)X T = I − 4XX T + 4X.1.X T = I . So, since HH = I, we have H −1 = H. 6. We know M v = λv. Hence M 2v = M M v = M λv = λM v = λ2v , and similarly M kv = λM k−1v = . . . = λkv . So v is an eigenvector of M k with eigenvalue λk. Now let us assume v is an eigenvector of the nilpotent matrix N with eigen- value λ. Then from above N kv = λkv but by nilpotence, we also have N kv = 0. Hence λkv = 0 and v (being an eigenvector) cannot vanish. Thus λk = 0 and in turn λ = 0. 7. Let us think about the eigenvalue problem M v = λv. This has solutions when 0 = det ( 3 − λ −5 1 −3 − λ ) = λ2 − 4 ⇒ λ = ±2 . 336 337 The associated eigenvalues solve the homogeneous systems (in augmented matrix form) ( 1 −5 0 1 −5 0 ) ∼ ( 1 −5 0 0 0 0 ) and ( 5 −5 0 1 −1 0 ) ∼ ( 1 −1 0 0 0 0 ) , respectively, so are v2 = ( 5 1 ) and v−2 = ( 1 1 ) . Hence M 12v2 = 212v2 and M 12v−2 = (−2)12v−2. Now, ( x y ) = x−y 4 ( 5 1 ) − x−5y 4 (1 1 ) (this was obtained by solving the linear system av2 + bv−2 = for a and b). Thus M (x y ) = x − y 4 M v2 − x − 5y 4 M v−2 = 2 12( x − y 4 v2 − x − 5y 4 v−2) = 2 12 (x y ) . Thus M 12 = ( 4096 0 0 4096 ) . If you understand the above explanation, then you have a good understanding of diagonalization. A quicker route is simply to observe that M 2 = ( 4 0 0 4 ) . 8. PM (λ) = (−1) 2det ( a − λ b c d − λ ) = (λ − a)(λ − d) − bc . Thus PM (M ) = (M − aI)(M − dI) − bcI = ((a b c d ) − ( a 0 0 a )) (( a b c d ) − ( d 0 0 d )) − ( bc 0 0 bc ) = ( 0 b c d − a ) ( a − d b c 0 ) − ( bc 0 0 bc ) = 0 . Observe that any 2 × 2 matrix is a zero of its own characteristic polynomial (in fact this holds for square matrices of any size). Now if A = P −1DP then A2 = P −1DP P −1DP = P −1D2P . Similarly Ak = P −1DkP . So for any matrix polynomial we have An + c1An−1 + · · · cn−1A + cnI = P −1DnP + c1P −1Dn−1P + · · · cn−1P −1DP + cnP −1P = P −1(Dn + c1Dn−1 + · · · cn−1D + cnI)P . 337 338 Sample Second Midterm Thus we may conclude PA(A) = P −1PA(D)P . Now suppose D =      λ1 0 · · · 0 0 λ2 0 ... . . . ... 0 · · · λn      . Then PA(λ) = det(λI − A) = det(λP −1IP − P −1DP ) = detP.det(λI − D).detP = det(λI − D) = det      λ − λ1 0 · · · 0 0 λ − λ2 0 ... . . . ... 0 0 · · · λ − λn      = (λ − λ1)(λ − λ2) . . . (λ − λn) . Thus we see that λ1, λ2, . . . , λn are the eigenvalues of M . Finally we compute PA(D) = (D − λ1)(D − λ2) . . . (D − λn) =      0 0 · · · 0 0 λ2 0 ... . . . ... 0 0 · · · λn           λ1 0 · · · 0 0 0 0 ... . . . ... 0 0 · · · λn      . . .      λ1 0 · · · 0 0 λ2 0 ... . . . ... 0 0 · · · 0      = 0 . We conclude the PM (M ) = 0. 9. A subset of a vector space is called a subspace if it itself is a vector space, using the rules for vector addition and scalar multiplication inherited from the original vector space. (a) So long as U ̸= U ∪ W ̸= W the answer is no. Take, for example, U to be the x-axis in R2 and W to be the y-axis. Then (1, 0) ∈ U and(0, 1) ∈ W , but (1, 0 ) + (0, 1) = (1, 1 ) /∈ U ∪ W . So U ∪ W is not additively closed and is not a vector space (and thus not a subspace). It is easy to draw the example described. (b) Here the answer is always yes. The proof is not diﬃcult. Take a vector u and w such that u ∈ U ∩ W ∋ w. This means that both u and w are in both U and W . But, since U is a vector space, αu + βw is also in U . Similarly, αu + βw ∈ W . Hence αu + βw ∈ U ∩ W . So closure holds in U ∩ W and this set is a subspace by the subspace theorem. Here, a good picture to draw is two planes through the origin in R3 intersecting at a line (also through the origin). 338 339 10. (i) We say that the vectors {v1, v2, . . . vn} are linearly independent if there exist no constants c1, c2, . . . cn (not all vanishing) such that c1v1 + c2v2 + · · · + cnvn = 0. Alternatively, we can require that there is no non-trivial solution for scalars c1, c2, . . . , cn to the linear system c1v1 + c2v2 + · · · + cnvn = 0. (ii) We say that these vectors span a vector space V if the set span{v1, v2, . . . vn} = {c1v1 + c2v2 + · · · + cnvn : c1, c2, . . . cn ∈ R} = V . (iii) We call {v1, v2, . . . vn} a basis for V if {v1, v2, . . . vn} are linearly independent and span{v1, v2, . . . vn} = V . For u, v, w to be a basis for R3, we ﬁrstly need (the spanning requirement) that any vector   x y z   can be written as a linear combination of u, v and w c 1   −1 −4 3   + c 2   4 5 0   + c 3   10 7 h + 3   =  x y z   . The linear independence requirement implies that when x = y = z = 0, the only solution to the above system is c1 = c2 = c3 = 0. But the above system in matrix language reads   −1 4 10 −4 5 7 3 0 h + 3    c1 c2 c3   =   x y z   . Both requirements mean that the matrix on the left hand side must be invertible, so we examine its determinant det  −1 4 10 −4 5 7 3 0 h + 3   = −4 · (−4 · (h + 3) − 7 · 3) + 5 · (−1 · (h + 3) − 10 · 3) = 11(h − 3) · Hence we obtain a basis whenever h ̸= 3. 339 340 Sample Second Midterm 340 F Sample Final Exam Here are some worked problems typical for what you might expect on a ﬁnal examination. 1. Deﬁne the following terms: (a) An orthogonal matrix. (b) A basis for a vector space. (c) The span of a set of vectors. (d) The dimension of a vector space. (e) An eigenvector. (f) A subspace of a vector space. (g) The kernel of a linear transformation. (h) The nullity of a linear transformation. (i) The image of a linear transformation. (j) The rank of a linear transformation. (k) The characteristic polynomial of a square matrix. (l) An equivalence relation. (m) A homogeneous solution to a linear system of equations. (n) A particular solution to a linear system of equations. (o) The general solution to a linear system of equations. (p) The direct sum of a pair of subspaces of a vector space. 341 342 Sample Final Exam (q) The orthogonal complement to a subspace of a vector space. 2. Kirchoﬀ ’s laws: Electrical circuits are easy to analyze using systems of equa- tions. The change in voltage (measured in Volts) around any loop due to batteries | ∣ ∣ and resistors /\\/\\/\\/\\ (given by the product of the current mea- sured in Amps and resistance measured in Ohms) equals zero. Also, the sum of currents entering any junction vanishes. Consider the circuit J Amps 3 Ohms 60 Volts 1 Ohm 2 Ohms 80 Volts 3 Ohms V Volts 13 AmpsI Amps Find all possible equations for the unknowns I, J and V and then solve for I, J and V . Give your answers with correct units. 3. Suppose M is the matrix of a linear transformation L : U → V and the vector spaces U and V have dimensions dim U = n , dim V = m , and m ̸= n . Also assume kerL = {0U } . (a) How many rows does M have? (b) How many columns does M have? (c) Are the columns of M linearly independent? (d) What size matrix is M T M ? (e) What size matrix is M M T ? (f) Is M T M invertible? (g) is M T M symmetric? 342 343 (h) Is M T M diagonalizable? (i) Does M T M have a zero eigenvalue? (j) Suppose U = V and ker L ̸= {0U }. Find an eigenvalue of M . (k) Suppose U = V and ker L ̸= {0U }. Find det M . 4. Consider the system of equations x + y + z + w = 1 x + 2y + 2z + 2w = 1 x + 2y + 3z + 3w = 1 Express this system as a matrix equation M X = V and then ﬁnd the solution set by computing an LU decomposition for the matrix M (be sure to use back and forward substitution). 5. Compute the following determinants det ( 1 2 3 4 ) , det   1 2 3 4 5 6 7 8 9   , det     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16     , det       1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25       . Now test your skills on det        1 2 3 · · · n n + 1 n + 2 n + 3 · · · 2n 2n + 1 2n + 2 2n + 3 3n ... . . . ... n2 − n + 1 n2 − n + 2 n2 − n + 3 · · · n2        . Make sure to jot down a few brief notes explaining any clever tricks you use. 6. For which values of a does U = span     1 0 1   ,   1 2 −3   ,  a 1 0      = R3 ? 343 344 Sample Final Exam For any special values of a at which U ̸= R3, express the subspace U as the span of the least number of vectors possible. Give the dimension of U for these cases and draw a picture showing U inside R3. 7. Vandermonde determinant: Calculate the following determinants det ( 1 x 1 y ) , det  1 x x2 1 y y2 1 z z2   , det     1 x x2 x3 1 y y2 y3 1 z z2 z3 1 w w2 w3     . Be sure to factorize you answers, if possible. Challenging: Compute the determinant det        1 x1 (x1)2 · · · (x1)n−1 1 x2 (x2)2 · · · (x2)n−1 1 x3 (x3)2 · · · (x3)n−1 ... ... ... . . . ... 1 xn (xn)2 · · · (xn)n−1        . 8. (a) Do the vectors      1 2 3   ,   3 2 1   ,  1 0 0   ,  0 1 0   ,  0 0 1      form a basis for R3? Be sure to justify your answer. (b) Find a basis for R4 that includes the vectors     1 2 3 4     and     4 3 2 1    . (c) Explain in words how to generalize your computation in part (b) to obtain a basis for Rn that includes a given pair of (linearly independent) vectors u and v. 9. Elite NASA engineers determine that if a satellite is placed in orbit starting at a point O, it will return exactly to that same point after one orbit of the earth. Unfortunately, if there is a small mistake in the original location of the satellite, which the engineers label by a vector X in R3 with origin1 at O, 1This is a spy satellite. The exact location of O, the orientation of the coordinate axes in R3 and the unit system employed by the engineers are CIA secrets. 344 345 after one orbit the satellite will instead return to some other point Y ∈ R3. The engineer’s computations show that Y is related to X by a matrix Y =     0 1 2 1 1 2 1 2 1 2 1 1 2 0     X . (a) Find all eigenvalues of the above matrix. (b) Determine all possible eigenvectors associated with each eigenvalue. Let us assume that the rule found by the engineers applies to all subsequent orbits. Discuss case by case, what will happen to the satellite if the initial mistake in its location is in a direction given by an eigenvector. 10. In this problem the scalars in the vector spaces are bits (0, 1 with 1 + 1 = 0). The space Bk is the vector space of bit-valued, k-component column vectors. (a) Find a basis for B3. (b) Your answer to part (a) should be a list of vectors v1, v2, . . . vn. What number did you ﬁnd for n? (c) How many elements are there in the set B3. (d) What is the dimension of the vector space B3. (e) Suppose L : B3 → B = {0, 1} is a linear transformation. Explain why specifying L(v1), L(v2), . . . , L(vn) completely determines L. (f) Use the notation of part (e) to list all linear transformations L : B3 → B . How many diﬀerent linear transformations did you ﬁnd? Compare your answer to part (c). (g) Suppose L1 : B3 → B and L2 : B3 → B are linear transformations, and α and β are bits. Deﬁne a new map (αL1 + βL2) : B3 → B by (αL1 + βL2)(v) = αL1(v) + βL2(v). Is this map a linear transformation? Explain. (h) Do you think the set of all linear transformations from B3 to B is a vector space using the addition rule above? If you answer yes, give a basis for this vector space and state its dimension. 345 346 Sample Final Exam 11. A team of distinguished, post-doctoral engineers analyzes the design for a bridge across the English channel. They notice that the force on the center of the bridge when it is displaced by an amount X =   x y z   is given by F =   −x − y −x − 2y − z −y − z   . Moreover, having read Newton’s Principiæ, they know that force is propor- tional to acceleration so that2 F = d2X dt2 . Since the engineers are worried the bridge might start swaying in the heavy channel winds, they search for an oscillatory solution to this equation of the form3 X = cos(ωt)  a b c   . (a) By plugging their proposed solution in the above equations the engi- neers ﬁnd an eigenvalue problem M  a b c   = −ω2  a b c   . Here M is a 3 × 3 matrix. Which 3 × 3 matrix M did the engineers ﬁnd? Justify your answer. (b) Find the eigenvalues and eigenvectors of the matrix M . (c) The number |ω| is often called a characteristic frequency. What char- acteristic frequencies do you ﬁnd for the proposed bridge? (d) Find an orthogonal matrix P such that M P = P D where D is a diagonal matrix. Be sure to also state your result for D. 2The bridge is intended for French and English military vehicles, so the exact units, coordinate system and constant of proportionality are state secrets. 3Here, a, b, c and ω are constants which we aim to calculate. 346 347 (e) Is there a direction in which displacing the bridge yields no force? If so give a vector in that direction. Brieﬂy evaluate the quality of this bridge design. 12. Conic Sections: The equation for the most general conic section is given by ax 2 + 2bxy + dy2 + 2cx + 2ey + f = 0 . Our aim is to analyze the solutions to this equation using matrices. (a) Rewrite the above quadratic equation as one of the form X T M X + X T C + CT X + f = 0 relating an unknown column vector X = (x y ), its transpose X T , a 2 × 2 matrix M , a constant column vector C and the constant f . (b) Does your matrix M obey any special properties? Find its eigenvalues. You may call your answers λ and µ for the rest of the problem to save writing. For the rest of this problem we will focus on central conics for which the matrix M is invertible. (c) Your equation in part (a) above should be be quadratic in X. Recall that if m ̸= 0, the quadratic equation mx2 + 2cx + f = 0 can be rewritten by completing the square m (x + c m )2 = c2 m − f . Being very careful that you are now dealing with matrices, use the same trick to rewrite your answer to part (a) in the form Y T M Y = g. Make sure you give formulas for the new unknown column vector Y and constant g in terms of X, M , C and f . You need not multiply out any of the matrix expressions you ﬁnd. If all has gone well, you have found a way to shift coordinates for the original conic equation to a new coordinate system with its origin at the center of symmetry. Our next aim is to rotate the coordinate axes to produce a readily recognizable equation. 347 348 Sample Final Exam (d) Why is the angle between vectors V and W is not changed when you replace them by P V and P W for P any orthogonal matrix? (e) Explain how to choose an orthogonal matrix P such that M P = P D where D is a diagonal matrix. (f) For the choice of P above, deﬁne our ﬁnal unknown vector Z by Y = P Z. Find an expression for Y T M Y in terms of Z and the eigenvalues of M . (g) Call Z = ( z w ). What equation do z and w obey? (Hint, write your answer using λ, µ and g.) (h) Central conics are circles, ellipses, hyperbolae or a pair of straight lines. Give examples of values of (λ, µ, g) which produce each of these cases. 13. Let L : V → W be a linear transformation between ﬁnite-dimensional vector spaces V and W , and let M be a matrix for L (with respect to some basis for V and some basis for W ). We know that L has an inverse if and only if it is bijective, and we know a lot of ways to tell whether M has an inverse. In fact, L has an inverse if and only if M has an inverse: (a) Suppose that L is bijective (i.e., one-to-one and onto). i. Show that dim V = rank L = dim W . ii. Show that 0 is not an eigenvalue of M . iii. Show that M is an invertible matrix. (b) Now, suppose that M is an invertible matrix. i. Show that 0 is not an eigenvalue of M . ii. Show that L is injective. iii. Show that L is surjective. 14. Captain Conundrum gives Queen Quandary a pair of newborn doves, male and female for her birthday. After one year, this pair of doves breed and produce a pair of dove eggs. One year later these eggs hatch yielding a new pair of doves while the original pair of doves breed again and an additional pair of eggs are laid. Captain Conundrum is very happy because now he will never need to buy the Queen a present ever again! Let us say that in year zero, the Queen has no doves. In year one she has one pair of doves, in year two she has two pairs of doves etc... Call Fn the number of pairs of doves in years n. For example, F0 = 0, F1 = 1 and F2 = 1. Assume no doves die and that the same breeding pattern continues 348 349 well into the future. Then F3 = 2 because the eggs laid by the ﬁrst pair of doves in year two hatch. Notice also that in year three, two pairs of eggs are laid (by the ﬁrst and second pair of doves). Thus F4 = 3. (a) Compute F5 and F6. (b) Explain why (for any n ≥ 2) the following recursion relation holds Fn = Fn−1 + Fn−2 . (c) Let us introduce a column vector Xn = ( Fn Fn−1 ) . Compute X1 and X2. Verify that these vectors obey the relationship X2 = M X1 where M = ( 1 1 1 0 ) . (d) Show that Xn+1 = M Xn. (e) Diagonalize M . (I.e., write M as a product M = P DP −1 where D is diagonal.) (f) Find a simple expression for M n in terms of P , D and P −1. (g) Show that Xn+1 = M nX1. (h) The number ϕ = 1 + √5 2 is called the golden ratio. Write the eigenvalues of M in terms of ϕ. (i) Put your results from parts (c), (f) and (g) together (along with a short matrix computation) to ﬁnd the formula for the number of doves Fn in year n expressed in terms of ϕ, 1 − ϕ and n. 15. Use Gram–Schmidt to ﬁnd an orthonormal basis for span        1 1 1 1     ,     1 0 1 1     ,     0 0 1 2        . 16. Let M be the matrix of a linear transformation L : V → W in given bases for V and W . Fill in the blanks below with one of the following six vector spaces: V , W , kerL, (kerL)⊥, imL, (imL)⊥. 349 350 Sample Final Exam (a) The columns of M span in the basis given for . (b) The rows of M span in the basis given for . Suppose M =     1 2 1 3 2 1 −1 2 1 0 0 −1 4 1 −1 0     is the matrix of L in the bases {v1, v2, v3, v4} for V and {w1, w2, w3, w4} for W . Find bases for kerL and imL. Use the dimension formula to check your result. 17. Captain Conundrum collects the following data set y x 5 −2 2 −1 0 1 3 2 which he believes to be well-approximated by a parabola y = ax 2 + bx + c . (a) Write down a system of four linear equations for the unknown coeﬃ- cients a, b and c. (b) Write the augmented matrix for this system of equations. (c) Find the reduced row echelon form for this augmented matrix. (d) Are there any solutions to this system? (e) Find the least squares solution to the system. (f) What value does Captain Conundrum predict for y when x = 2? 18. Suppose you have collected the following data for an experiment x y x1 y1 x2 y2 x3 y3 and believe that the result is well modeled by a straight line y = mx + b . 350 351 (a) Write down a linear system of equations you could use to ﬁnd the slope m and constant term b. (b) Arrange the unknowns (m, b) in a column vector X and write your answer to (a) as a matrix equation M X = V . Be sure to give explicit expressions for the matrix M and column vector V . (c) For a generic data set, would you expect your system of equations to have a solution? Brieﬂy explain your answer. (d) Calculate M T M and (M T M )−1 (for the latter computation, state the condition required for the inverse to exist). (e) Compute the least squares solution for m and b. (f) The least squares method determines a vector X that minimizes the length of the vector V − M X. Draw a rough sketch of the three data points in the (x, y)-plane as well as their least squares ﬁt. Indicate how the components of V − M X could be obtained from your picture. Solutions 1. You can ﬁnd the deﬁnitions for all these terms by consulting the index of this book. 2. Both junctions give the same equation for the currents I + J + 13 = 0 . There are three voltage loops (one on the left, one on the right and one going around the outside of the circuit). Respectively, they give the equations 60 − I − 80 − 3I = 0 80 + 2J − V + 3J = 0 60 − I + 2J − V + 3J − 3I = 0 . (F.1) The above equations are easily solved (either using an augmented matrix and row reducing, or by substitution). The result is I = −5 Amps, J = −8 Amps, V = 40 Volts. 3. (a) m. 351 352 Sample Final Exam (b) n. (c) Yes. (d) n × n. (e) m × m. (f) Yes. This relies on kerM = 0 because if M T M had a non-trivial kernel, then there would be a non-zero solution X to M T M X = 0. But then by multiplying on the left by X T we see that ||M X|| = 0. This in turn implies M X = 0 which contradicts the triviality of the kernel of M . (g) Yes because (M T M )T = M T (M T )T = M T M . (h) Yes, all symmetric matrices have a basis of eigenvectors. (i) No, because otherwise it would not be invertible. (j) Since the kernel of L is non-trivial, M must have 0 as an eigenvalue. (k) Since M has a zero eigenvalue in this case, its determinant must vanish. I.e., det M = 0. 4. To begin with the system becomes    1 1 1 1 1 2 2 2 1 2 3 3         x y z w      =    1 1 1    Then M =    1 1 1 1 1 2 2 2 1 2 3 3    =    1 0 0 1 1 0 1 0 1       1 1 1 1 0 1 1 1 0 1 2 2    =    1 0 0 1 1 0 1 1 1       1 1 1 1 0 1 1 1 0 0 1 1    = LU So now M X = V becomes LW = V where W = U X =  a b c   (say). Thus we solve LW = V by forward substitution a = 1, a + b = 1, a + b + c = 1 ⇒ a = 1, b = 0, c = 0 . 352 353 Now solve U X = W by back substitution x + y + z + w = 1, y + z + w = 0, z + w = 0 ⇒ w = µ (arbitrary), z = −µ, y = 0, x = 1 . The solution set is        x y z y     =     1 0 −µ µ     : µ ∈ R    5. First det ( 1 2 3 4 ) = −2 . All the other determinants vanish because the ﬁrst three rows of each matrix are not independent. Indeed, 2R2 − R1 = R3 in each case, so we can make row operations to get a row of zeros and thus a zero determinant. 6. If U spans R3, then we must be able to express any vector X =  x y z   ∈ R3 as X = c 1  1 0 1   + c 2   1 2 −3   + c 3  a 1 0   =  1 1 a 0 2 1 1 −3 0    c1 c2 c3   , for some coeﬃcients c1, c2 and c3. This is a linear system. We could solve for c1, c2 and c3 using an augmented matrix and row operations. However, since we know that dim R3 = 3, if U spans R3, it will also be a basis. Then the solution for c1, c2 and c3 would be unique. Hence, the 3×3 matrix above must be invertible, so we examine its determinant det   1 1 a 0 2 1 1 −3 0   = 1.(2.0 − 1.(−3)) + 1.(1.1 − a.2) = 4 − 2a . Thus U spans R3 whenever a ̸= 2. When a = 2 we can write the third vector in U in terms of the preceding ones as   2 1 0   = 3 2  1 0 1   + 1 2   1 2 −3   . (You can obtain this result, or an equivalent one by studying the above linear system with X = 0, i.e., the associated homogeneous system.) The two 353 354 Sample Final Exam vectors   1 2 −3   and   2 1 0   are clearly linearly independent, so this is the least number of vectors spanning U for this value of a. Also we see that dimU = 2 in this case. Your picture should be a plane in R3 though the origin containing the vectors   1 2 −3   and   2 1 0  . 7. det ( 1 x 1 y ) = y − x , det   1 x x2 1 y y2 1 z z2   = det  1 x x2 0 y − x y2 − x2 0 z − x z2 − x2   = (y − x)(z2 − x 2) − (y2 − x2)(z − x) = (y − x)(z − x)(z − y) . det     1 x x2 x3 1 y y2 y3 1 z z2 z3 1 w w2 w3     = det     1 x x2 x3 0 y − x y2 − x2 y3 − x3 0 z − x z2 − x2 z3 − x3 0 w − x w2 − x2 w3 − x3     = det     1 0 0 0 0 y − x y(y − x) y2(y − x) 0 z − x z(z − x) z2(z − x) 0 w − x w(w − x) w2(w − x)     = (y − x)(z − x)(w − x) det     1 0 0 0 0 1 y y2 0 1 z z2 0 1 w w2     = (y − x)(z − x)(w − x) det   1 y y2 1 z z2 1 w w2   = (y − x)(z − x)(w − x)(z − y)(w − y)(w − z) . From the 4 × 4 case above, you can see all the tricks required for a general Vandermonde matrix. First zero out the ﬁrst column by subtracting the ﬁrst row from all other rows (which leaves the determinant unchanged). 354 355 Now zero out the top row by subtracting x1 times the ﬁrst column from the second column, x1 times the second column from the third column et cetra. Again these column operations do not change the determinant. Now factor out x2 − x1 from the second row, x3 − x1 from the third row, etc. This does change the determinant so we write these factors outside the remaining determinant, which is just the same problem but for the (n − 1) × (n − 1) case. Iterating the same procedure gives the result det        1 x1 (x1)2 · · · (x1)n−1 1 x2 (x2)2 · · · (x2)n−1 1 x3 (x3)2 · · · (x3)n−1 ... ... ... . . . ... 1 xn (xn)2 · · · (xn)n−1        = ∏ i>j(xi − xj) . (Here ∏ stands for a multiple product, just like Σ stands for a multiple sum.) 8. (a) No, a basis for R3 must have exactly three vectors. (b) We ﬁrst extend the original vectors by the standard basis for R4 and then try to eliminate two of them by considering α     1 2 3 4     + β     4 3 2 1     + γ     1 0 0 0     + δ     0 1 0 0     + ε     0 0 1 0     + η     0 0 0 1     = 0 . So we study     1 4 1 0 0 0 2 3 0 1 0 0 3 2 0 0 1 0 4 1 0 0 0 1     ∼     1 4 1 0 0 0 0 −5 −2 1 0 0 0 −10 −3 0 1 0 0 −15 −4 0 0 1     ∼     1 0 − 3 5 −4 0 0 0 1 2 5 1 5 0 0 0 0 1 10 1 0 0 0 2 15 0 1     ∼     1 0 0 2 3 5 0 0 1 0 − 19 5 − 2 5 0 0 0 1 10 1 0 0 0 0 − 5 2 −10 1 2     From here we can keep row reducing to achieve RREF, but we can already see that the non-pivot variables will be ε and η. Hence we can 355 356 Sample Final Exam eject the last two vectors and obtain as our basis        1 2 3 4     ,     4 3 2 1     ,     1 0 0 0     ,     0 1 0 0        . Of course, this answer is far from unique! (c) The method is the same as above. Add the standard basis to {u, v} to obtain the linearly dependent set {u, v, e1, . . . , en}. Then put these vectors as the columns of a matrix and row reduce. The standard basis vectors in columns corresponding to the non-pivot variables can be removed. 9. (a) det     λ − 1 2 −1 − 1 2 λ − 1 2 − 1 2 −1 − 1 2 λ     = λ((λ − 1 2 )λ − 1 4 ) + 1 2 ( − λ 2 − 1 2 ) − ( − 1 4 + λ ) = λ3 − 1 2 λ2 − 3 2 λ = λ(λ + 1)(λ − 3 2 ) . Hence the eigenvalues are 0, −1, 3 2 . (b) When λ = 0 we must solve the homogenous system    0 1 2 1 0 1 2 1 2 1 2 0 1 1 2 0 0    ∼    1 1 2 0 0 0 1 4 1 2 0 0 1 2 1 0    ∼    1 0 −1 0 0 1 2 0 0 0 0 0    . So we ﬁnd the eigenvector   s −2s s   where s ̸= 0 is arbitrary. For λ = −1    1 1 2 1 0 1 2 3 2 1 2 0 1 1 2 1 0    ∼    1 0 1 0 0 1 0 0 0 0 0 0    . So we ﬁnd the eigenvector   −s 0 s   where s ̸= 0 is arbitrary. 356 357 Finally, for λ = 3 2    − 3 2 1 2 1 0 1 2 −1 1 2 0 1 1 2 − 3 2 0    ∼    1 1 2 − 3 2 0 0 − 5 4 5 4 0 0 5 4 − 5 4 0    ∼    1 0 −1 0 0 1 −1 0 0 0 0 0    . So we ﬁnd the eigenvector   s s s   where s ̸= 0 is arbitrary. If the mistake X is in the direction of the eigenvector   1 −2 1  , then Y = 0. I.e., the satellite returns to the origin O. For all subsequent orbits it will again return to the origin. NASA would be very pleased in this case. If the mistake X is in the direction  −1 0 1  , then Y = −X. Hence the satellite will move to the point opposite to X. After next orbit will move back to X. It will continue this wobbling motion indeﬁnitely. Since this is a stable situation, again, the elite engineers will pat themselves on the back. Finally, if the mistake X is in the direction   1 1 1   , the satellite will move to a point Y = 3 2 X which is further away from the origin. The same will happen for all subsequent orbits, with the satellite moving a factor 3/2 further away from O each orbit (in reality, after several orbits, the approximations used by the engineers in their calculations probably fail and a new computation will be needed). In this case, the satellite will be lost in outer space and the engineers will likely lose their jobs! 10. (a) A basis for B3 is      1 0 0   ,  0 1 0   ,  0 0 1      (b) 3. (c) 23 = 8. (d) dimB3 = 3. (e) Because the vectors {v1, v2, v3} are a basis any element v ∈ B3 can be written uniquely as v = b1v1 +b2v2 +b3v3 for some triplet of bits  b1 b2 b3  . 357 358 Sample Final Exam Hence, to compute L(v) we use linearity of L L(v) = L(b 1v1 + b 2v2 + b 3v3) = b 1L(v1) + b 2L(v2) + b 3L(v3) = (L(v1) L(v2) L(v3) )  b1 b2 b3   . (f) From the notation of the previous part, we see that we can list linear transformations L : B3 → B by writing out all possible bit-valued row vectors (0 0 0) , (1 0 0) , (0 1 0) , (0 0 1) , (1 1 0) , (1 0 1) , (0 1 1) , (1 1 1) . There are 23 = 8 diﬀerent linear transformations L : B3 → B, exactly the same as the number of elements in B3. (g) Yes, essentially just because L1 and L2 are linear transformations. In detail for any bits (a, b) and vectors (u, v) in B3 it is easy to check the linearity property for (αL1 + βL2) (αL1 + βL2)(au + bv) = αL1(au + bv) + βL2(au + bv) = αaL1(u) + αbL1(v) + βaL1(u) + βbL1(v) = a(αL1(u) + βL2(v)) + b(αL1(u) + βL2(v)) = a(αL1 + βL2)(u) + b(αL1 + βL2)(v) . Here the ﬁrst line used the deﬁnition of (αL1 + βL2), the second line depended on the linearity of L1 and L2, the third line was just algebra and the fourth used the deﬁnition of (αL1 + βL2) again. (h) Yes. The easiest way to see this is the identiﬁcation above of these maps with bit-valued column vectors. In that notation, a basis is { (1 0 0 ) , (0 1 0) , (0 0 1 ) } . 358 359 Since this (spanning) set has three (linearly independent) elements, the vector space of linear maps B3 → B has dimension 3. This is an example of a general notion called the dual vector space. 11. (a) d2X dt2 = d2 cos(ωt) dt2  a b c   = −ω2 cos(ωt)   a b c   . Hence F = cos(ωt)   −a − b −a − 2b − c −b − c   = cos(ωt)  −1 −1 0 −1 −2 −1 0 −1 −1    a b c   = −ω2 cos(ωt)   a b c   , so M =  −1 −1 0 −1 −2 −1 0 −1 −1   . (b) det  λ + 1 1 0 1 λ + 2 1 0 1 λ + 1   = (λ + 1)((λ + 2)(λ + 1) − 1) − (λ + 1) = (λ + 1)((λ + 2)(λ + 1) − 2) = (λ + 1)(λ2 + 3λ) = λ(λ + 1)(λ + 3) so the eigenvalues are λ = 0, −1, −3. For the eigenvectors, when λ = 0 we study: M − 0.I =   −1 −1 0 −1 −2 −1 0 −1 −1   ∼   1 1 0 0 −1 −1 0 −1 −1   ∼   1 0 −1 0 1 1 0 0 0   , so   1 −1 1   is an eigenvector. For λ = −1 M − (−1).I =   0 −1 0 −1 −1 −1 0 −1 0   ∼  1 0 1 0 1 0 0 0 0   , 359 360 Sample Final Exam so  −1 0 1   is an eigenvector. For λ = −3 M − (−3).I =   2 −1 0 −1 1 −1 0 −1 2   ∼  1 −1 1 0 1 −2 0 −1 2   ∼  1 0 −1 0 1 −2 0 0 0   , so  1 2 1   is an eigenvector. (c) The characteristic frequencies are 0, 1, √3. (d) The orthogonal change of basis matrix P =    1√3 − 1√2 1√6 − 1√3 0 2√6 1√3 1√2 1√6    It obeys M P = P D where D =   0 0 0 0 −1 0 0 0 −3   . (e) Yes, the direction given by the eigenvector   1 −1 1   because its eigen- value is zero. This is probably a bad design for a bridge because it can be displaced in this direction with no force! 12. (a) If we call M = ( a b b d ), then X T M X = ax2 + 2bxy + dy2. Similarly putting C = (c e ) yields X T C + CT X = 2X C = 2cx + 2ey. Thus 0 = ax2 + 2bxy + dy2 + 2cx + 2ey + f = (x y) (a b b d ) ( x y ) + (x y) (c e ) + (c e) ( x y ) + f . 360 361 (b) Yes, the matrix M is symmetric, so it will have a basis of eigenvectors and is similar to a diagonal matrix of real eigenvalues. To ﬁnd the eigenvalues notice that det ( a − λ b b d − λ ) = (a − λ)(d − λ) − b2 = (λ − a+d 2 )2 − b2 − ( a−d 2 )2. So the eigenvalues are λ = a + d 2 + √ b2 + ( a − d 2 )2 and µ = a + d 2 − √ b2 + ( a − d 2 )2 . (c) The trick is to write X T M X + CT X + X T C = (X T + CT M −1)M (X + M −1C) − CT M −1C , so that (X T + CT M −1)M (X + M −1C) = CT M C − f . Hence Y = X + M −1C and g = CT M C − f . (d) The cosine of the angle between vectors V and W is given by V W √ V V W W = V T W √V T V W T W . So replacing V → P V and W → P W will always give a factor P T P inside all the products, but P T P = I for orthogonal matrices. Hence none of the dot products in the above formula changes, so neither does the angle between V and W . (e) If we take the eigenvectors of M , normalize them (i.e. divide them by their lengths), and put them in a matrix P (as columns) then P will be an orthogonal matrix. (If it happens that λ = µ, then we also need to make sure the eigenvectors spanning the two dimensional eigenspace corresponding to λ are orthogonal.) Then, since M times the eigenvectors yields just the eigenvectors back again multiplied by their eigenvalues, it follows that M P = P D where D is the diagonal matrix made from eigenvalues. (f) If Y = P Z, then Y T M Y = ZT P T M P Z = ZT P T P DZ = ZT DZ where D = (λ 0 0 µ ) . (g) Using part (f) and (c) we have λz2 + µw2 = g . 361 362 Sample Final Exam (h) When λ = µ and g/λ = R2, we get the equation for a circle radius R in the (z, w)-plane. When λ, µ and g are postive, we have the equation for an ellipse. Vanishing g along with λ and µ of opposite signs gives a pair of straight lines. When g is non-vanishing, but λ and µ have opposite signs, the result is a pair of hyperbolæ. These shapes all come from cutting a cone with a plane, and are therefore called conic sections. 13. We show that L is bijective if and only if M is invertible. (a) We suppose that L is bijective. i. Since L is injective, its kernel consists of the zero vector alone. Hence L = dim ker L = 0. So by the Dimension Formula, dim V = L + rank L = rank L. Since L is surjective, L(V ) = W. Thus rank L = dim L(V ) = dim W. Thereby dim V = rank L = dim W. ii. Since dim V = dim W , the matrix M is square so we can talk about its eigenvalues. Since L is injective, its kernel is the zero vector alone. That is, the only solution to LX = 0 is X = 0V . But LX is the same as M X, so the only solution to M X = 0 is X = 0V . So M does not have zero as an eigenvalue. iii. Since M X = 0 has no non-zero solutions, the matrix M is invert- ible. (b) Now we suppose that M is an invertible matrix. i. Since M is invertible, the system M X = 0 has no non-zero solu- tions. But LX is the same as M X, so the only solution to LX = 0 is X = 0V . So L does not have zero as an eigenvalue. ii. Since LX = 0 has no non-zero solutions, the kernel of L is the zero vector alone. So L is injective. iii. Since M is invertible, we must have that dim V = dim W . By the Dimension Formula, we have dim V = L + rank L 362 363 and since ker L = {0V } we have L = dim ker L = 0, so dim W = dim V = rank L = dim L(V ). Since L(V ) is a subspace of W with the same dimension as W , it must be equal to W . To see why, pick a basis B of L(V ). Each element of B is a vector in W , so the elements of B form a linearly independent set in W . Therefore B is a basis of W , since the size of B is equal to dim W . So L(V ) = span B = W. So L is surjective. 14. (a) F4 = F2 + F3 = 2 + 3 = 5. (b) The number of pairs of doves in any given year equals the number of the previous years plus those that hatch and there are as many of them as pairs of doves in the year before the previous year. (c) X1 = ( F1 F0 ) = (1 0 ) and X2 = ( F2 F1 ) = (1 1 ) . M X1 = ( 1 1 1 0 ) ( 1 0 ) = ( 1 1 ) = X2 . (d) We just need to use the recursion relationship of part (b) in the top slot of Xn+1: Xn+1 = ( Fn+1 Fn ) = ( Fn + Fn−1 Fn ) = ( 1 1 1 0 ) ( Fn Fn−1 ) = M Xn . (e) Notice M is symmetric so this is guaranteed to work. det ( 1 − λ 1 1 −λ ) = λ(λ − 1) − 1 = (λ − 1 2 )2 − 5 4 , so the eigenvalues are 1± √5 2 . Hence the eigenvectors are ( 1±√5 2 1 ) , respectively (notice that 1+ √5 2 + 1 = 1+ √5 2 . 1+ √5 2 and 1− √5 2 + 1 = 1−√5 2 . 1−√5 2 ). Thus M = P DP −1 with D = ( 1+ √5 2 0 0 1− √5 2 ) and P = ( 1+ √5 2 1− √5 2 1 1 ) . (f) M n = (P DP −1)n = P DP −1P DP −1 . . . P DP −1 = P DnP −1. 363 364 Sample Final Exam (g) Just use the matrix recursion relation of part (d) repeatedly: Xn+1 = M Xn = M 2Xn−1 = · · · = M nX1 . (h) The eigenvalues are ϕ = 1+ √5 2 and 1 − ϕ = 1−√5 2 . (i) Xn+1 = ( Fn+1 Fn ) = M nXn = P DnP −1X1 = P (ϕ 0 0 1 − ϕ )n ( 1√5 ⋆ − 1√5 ⋆ ) ( 1 0 ) = P (ϕn 0 0 (1 − ϕ)n ) ( 1√5 − 1√5 ) = ( 1+ √5 2 1−√ 5 2 1 1 ) ( ϕn √5 − (1−ϕ)n √5 ) = ( ⋆ ϕn−(1−ϕ)n √5 ) . Hence Fn = ϕn − (1 − ϕ)n √5 . These are the famous Fibonacci numbers. 15. Call the three vectors u, v and w, respectively. Then v⊥ = v − u v u u u = v − 3 4 u =      1 4 − 3 4 1 4 1 4      , and w⊥ = w − u w u u u − v⊥ w v⊥ v⊥ v⊥ = w − 3 4 u − 3 4 3 4 v⊥ =     −1 0 0 1     Dividing by lengths, an orthonormal basis for span{u, v, w} is           1 2 1 2 1 2 1 2        ,        √3 6 − √3 2√3 6√3 6        ,       − √2 2 0 0 √2 2          . 16. (a) The columns of M span imL in the basis given for W . 364 365 (b) The rows of M span (kerL)⊥ (c) First we put M in RREF: M =     1 2 1 3 2 1 −1 2 1 0 0 −1 4 1 −1 0     ∼     1 2 1 3 0 −3 −3 −4 0 −2 −1 −4 0 −7 −5 −12     ∼      1 0 −1 1 3 0 1 1 4 3 0 0 1 − 4 3 0 0 2 − 8 3      ∼      1 0 0 −1 0 1 0 8 3 0 0 1 − 4 3 0 0 0 0      . Hence ker L = span{v1 − 8 3 v2 + 4 3 v3 + v4} and imL = span{v1 + 2v2 + v3 + 4v4, 2v1 + v2 + v4, v1 − v2 − v4} . Thus dim ker L = 1 and dim imL = 3 so dim ker L + dim imL = 1 + 3 = 4 = dim V . 17. (a)    5 = 4a − 2b + c 2 = a − b + c 0 = a + b + c 3 = 4a + 2b + c . (b,c,d)     4 −2 1 5 1 −1 1 2 1 1 1 0 4 2 1 3     ∼     1 1 1 0 0 −6 −3 5 0 −2 0 2 0 −2 −3 3     ∼     1 0 1 −1 0 1 0 1 0 0 −3 11 0 0 −3 3     The system has no solutions because c = −1 and c = − 11 3 is impossible. (e) Let M =     4 −2 1 1 −1 1 1 1 1 4 2 1     and V =     5 2 0 3     . 365 366 Sample Final Exam Then M T M =   34 0 10 0 10 0 10 0 4   and M T V =   34 −6 10   . So  34 0 10 34 0 10 0 −6 10 0 4 10   ∼  1 0 2 5 1 0 10 0 −6 0 0 − 18 5 0   ∼  1 0 0 1 0 1 0 − 3 5 0 0 1 0   The least squares solution is a = 1, b = − 3 5 and c = 0. (b) The Captain predicts y(2) = 1.22 − 3 5 .2 + 0 = 14 5 . 18. 366 G Movie Scripts G.1 What is Linear Algebra? Hint for Review Problem 5 Looking at the problem statement we find some important information, first that oranges always have twice as much sugar as apples, and second that the information about the barrel is recorded as (s, f ), where s = units of sugar in the barrel and f = number of pieces of fruit in the barrel. We are asked to find a linear transformation relating this new representation to the one in the lecture, where in the lecture x = the number of apples and y = the number of oranges. This means we must create a system of equations relating the variable x and y to the variables s and f in matrix form. Your answer should be the matrix that transforms one set of variables into the other. Hint: Let λ represent the amount of sugar in each apple. 1. To find the first equation relate f to the variables x and y. 2. To find the second equation, use the hint to figure out how much sugar is in x apples, and y oranges in terms of λ. Then write an equation for s using x, y and λ. G.2 Systems of Linear Equations Augmented Matrix Notation Why is the augmented matrix ( 1 1 27 2 −1 0 ) , 367 368 Movie Scripts equivalent to the system of equations x + y = 27 2x − y = 0 ? Well the augmented matrix is just a new notation for the matrix equation ( 1 1 2 −1 ) ( x y ) = (27 0 ) and if you review your matrix multiplication remember that (1 1 2 −1 ) ( x y ) = ( x + y 2x − y ) This means that ( x + y 2x − y ) = (27 0 ) , which is our original equation. Equivalence of Augmented Matrices Lets think about what it means for the two augmented matrices ( 1 1 27 2 −1 0 ) and ( 1 0 9 0 1 18 ) to be equivalent: They are certainly not equal, because they don’t match in each component, but since these augmented matrices represent a system, we might want to introduce a new kind of equivalence relation. Well we could look at the system of linear equations this represents x + y = 27 2x − y = 0 and notice that the solution is x = 9 and y = 18. The other augmented matrix represents the system x + 0 · y = 9 0 · x + y = 18 This clearly has the same solution. The first and second system are related in the sense that their solutions are the same. Notice that it is really nice to have the augmented matrix in the second form, because the matrix multiplication can be done in your head. 368 G.2 Systems of Linear Equations 369 Hints for Review Question 10 This question looks harder than it actually is: Row equivalence of matrices is an example of an equivalence relation. Recall that a relation ∼ on a set of objects U is an equivalence relation if the following three properties are satisfied: • Reflexive: For any x ∈ U , we have x ∼ x. • Symmetric: For any x, y ∈ U , if x ∼ y then y ∼ x. • Transitive: For any x, y and z ∈ U , if x ∼ y and y ∼ z then x ∼ z. (For a more complete discussion of equivalence relations, see Webwork Homework 0, Problem 4) Show that row equivalence of augmented matrices is an equivalence relation. Firstly remember that an equivalence relation is just a more general ver- sion of ‘‘equals’’. Here we defined row equivalence for augmented matrices whose linear systems have solutions by the property that their solutions are the same. So this question is really about the word same. Lets do a silly example: Lets replace the set of augmented matrices by the set of people who have hair. We will call two people equivalent if they have the same hair color. There are three properties to check: • Reflexive: This just requires that you have the same hair color as yourself so obviously holds. • Symmetric: If the first person, Bob (say) has the same hair color as a second person Betty(say), then Bob has the same hair color as Betty, so this holds too. 369 370 Movie Scripts • Transitive: If Bob has the same hair color as Betty (say) and Betty has the same color as Brenda (say), then it follows that Bob and Brenda have the same hair color, so the transitive property holds too and we are done. 370 G.2 Systems of Linear Equations 371 Solution set in set notation Here is an augmented matrix, let’s think about what the solution set looks like ( 1 0 3 2 0 1 0 1 ) This looks like the system 1 · x1 + 3x3 = 2 1 · x2 = 1 Notice that when the system is written this way the copy of the 2 × 2 identity matrix ( 1 0 0 1 ) makes it easy to write a solution in terms of the variables x1 and x2. We will call x1 and x2 the pivot variables. The third column ( 3 0 ) does not look like part of an identity matrix, and there is no 3 × 3 identity in the augmented matrix. Notice there are more variables than equations and that this means we will have to write the solutions for the system in terms of the variable x3. We’ll call x3 the free variable. Let x3 = µ. (We could also just add a ‘‘dummy’’ equation x3 = x3.) Then we can rewrite the first equation in our system x1 + 3x3 = 2 x1 + 3µ = 2 x1 = 2 − 3µ. Then since the second equation doesn’t depend on µ we can keep the equation x2 = 1, and for a third equation we can write x3 = µ so that we get the system   x1 x2 x3   =   2 − 3µ 1 µ   =   2 1 0   +  −3µ 0 µ   =   2 1 0   + µ   −3 0 1   . 371 372 Movie Scripts Any value of µ will give a solution of the system, and any system can be written in this form for some value of µ. Since there are multiple solutions, we can also express them as a set:      x1 x2 x3   =  2 1 0   + µ   −3 0 1   µ ∈ R    . Worked Examples of Gaussian Elimination Let us consider that we are given two systems of equations that give rise to the following two (augmented) matrices:  2 5 2 0 2 1 1 1 0 1 1 4 1 0 1     5 2 9 0 5 10 0 3 6   and we want to find the solution to those systems. We will do so by doing Gaussian elimination. For the first matrix we have   2 5 2 0 2 1 1 1 0 1 1 4 1 0 1   R1↔R2∼   1 1 1 0 1 2 5 2 0 2 1 4 1 0 1   R2−2R1;R3−R1 ∼   1 1 1 0 1 0 3 0 0 0 0 3 0 0 0   1 3 R2 ∼   1 1 1 0 1 0 1 0 0 0 0 3 0 0 0   R1−R2;R3−3R2 ∼   1 0 1 0 1 0 1 0 0 0 0 0 0 0 0   1. We begin by interchanging the first two rows in order to get a 1 in the upper-left hand corner and avoiding dealing with fractions. 2. Next we subtract row 1 from row 3 and twice from row 2 to get zeros in the left-most column. 3. Then we scale row 2 to have a 1 in the eventual pivot. 4. Finally we subtract row 2 from row 1 and three times from row 2 to get it into Reduced Row Echelon Form. Therefore we can write x = 1 − λ, y = 0, z = λ and w = µ, or in vector form     x y z w     =     1 0 0 0     + λ     −1 0 1 0     + µ     0 0 0 1     . 372 G.2 Systems of Linear Equations 373 Now for the second system we have   5 2 9 0 5 10 0 3 6   1 5 R2 ∼   5 2 9 0 1 2 0 3 6   R3−3R2∼   5 2 9 0 1 2 0 0 0   R1−2R2∼   5 0 5 0 1 2 0 0 0   1 5 R1 ∼   1 0 1 0 1 2 0 0 0   We scale the second and third rows appropriately in order to avoid fractions, then subtract the corresponding rows as before. Finally scale the first row and hence we have x = 1 and y = 2 as a unique solution. Hints for Review Question 10 This question looks harder than it actually is: Row equivalence of matrices is an example of an equivalence relation. Recall that a relation ∼ on a set of objects U is an equivalence relation if the following three properties are satisfied: • Reflexive: For any x ∈ U , we have x ∼ x. • Symmetric: For any x, y ∈ U , if x ∼ y then y ∼ x. • Transitive: For any x, y and z ∈ U , if x ∼ y and y ∼ z then x ∼ z. (For a more complete discussion of equivalence relations, see Webwork Homework 0, Problem 4) Show that row equivalence of augmented matrices is an equivalence relation. Firstly remember that an equivalence relation is just a more general ver- sion of ‘‘equals’’. Here we defined row equivalence for augmented matrices whose linear systems have solutions by the property that their solutions are the same. So this question is really about the word same. Lets do a silly example: Lets replace the set of augmented matrices by the set of people who have hair. 373 374 Movie Scripts We will call two people equivalent if they have the same hair color. There are three properties to check: • Reflexive: This just requires that you have the same hair color as yourself so obviously holds. • Symmetric: If the first person, Bob (say) has the same hair color as a second person Betty(say), then Bob has the same hair color as Betty, so this holds too. • Transitive: If Bob has the same hair color as Betty (say) and Betty has the same color as Brenda (say), then it follows that Bob and Brenda have the same hair color, so the transitive property holds too and we are done. 374 G.2 Systems of Linear Equations 375 Hint for Review Question 5 The first part for Review Question 5 is simple--just write out the associated linear system and you will find the equation 0 = 6 which is inconsistent. Therefore we learn that we must avoid a row of zeros preceding a non-vanishing entry after the vertical bar. Turning to the system of equations, we first write out the augmented matrix and then perform two row operations   1 −3 0 6 1 0 3 −3 2 k 3 − k 1   R2−R1;R3−2R1 ∼   1 −3 0 6 0 3 3 −9 0 k + 6 3 − k −11   . Next we would like to subtract some amount of R2 from R3 to achieve a zero in the third entry of the second column. But if k + 6 = 3 − k ⇒ k = − 3 2 , this would produce zeros in the third row before the vertical line. You should also check that this does not make the whole third line zero. You now have enough information to write a complete solution. Planes Here we want to describe the mathematics of planes in space. The video is summarised by the following picture: A plane is often called R2 because it is spanned by two coordinates, and space is called R3 and has three coordinates, usually called (x, y, z). The equation for a plane is ax + by + cz = d . 375 376 Movie Scripts Lets simplify this by calling V = (x, y, z) the vector of unknowns and N = (a, b, c). Using the dot product in R3 we have N V = d . Remember that when vectors are perpendicular their dot products vanish. I.e. U V = 0 ⇔ U ⊥ V . This means that if a vector V0 solves our equation N V = d, then so too does V0 + C whenever C is perpendicular to N . This is because N (V0 + C) = N V0 + N C = d + 0 = d . But C is ANY vector perpendicular to N , so all the possibilities for C span a plane whose normal vector is N . Hence we have shown that solutions to the equation ax + by + cz = 0 are a plane with normal vector N = (a, b, c). Pictures and Explanation This video considers solutions sets for linear systems with three unknowns. These are often called (x, y, z) and label points in R3. Lets work case by case: • If you have no equations at all, then any (x, y, z) is a solution, so the solution set is all of R3. The picture looks a little silly: • For a single equation, the solution is a plane. This is explained in this video or the accompanying script. The picture looks like this: • For two equations, we must look at two planes. These usually intersect along a line, so the solution set will also (usually) be a line: 376 G.3 Vectors in Space n-Vectors 377 • For three equations, most often their intersection will be a single point so the solution will then be unique: • Of course stuff can go wrong. Two different looking equations could determine the same plane, or worse equations could be inconsistent. If the equations are inconsistent, there will be no solutions at all. For example, if you had four equations determining four parallel planes the solution set would be empty. This looks like this: G.3 Vectors in Space n-Vectors Review of Parametric Notation The equation for a plane in three variables x, y and z looks like ax + by + cz = d where a, b, c, and d are constants. Lets look at the example x + 2y + 5z = 3 . 377 378 Movie Scripts In fact this is a system of linear equations whose solutions form a plane with normal vector (1, 2, 5). As an augmented matrix the system is simply (1 2 5 ∣ ∣ ∣ 3) . This is actually RREF! So we can let x be our pivot variable and y, z be represented by free parameters λ1 and λ2: x = λ1 , y = λ2 . Thus we write the solution as x = −2λ1 −5λ2 +3 y = λ1 z = λ2 or in vector notation x y z   =  3 0 0   + λ1   −2 1 0   + λ2   −5 0 1   . This describes a plane parametric equation. Planes are ‘‘two-dimensional’’ because they are described by two free variables. Here’s a picture of the resulting plane: The Story of Your Life This video talks about the weird notion of a ‘‘length-squared’’ for a vector v = (x, t) given by ||v|| 2 = x2 − t2 used in Einstein’s theory of relativity. The 378 G.4 Vector Spaces 379 idea is to plot the story of your life on a plane with coordinates (x, t). The coordinate x encodes where an event happened (for real life situations, we must replace x → (x, y, z) ∈ R3). The coordinate t says when events happened. Therefore you can plot your life history as a worldline as shown: Each point on the worldline corresponds to a place and time of an event in your life. The slope of the worldline has to do with your speed. Or to be precise, the inverse slope is your velocity. Einstein realized that the maximum speed possible was that of light, often called c. In the diagram above c = 1 and corresponds to the lines x = ±t ⇒ x2 − t 2 = 0. This should get you started in your search for vectors with zero length. G.4 Vector Spaces Examples of Each Rule Lets show that R2 is a vector space. To do this (unless we invent some clever tricks) we will have to check all parts of the definition. Its worth doing this once, so here we go: Before we start, remember that for R2 we define vector addition and scalar multiplication component-wise. (+i) Additive closure: We need to make sure that when we add (x1 x2 ) and (y1 y2 ) that we do not get something outside the original vector space R2. This just relies on the underlying structure of real numbers whose sums are again real numbers so, using our component-wise addition law we have (x1 x2 ) + (y1 y2 ) := (x1 + x2 y1 + y2 ) ∈ R2 . (+ii) Additive commutativity: We want to check that when we add any two vectors we can do so in either order, i.e. (x1 x2 ) + (y1 y2 ) ? = (y1 y2 ) + ( x1 x2 ) . 379 380 Movie Scripts This again relies on the underlying real numbers which for any x, y ∈ R obey x + y = y + x . This fact underlies the middle step of the following computation (x1 x2 ) + (y1 y2 ) = ( x1 + y1 x2 + y2 ) = (y1 + x1 y2 + x2 ) = (y1 y2 ) + (x1 x2 ) , which demonstrates what we wished to show. (+iii) Additive Associativity: This shows that we needn’t specify with paren- theses which order we intend to add triples of vectors because their sums will agree for either choice. What we have to check is ((x1 x2 ) + (y1 y2 )) + ( z1 z2 ) ? = (x1 x2 ) + ((y1 y2 ) + (z1 z2 )) . Again this relies on the underlying associativity of real numbers: (x + y) + z = x + (y + z) . The computation required is ((x1 x2 ) + ( y1 y2 )) + (z1 z2 ) = (x1 + y1 x2 + y2 ) + ( z1 z2 ) = ((x1 + y1) + z1 (x2 + y2) + z2 ) = (x1 + (y1 + z1) x2 + (y2 + z2) ) = (x1 y1 ) + (y1 + z1 y2 + z2 ) = ( x1 x2 ) + ((y1 y2 ) + (z1 z2 )) . (iv) Zero: There needs to exist a vector ⃗0 that works the way we would expect zero to behave, i.e. (x1 y1 ) + ⃗0 = (x1 y1 ) . It is easy to find, the answer is ⃗0 = (0 0 ) . You can easily check that when this vector is added to any vector, the result is unchanged. (+v) Additive Inverse: We need to check that when we have (x1 x2 ), there is another vector that can be added to it so the sum is ⃗0. (Note that it is important to first figure out what ⃗0 is here!) The answer for the additive inverse of ( x1 x2 ) is (−x1 −x2 ) because (x1 x2 ) + (−x1 −x2 ) = (x1 − x1 x2 − x2 ) = ( 0 0 ) = ⃗0 . 380 G.4 Vector Spaces 381 We are half-way done, now we need to consider the rules for scalar multipli- cation. Notice, that we multiply vectors by scalars (i.e. numbers) but do NOT multiply a vectors by vectors. (·i) Multiplicative closure: Again, we are checking that an operation does not produce vectors outside the vector space. For a scalar a ∈ R, we require that a (x1 x2 ) lies in R2. First we compute using our component- wise rule for scalars times vectors: a (x1 x2 ) = (ax1 ax2 ) . Since products of real numbers ax1 and ax2 are again real numbers we see this is indeed inside R2. (·ii) Multiplicative distributivity: The equation we need to check is (a + b) (x1 x2 ) ? = a ( x1 x2 ) + b ( x1 x2 ) . Once again this is a simple LHS=RHS proof using properties of the real numbers. Starting on the left we have (a + b) (x1 x2 ) = ((a + b)x1 (a + b)x2 ) = (ax1 + bx1 ax2 + bx2 ) = (ax1 ax2 ) + (bx1 bx2 ) = a ( x1 x2 ) + b ( x1 x2 ) , as required. (·iii) Additive distributivity: This time we need to check the equation The equation we need to check is a ((x1 x2 ) + (y1 y2 )) ? = a (x1 x2 ) + a ( y1 y2 ) , i.e., one scalar but two different vectors. The method is by now becoming familiar a ((x1 x2 ) + (y1 y2 )) = a ((x1 + y1 x2 + y2 )) = (a(x1 + y1) a(x2 + y2) ) = (ax1 + ay1 ax2 + ay2 ) = ( ax1 ax2 ) + (ay1 ay2 ) = a (x1 x2 ) + a ( y1 y2 ) , again as required. 381 382 Movie Scripts (·iv) Multiplicative associativity. Just as for addition, this is the re- quirement that the order of bracketing does not matter. We need to establish whether (a.b) · ( x1 x2 ) ? = a · (b · (x1 x2 )) . This clearly holds for real numbers a.(b.x) = (a.b).x. The computation is (a.b) · ( x1 x2 ) = ( (a.b).x1 (a.b).x2 ) = (a.(b.x1) a.(b.x2) ) = a. ((b.x1) (b.x2) ) = a · (b · ( x1 x2 )) , which is what we want. (·v) Unity: We need to find a special scalar acts the way we would expect ‘‘1’’ to behave. I.e. ‘‘1’’ · (x1 x2 ) = (x1 x2 ) . There is an obvious choice for this special scalar---just the real number 1 itself. Indeed, to be pedantic lets calculate 1 · ( x1 x2 ) = ( 1.x1 1.x2 ) = ( x1 x2 ) . Now we are done---we have really proven the R2 is a vector space so lets write a little square □ to celebrate. Example of a Vector Space This video talks about the definition of a vector space. Even though the defintion looks long, complicated and abstract, it is actually designed to model a very wide range of real life situations. As an example, consider the vector space V = {all possible ways to hit a hockey puck} . The different ways of hitting a hockey puck can all be considered as vectors. You can think about adding vectors by having two players hitting the puck at the same time. This picture shows vectors N and J corresponding to the ways Nicole Darwitz and Jenny Potter hit a hockey puck, plus the vector obtained when they hit the puck together. 382 G.5 Linear Transformations 383 You can also model the new vector 2J obtained by scalar multiplication by 2 by thinking about Jenny hitting the puck twice (or a world with two Jenny Potters....). Now ask yourself questions like whether the multiplicative distributive law 2J + 2N = 2(J + N ) make sense in this context. Hint for Review Question 5 Lets worry about the last part of the problem. The problem can be solved by considering a non-zero simple polynomial, such as a degree 0 polynomial, and multiplying by i ∈ C. That is to say we take a vector p ∈ P R 3 and then considering i·p. This will violate one of the vector space rules about scalars, and you should take from this that the scalar field matters. As a second hint, consider Q (the field of rational numbers). This is not a vector space over R since √2 · 1 = √2 /∈ Q, so it is not closed under scalar multiplication, but it is clearly a vector space over Q. G.5 Linear Transformations Hint for Review Question 5 The first thing we see in the problem is a definition of this new space Pn. Elements of Pn are polynomials that look like a0 + a1t + a2t2 + . . . + antn where the ai’s are constants. So this means if L is a linear transformation from P2 → P3 that the inputs of L are degree two polynomials which look like a0 + a1t + a2t2 and the output will have degree three and look like b0 + b1t + b2t2 + b3t 3 We also know that L is a linear transformation, so what does that mean in this case? Well, by linearity we know that we can separate out the sum, and pull out the constants so we get L(a0 + a1t + a2t2) = a0L(1) + a1L(t) + a2L(t2) Just this should be really helpful for the first two parts of the problem. The third part of the problem is asking us to think about this as a linear algebra problem, so lets think about how we could write this in the vector notation we use in the class. We could write 383 384 Movie Scripts a0 + a1t + a2t2 as   a0 a1 a2   And think for a second about how you add polynomials, you match up terms of the same degree and add the constants component-wise. So it makes some sense to think about polynomials this way, since vector addition is also component- wise. We could also write the output b0 + b1t + b2t 2 + b3t3 as   b0 b1 b2   b3 Then lets look at the information given in the problem and think about it in terms of column vectors • L(1) = 4 but we can think of the input 1 = 1 + 0t + 0t2 and the output 4 = 4 + 0t + 0t 20t3 and write this as L(  1 0 0  ) =     4 0 0 0     • L(t) = t3 This can be written as L(   0 1 0  ) =     0 0 0 1     • L(t 2) = t − 1 It might be a little trickier to figure out how to write t − 1 but if we write the polynomial out with the terms in order and with zeroes next to the terms that do not appear, we can see that t − 1 = −1 + t + 0t 2 + 0t 3 corresponds to     −1 1 0 0     So this can be written as L(   0 0 1  ) =     −1 1 0 0     Now to think about how you would write the linear transformation L as a matrix, first think about what the dimensions of the matrix would be. Then look at the first two parts of this problem to help you figure out what the entries should be. 384 G.6 Matrices 385 G.6 Matrices Adjacency Matrix Example Lets think about a graph as a mini-facebook. In this tiny facebook there are only four people, Alice, Bob, Carl, and David. Suppose we have the following relationships • Alice and Bob are friends. • Alice and Carl are friends. • Carl and Bob are friends. • David and Bob are friends. Now draw a picture where each person is a dot, and then draw a line between the dots of people who are friends. This is an example of a graph if you think of the people as nodes, and the friendships as edges. Now lets make a 4 × 4 matrix, which is an adjacency matrix for the graph. Make a column and a row for each of the four people. It will look a lot like a table. When two people are friends put a 1 the the row of one and the column of the other. For example Alice and Carl are friends so we can label the table below. A B C D A 1 B C 1 D We can continue to label the entries for each friendship. Here lets assume that people are friends with themselves, so the diagonal will be all ones. 385 386 Movie Scripts A B C D A 1 1 1 0 B 1 1 1 1 C 1 1 1 0 D 0 1 0 1 Then take the entries of this table as a matrix     1 1 1 0 1 1 1 1 1 1 1 0 0 1 0 1     Notice that this table is symmetric across the diagonal, the same way a multiplication table would be symmetric. This is because on facebook friend- ship is symmetric in the sense that you can’t be friends with someone if they aren’t friends with you too. This is an example of a symmetric matrix. You could think about what you would have to do differently to draw a graph for something like twitter where you don’t have to follow everyone who follows you. The adjacency matrix might not be symmetric then. Do Matrices Commute? This video shows you a funny property of matrices. Some matrix properties look just like those for numbers. For example numbers obey a(bc) = (ab)c and so do matrices: A(BC) = (AB)C. This says the order of bracketing does not matter and is called associativity. Now we ask ourselves whether the basic property of numbers ab = ba , holds for matrices AB ? = BA . For this, firstly note that we need to work with square matrices even for both orderings to even make sense. Lets take a simple 2 × 2 example, let A = ( 1 a 0 1 ) , B = (1 b 0 1 ) , C = (1 0 a 1 ) . In fact, computing AB and BA we get the same result AB = BA = (1 a + b 0 1 ) , 386 G.6 Matrices 387 so this pair of matrices do commute. Lets try A and C: AC = (1 + a 2 a a 1 ) , and CA = (1 a a 1 + a 2 ) so AC ̸= CA and this pair of matrices does not commute. Generally, matrices usually do not commute, and the problem of finding those that do is a very interesting one. Matrix Exponential Example This video shows you how to compute exp ( 0 θ −θ 0 ) . For this we need to remember that the matrix exponential is defined by its power series exp M := I + M + 1 2! M 2 + 1 3! M 3 + · · · . Now lets call ( 0 θ −θ 0 ) = iθ where the matrix i := ( 0 1 −1 0 ) and by matrix multiplication is seen to obey i 2 = −I , i 3 = −i , i4 = I . Using these facts we compute by organizing terms according to whether they have an i or not: exp iθ = I + 1 2! θ2(−I) + 1 4! (+I) + · · · + iθ + 1 3! θ3(−i) + 1 5! i + · · · = I(1 − 1 2! θ2 + 1 4! θ4 + · · · ) + i(θ − 1 3! θ3 + 1 5! θ5 + · · · ) = I cos θ + i sin θ = ( cos θ sin θ − sin θ cos θ ) . Here we used the familiar Taylor series for the cosine and sine functions. A fun thing to think about is how the above matrix acts on vector in the plane. 387 388 Movie Scripts Proof Explanation In this video we will talk through the steps required to prove tr M N = tr N M . There are some useful things to remember, first we can write M = (mi j) and N = (ni j) where the upper index labels rows and the lower one columns. Then M N = ( ∑ l mi lnl j) , where the ‘‘open’’ indices i and j label rows and columns, but the index l is a ‘‘dummy’’ index because it is summed over. (We could have given it any name we liked!). Finally the trace is the sum over diagonal entries for which the row and column numbers must coincide tr M = ∑ i m i i . Hence starting from the left of the statement we want to prove, we have LHS = tr M N = ∑ i ∑ l m i lnl i . Next we do something obvious, just change the order of the entries m i l and nl i (they are just numbers) so∑ i ∑ l mi lnl i = ∑ i ∑ l nl im i l . Equally obvious, we now rename i → l and l → i so ∑ i ∑ l mi lnl i = ∑ l ∑ i ni lm l i . Finally, since we have finite sums it is legal to change the order of summa- tions ∑ l ∑ i ni lm l i = ∑ i ∑ l ni lm l i . This expression is the same as the one on the line above where we started except the m and n have been swapped so ∑ i ∑ l m i lnl i = tr N M = RHS . This completes the proof. □ 388 G.6 Matrices 389 Hint for Review Question 4 This problem just amounts to remembering that the dot product of x = (x1, x2, . . . , xn) and y = (y1, y2, . . . , yn) is x1y1 + x2y2 + · · · + xnyn . Then try multiplying the above row vector times yT and compare. Hint for Review Question 5 The majority of the problem comes down to showing that matrices are right distributive. Let Mk is all n × k matrices for any n, and define the map fR : Mk → Mm by fR(M ) = M R where R is some k × m matrix. It should be clear that fR(α · M ) = (αM )R = α(M R) = αfR(M ) for any scalar α. Now all that needs to be proved is that fR(M + N ) = (M + N )R = M R + N R = fR(M ) + fR(N ), and you can show this by looking at each entry. We can actually generalize the concept of this problem. Let V be some vector space and M be some collection of matrices, and we say that M is a left-action on V if (M · N ) ◦ v = M ◦ (N ◦ v) for all M, N ∈ N and v ∈ V where · denoted multiplication in M (i.e. standard matrix multiplication) and ◦ denotes the matrix is a linear map on a vector (i.e. M (v)). There is a corresponding notion of a right action where v ◦ (M · N ) = (v ◦ M ) ◦ N where we treat v ◦ M as M (v) as before, and note the order in which the matrices are applied. People will often omit the left or right because they are essentially the same, and just say that M acts on V . Hint for Review Question 8 This is a hint for computing exponents of matrices. So what is e A if A is a matrix? We remember that the Taylor series for ex = ∞∑ n=0 xn n! . So as matrices we can think about eA = ∞∑ n=0 An n! . 389 390 Movie Scripts This means we are going to have an idea of what An looks like for any n. Lets look at the example of one of the matrices in the problem. Let A = ( 1 λ 0 1 ) . Lets compute An for the first few n. A0 = ( 1 0 0 1 ) A1 = ( 1 λ 0 1 ) A2 = A · A = ( 1 2λ 0 1 ) A3 = A2 · A = ( 1 3λ 0 1 ) . There is a pattern here which is that An = ( 1 nλ 0 1 ) , then we can think about the first few terms of the sequence eA = ∞∑ n=0 An n! = A0 + A + 1 2! A2 + 1 3! A3 + . . . . Looking at the entries when we add this we get that the upper left-most entry looks like this: 1 + 1 + 1 2 + 1 3! + . . . = ∞∑ n=0 1 n! = e1. Continue this process with each of the entries using what you know about Taylor series expansions to find the sum of each entry. 2 × 2 Example Lets go though and show how this 2×2 example satisfies all of these properties. Lets look at M = ( 7 3 11 5 ) We have a rule to compute the inverse ( a b c d )−1 = 1 ad − bc ( d −b −c a ) 390 G.6 Matrices 391 So this means that M −1 = 1 35 − 33 ( 5 −3 −11 7 ) Lets check that M −1M = I = M M −1. M −1M = 1 35 − 33 ( 5 −3 −11 7 ) ( 7 3 11 5 ) = 1 2 ( 2 0 0 2 ) = I You can compute M M −1, this should work the other way too. Now lets think about products of matrices Let A = ( 1 3 1 5 ) and B = ( 1 0 2 1 ) Notice that M = AB. We have a rule which says that (AB) −1 = B−1A−1. Lets check to see if this works A−1 = 1 2 ( 5 −3 −1 1 ) and B−1 = ( 1 0 −2 1 ) and B−1A−1 = ( 1 0 −2 1 ) ( 5 −3 −1 1 ) = 1 2 ( 2 0 0 2 ) Hint for Review Problem 3 Firstnote that (b) implies (a) is the easy direction: just think about what it means for M to be non-singular and for a linear function to be well-defined. Therefore we assume that M is singular which implies that there exists a non- zero vector X0 such that M X0 = 0. Now assume there exists some vector XV such that M XV = V , and look at what happens to XV + c · X0 for any c in your field. Lastly don’t forget to address what happens if XV does not exist. Hint for Review Question 4 In the text, only inverses for square matrices were discussed, but there is a notion of left and right inverses for matrices that are not square. It helps to look at an example with bits to see why. To start with we look at vector spaces Z 3 2 = {(x, y, z)|x, y, z = 0, 1} and Z 2 2 = {(x, y)|x, y = 0, 1} . These have 8 and 4 vectors, respectively, that can be depicted as corners of a cube or square: 391 392 Movie Scripts Z 3 2 or Z 2 2 Now lets consider a linear transformation L : Z 3 2 −→ Z 2 2 . This must be represented by a matrix, and lets take the example L  x y z   = (0 1 1 1 1 0 )  x y z   := AX . Since we have bits, we can work out what L does to every vector, this is listed below (0, 0, 0) L ↦→ (0, 0) (0, 0, 1) L ↦→ (1, 0) (1, 1, 0) L ↦→ (1, 0) (1, 0, 0) L ↦→ (0, 1) (0, 1, 1) L ↦→ (0, 1) (0, 1, 0) L ↦→ (1, 1) (1, 0, 1) L ↦→ (1, 1) (1, 1, 1) L ↦→ (1, 1) Now lets think about left and right inverses. A left inverse B to the matrix A would obey BA = I and since the identity matrix is square, B must be 2 × 3. It would have to undo the action of A and return vectors in Z 3 2 to where they started from. But above, we see that different vectors in Z 3 2 are mapped to the same vector in Z 2 2 by the linear transformation L with matrix A. So B cannot exist. However a right inverse C obeying AC = I can. It would be 2 × 2. Its job is to take a vector in Z 2 2 back to one in Z 3 2 in a way that gets undone by the action of A. This can be done, but not uniquely. 392 G.6 Matrices 393 Using an LU Decomposition Lets go through how to use a LU decomposition to speed up solving a system of equations. Suppose you want to solve for x in the equation M x = b   1 0 −5 3 −1 −14 1 0 −3   x =   6 19 4   where you are given the decomposition of M into the product of L and U which are lower and upper and lower triangular matrices respectively. M =   1 0 −5 3 −1 −14 1 0 −3   =   1 0 0 3 1 0 1 0 2     1 0 −5 0 −1 1 0 0 1   = LU First you should solve L(U x) = b for U x. The augmented matrix you would use looks like this   1 0 0 6 3 1 0 19 1 0 2 4   This is an easy augmented matrix to solve because it is upper triangular. If you were to write out the three equations using variables, you would find that the first equation has already been solved, and is ready to be plugged into the second equation. This backward substitution makes solving the system much faster. Try it and in a few steps you should be able to get   1 0 0 6 0 1 0 1 0 0 1 −1   This tells us that U x =   6 1 −1  . Now the second part of the problem is to solve for x. The augmented matrix you get is   1 0 −5 6 0 −1 1 1 0 0 1 −1   It should take only a few step to transform it into   1 0 0 1 0 1 0 −2 0 0 1 −1   , which gives us the answer x =   1 −2 −1  . 393 394 Movie Scripts Another LU Decomposition Example Here we will perform an LU decomposition on the matrix M =   1 7 2 −3 −21 4 1 6 3   following the procedure outlined in Section 7.7.2. So initially we have L1 = I3 and U1 = M , and hence L2 =   1 0 0 −3 1 0 1 0 1   U2 =  1 7 2 0 0 10 0 −1 −1   . However we now have a problem since 0 · c = 0 for any value of c since we are working over a field, but we can quickly remedy this by swapping the second and third rows of U2 to get U ′ 2 and note that we just interchange the corresponding rows all columns left of and including the column we added values to in L2 to get L ′ 2. Yet this gives us a small problem as L ′ 2U ′ 2 ̸= M ; in fact it gives us the similar matrix M ′ with the second and third rows swapped. In our original problem M X = V , we also need to make the corresponding swap on our vector V to get a V ′ since all of this amounts to changing the order of our two equations, and note that this clearly does not change the solution. Back to our example, we have L ′ 2 =   1 0 0 1 1 0 −3 0 1   U ′ 2 =  1 7 2 0 −1 −1 0 0 10   , and note that U ′ 2 is upper triangular. Finally you can easily see that L ′ 2U ′ 2 =   1 7 2 1 6 3 −3 −21 4   = M ′ which solves the problem of L′ 2U ′ 2X = M ′X = V ′. (We note that as augmented matrices (M ′|V ′) ∼ (M |V ).) Block LDU Explanation This video explains how to do a block LDU decomposition. Firstly remember some key facts about block matrices: It is important that the blocks fit together properly. For example, if we have matrices matrix shape X r × r Y r × t Z t × r W t × t 394 G.7 Determinants 395 we could fit these together as a (r + t) × (r + t) square block matrix M = ( X Y Z W ) . Matrix multiplication works for blocks just as for matrix entries: M 2 = ( X Y Z W ) ( X Y Z W ) = ( X 2 + Y Z XY + Y W ZX + W Z ZY + W 2 ) . Now lets specialize to the case where the square matrix X has an inverse. Then we can multiply out the following triple product of a lower triangular, a block diagonal and an upper triangular matrix: ( I 0 ZX −1 I ) ( X 0 0 W − ZX −1Y ) ( I X −1Y 0 I ) = ( X 0 Z W − ZX −1Y ) ( I X −1Y 0 I ) = ( X Y ZX −1Y + Z W − ZX −1Y ) = ( X Y Z W ) = M . This shows that the LDU decomposition given in Section 7.7 is correct. G.7 Determinants Permutation Example Lets try to get the hang of permutations. A permutation is a function which scrambles things. Suppose we had This looks like a function σ that has values σ(1) = 3, σ(2) = 2, σ(3) = 4, σ(4) = 1 . 395 396 Movie Scripts Then we could write this as [ 1 2 3 4 σ(1) σ(2) σ(3) σ(4) ] = [ 1 2 3 4 3 2 4 1 ] We could write this permutation in two steps by saying that first we swap 3 and 4, and then we swap 1 and 3. The order here is important. This is an even permutation, since the number of swaps we used is two (an even number). Elementary Matrices This video will explain some of the ideas behind elementary matrices. First think back to linear systems, for example n equations in n unknowns:    a 1 1x1 + a 1 2x2 + · · · + a 1 nxn = v1 a 2 1x1 + a 2 2x2 + · · · + a 2 nxn = v2 ... a n 1 x1 + a n 2 x2 + · · · + a n nxn = vn . We know it is helpful to store the above information with matrices and vectors M :=      a 1 1 a 1 2 · · · a 1 n a 2 1 a 2 2 · · · a 2 n ... ... ... a n 1 a n 2 · · · a n n      , X :=      x 1 x 2 ... xn      , V :=      v1 v2 ... vn      . Here we will focus on the case the M is square because we are interested in its inverse M −1 (if it exists) and its determinant (whose job it will be to determine the existence of M −1). We know at least three ways of handling this linear system problem: 1. As an augmented matrix ( M V ) . Here our plan would be to perform row operations until the system looks like ( I M −1V ) , (assuming that M −1 exists). 396 G.7 Determinants 397 2. As a matrix equation M X = V , which we would solve by finding M −1 (again, if it exists), so that X = M −1V . 3. As a linear transformation L : Rn −→ Rn via Rn ∋ X ↦−→ M X ∈ Rn . In this case we have to study the equation L(X) = V because V ∈ Rn. Lets focus on the first two methods. In particular we want to think about how the augmented matrix method can give information about finding M −1. In particular, how it can be used for handling determinants. The main idea is that the row operations changed the augmented matrices, but we also know how to change a matrix M by multiplying it by some other matrix E, so that M → EM . In particular can we find ‘‘elementary matrices’’ the perform row operations? Once we find these elementary matrices is is very important to ask how they effect the determinant, but you can think about that for your own self right now. Lets tabulate our names for the matrices that perform the various row operations: Row operation Elementary Matrix Ri ↔ Rj Ei j Ri → λRi Ri(λ) Ri → Ri + λRj Si j(λ) To finish off the video, here is how all these elementary matrices work for a 2 × 2 example. Lets take M = (a b c d ) . A good thing to think about is what happens to det M = ad − bc under the operations below. • Row swap: E1 2 = ( 0 1 1 0 ) , E1 2 M = (0 1 1 0 ) ( a b c d ) = (c d a b ) . 397 398 Movie Scripts • Scalar multiplying: R1(λ) = (λ 0 0 1 ) , E1 2 M = ( λ 0 0 1 ) ( a b c d ) = (λa λb c d ) . • Row sum: S1 2 (λ) = (1 λ 0 1 ) , S1 2 (λ)M = (1 λ 0 1 ) ( a b c d ) = (a + λc b + λd c d ) . Elementary Determinants This video will show you how to calculate determinants of elementary matrices. First remember that the job of an elementary row matrix is to perform row operations, so that if E is an elementary row matrix and M some given matrix, EM is the matrix M with a row operation performed on it. The next thing to remember is that the determinant of the identity is 1. Moreover, we also know what row operations do to determinants: • Row swap Ei j: flips the sign of the determinant. • Scalar multiplication Ri(λ): multiplying a row by λ multiplies the de- terminant by λ. • Row addition Si j(λ): adding some amount of one row to another does not change the determinant. The corresponding elementary matrices are obtained by performing exactly these operations on the identity: Ei j =               1 ... 0 1 ... 1 0 ... 1               , Ri(λ) =         1 ... λ ... 1         , 398 G.7 Determinants 399 Si j(λ) =               1 ... 1 λ ... 1 ... 1               So to calculate their determinants, we just have to apply the above list of what happens to the determinant of a matrix under row operations to the determinant of the identity. This yields det Ei j = −1 , det Ri(λ) = λ , det Si j(λ) = 1 . Determinants and Inverses Lets figure out the relationship between determinants and invertibility. If we have a system of equations M x = b and we have the inverse M −1 then if we multiply on both sides we get x = M −1M x = M −1b. If the inverse exists we can solve for x and get a solution that looks like a point. So what could go wrong when we want solve a system of equations and get a solution that looks like a point? Something would go wrong if we didn’t have enough equations for example if we were just given x + y = 1 or maybe, to make this a square matrix M we could write this as x + y = 1 0 = 0 The matrix for this would be M = [ 1 1 0 0 ] and det(M ) = 0. When we compute the determinant, this row of all zeros gets multiplied in every term. If instead we were given redundant equations x + y = 1 2x + 2y = 2 The matrix for this would be M = [ 1 1 2 2 ] and det(M ) = 0. But we know that with an elementary row operation, we could replace the second row with a row 399 400 Movie Scripts of all zeros. Somehow the determinant is able to detect that there is only one equation here. Even if we had a set of contradictory set of equations such as x + y = 1 2x + 2y = 0, where it is not possible for both of these equations to be true, the matrix M is still the same, and still has a determinant zero. Lets look at a three by three example, where the third equation is the sum of the first two equations. x + y + z = 1 y + z = 1 x + 2y + 2z = 2 and the matrix for this is M =   1 1 1 0 1 1 1 2 2   If we were trying to find the inverse to this matrix using elementary matrices   1 1 1 1 0 0 0 1 1 0 1 0 1 2 2 0 0 1   =   1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 −1 −1 1   And we would be stuck here. The last row of all zeros cannot be converted into the bottom row of a 3 × 3 identity matrix. this matrix has no inverse, and the row of all zeros ensures that the determinant will be zero. It can be difficult to see when one of the rows of a matrix is a linear combination of the others, and what makes the determinant a useful tool is that with this reasonably simple computation we can find out if the matrix is invertible, and if the system will have a solution of a single point or column vector. Alternative Proof Here we will prove more directly that the determinant of a product of matrices is the product of their determinants. First we reference that for a matrix M with rows ri, if M ′ is the matrix with rows r′ j = rj + λri for j ̸= i and r′ i = ri, then det(M ) = det(M ′) Essentially we have M ′ as M multiplied by the elementary row sum matrices Si j(λ). Hence we can create an upper-triangular matrix U such that det(M ) = det(U ) by first using the first row to set m 1 i ↦→ 0 for all i > 1, then iteratively (increasing k by 1 each time) for fixed k using the k-th row to set mk i ↦→ 0 for all i > k. 400 G.7 Determinants 401 Now note that for two upper-triangular matrices U = (uj i ) and U ′ = (u ′j i ), by matrix multiplication we have X = U U ′ = (x j i ) is upper-triangular and x i i = u i iu ′i i . Also since every permutation would contain a lower diagonal entry (which is 0) have det(U ) = ∏i u i i. Let A and A′ have corresponding upper- triangular matrices U and U ′ respectively (i.e. det(A) = det(U )), we note that AA′ has a corresponding upper-triangular matrix U U ′, and hence we have det(AA′) = det(U U ′) = ∏ i u i iu ′i i = ( ∏ i u i i ) ( ∏ i u ′i i ) = det(U ) det(U ′) = det(A) det(A′). Practice taking Determinants Lets practice taking determinants of 2 × 2 and 3 × 3 matrices. For 2 × 2 matrices we have a formula det ( a b c d ) = ad − bc . This formula might be easier to remember if you think about this picture. Now we can look at three by three matrices and see a few ways to compute the determinant. We have a similar pattern for 3 × 3 matrices. Consider the example det   1 2 3 3 1 2 0 0 1   = ((1 · 1 · 1) + (2 · 2 · 0) + (3 · 3 · 0)) − ((3 · 1 · 0) + (1 · 2 · 0) + (3 · 2 · 1)) = −5 We can draw a picture with similar diagonals to find the terms that will be positive and the terms that will be negative. 401 402 Movie Scripts Another way to compute the determinant of a matrix is to use this recursive formula. Here I take the coefficients of the first row and multiply them by the determinant of the minors and the cofactor. Then we can use the formula for a two by two determinant to compute the determinant of the minors det   1 2 3 3 1 2 0 0 1   = 1 ∣ ∣ ∣ ∣1 2 0 1 ∣ ∣ ∣ ∣ − 2 ∣ ∣ ∣ ∣ 3 2 0 1 ∣ ∣ ∣ ∣ + 3 ∣ ∣ ∣ ∣3 1 0 0 ∣ ∣ ∣ ∣ = 1(1 − 0) − 2(3 − 0) + 3(0 − 0) = −5 Decide which way you prefer and get good at taking determinants, you’ll need to compute them in a lot of problems. Hint for Review Problem 5 For an arbitrary 3 × 3 matrix A = (a i j), we have det(A) = a 1 1a 2 2a 3 3 + a 1 2a 2 3a 3 1 + a 1 3a 2 1a 3 2 − a 1 1a 2 3a 3 2 − a 1 2a 2 1a 3 3 − a 1 3a 2 2a 3 1 and so the complexity is 5a + 12m. Now note that in general, the complexity cn of the expansion minors formula of an arbitrary n × n matrix should be cn = (n − 1)a + ncn−1m since det(A) = ∑n i=1(−1)ia1 i cofactor(a 1 i ) and cofactor(a 1 i ) is an (n − 1) × (n − 1) matrix. This is one way to prove part (c). 402 G.8 Subspaces and Spanning Sets 403 G.8 Subspaces and Spanning Sets Linear systems as spanning sets Suppose that we were given a set of linear equations lj(x1, x 2, . . . , xn) and we want to find out if lj(X) = vj for all j for some vector V = (vj). We know that we can express this as the matrix equation ∑ i lj i xi = vj where lj i is the coefficient of the variable xi in the equation lj. However, this is also stating that V is in the span of the vectors {Li}i where Li = (lj i )j. For example, consider the set of equations 2x + 3y − z = 5 −x + 3y + z = 1 x + y − 2z = 3 which corresponds to the matrix equation   2 3 −1 −1 3 1 1 1 −2     x y z   =   5 1 3   . We can thus express this problem as determining if the vector V =  5 1 3   lies in the span of      2 −1 1   ,   3 3 1   ,   −1 1 −2      . Hint for Review Problem 2 For the first part, try drawing an example in R3: 403 404 Movie Scripts Here we have taken the subspace W to be a plane through the origin and U to be a line through the origin. The hint now is to think about what happens when you add a vector u ∈ U to a vector w ∈ W . Does this live in the union U ∪ W ? For the second part, we take a more theoretical approach. Lets suppose that v ∈ U ∩ W and v′ ∈ U ∩ W . This implies v ∈ U and v′ ∈ U . So, since U is a subspace and all subspaces are vector spaces, we know that the linear combination αv + βv′ ∈ U . Now repeat the same logic for W and you will be nearly done. G.9 Linear Independence Worked Example This video gives some more details behind the example for the following four vectors in R3 Consider the following vectors in R3: v1 =   4 −1 3   , v2 =   −3 7 4   , v3 =   5 12 17   , v4 =   −1 1 0   . The example asks whether they are linearly independent, and the answer is immediate: NO, four vectors can never be linearly independent in R3. This vector space is simply not big enough for that, but you need to understand the 404 G.9 Linear Independence 405 notion of the dimension of a vector space to see why. So we think the vectors v1, v2, v3 and v4 are linearly dependent, which means we need to show that there is a solution to α1v1 + α2v2 + α3v3 + α4v4 = 0 for the numbers α1, α2, α3 and α4 not all vanishing. To find this solution we need to set up a linear system. Writing out the above linear combination gives 4α1 −3α2 +5α3 −α4 = 0 , −α1 +7α2 +12α3 +α4 = 0 , 3α1 +4α2 +17α3 = 0 . This can be easily handled using an augmented matrix whose columns are just the vectors we started with   4 −3 5 −1 0 , −1 7 12 1 0 , 3 4 17 0 0 .   . Since there are only zeros on the right hand column, we can drop it. Now we perform row operations to achieve RREF   4 −3 5 −1 −1 7 12 1 3 4 17 0   ∼    1 0 71 25 − 4 25 0 1 53 25 3 25 0 0 0 0    . This says that α3 and α4 are not pivot variable so are arbitrary, we set them to µ and ν, respectively. Thus α1 = ( − 71 25 µ + 4 25 ν) , α2 = ( − 53 25 µ − 3 25 ν) , α3 = µ , α4 = ν . Thus we have found a relationship among our four vectors ( − 71 25 µ + 4 25 ν) v1 + ( − 53 25 µ − 3 25 ν) v2 + µ v3 + µ4 v4 = 0 . In fact this is not just one relation, but infinitely many, for any choice of µ, ν. The relationship quoted in the notes is just one of those choices. Finally, since the vectors v1, v2, v3 and v4 are linearly dependent, we can try to eliminate some of them. The pattern here is to keep the vectors that correspond to columns with pivots. For example, setting µ = −1 (say) and ν = 0 in the above allows us to solve for v3 while µ = 0 and ν = −1 (say) gives v4, explicitly we get v3 = 71 25 v1 + 53 25 v2 , v4 = − 4 25 v3 + 3 25 v4 . This eliminates v3 and v4 and leaves a pair of linearly independent vectors v1 and v2. 405 406 Movie Scripts Worked Proof Here we will work through a quick version of the proof of Theorem 10.1.1. Let {vi} denote a set of linearly dependent vectors, so ∑ i c ivi = 0 where there exists some c k ̸= 0. Now without loss of generality we order our vectors such that c 1 ̸= 0, and we can do so since addition is commutative (i.e. a + b = b + a). Therefore we have c 1v1 = − n∑ i=2 civi v1 = − n∑ i=2 c i c1 vi and we note that this argument is completely reversible since every ci ̸= 0 is invertible and 0/c i = 0. Hint for Review Problem 1 Lets first remember how Z2 works. The only two elements are 1 and 0. Which means when you add 1 + 1 you get 0. It also means when you have a vector ⃗v ∈ Bn and you want to multiply it by a scalar, your only choices are 1 and 0. This is kind of neat because it means that the possibilities are finite, so we can look at an entire vector space. Now lets think about B3 there is choice you have to make for each co- ordinate, you can either put a 1 or a 0, there are three places where you have to make a decision between two things. This means that you have 2 3 = 8 possibilities for vectors in B3. When you want to think about finding a set S that will span B3 and is linearly independent, you want to think about how many vectors you need. You will need you have enough so that you can make every vector in B3 using linear combinations of elements in S but you don’t want too many so that some of them are linear combinations of each other. I suggest trying something really simple perhaps something that looks like the columns of the identity matrix For part (c) you have to show that you can write every one of the elements as a linear combination of the elements in S, this will check to make sure S actually spans B3. For part (d) if you have two vectors that you think will span the space, you can prove that they do by repeating what you did in part (c), check that every vector can be written using only copies of of these two vectors. If you don’t think it will work you should show why, perhaps using an argument that counts the number of possible vectors in the span of two vectors. 406 G.10 Basis and Dimension 407 G.10 Basis and Dimension Proof Explanation Lets walk through the proof of theorem 11.0.1. We want to show that for S = {v1, . . . , vn} a basis for a vector space V , then every vector w ∈ V can be written uniquely as a linear combination of vectors in the basis S: w = c1v1 + · · · + c nvn. We should remember that since S is a basis for V , we know two things • V = span S • v1, . . . , vn are linearly independent, which means that whenever we have a 1v1 + . . . + a nvn = 0 this implies that a i = 0 for all i = 1, . . . , n. This first fact makes it easy to say that there exist constants ci such that w = c1v1 + · · · + c nvn. What we don’t yet know is that these c1, . . . c n are unique. In order to show that these are unique, we will suppose that they are not, and show that this causes a contradiction. So suppose there exists a second set of constants d i such that w = d 1v1 + · · · + dnvn . For this to be a contradiction we need to have ci ̸= d i for some i. Then look what happens when we take the difference of these two versions of w: 0V = w − w = (c1v1 + · · · + c nvn) − (d1v1 + · · · + d nvn) = (c1 − d 1)v1 + · · · + (c n − dn)vn. Since the vi’s are linearly independent this implies that ci − d i = 0 for all i, this means that we cannot have c i ̸= d i, which is a contradiction. Worked Example In this video we will work through an example of how to extend a set of linearly independent vectors to a basis. For fun, we will take the vector space V = {(x, y, z, w)|x, y, z, w ∈ Z 5} . This is like four dimensional space R4 except that the numbers can only be {0, 1, 2, 3, 4}. This is like bits, but now the rule is 0 = 5 . 407 408 Movie Scripts Thus, for example, 1 4 = 4 because 4 = 16 = 1 + 3 × 5 = 1. Don’t get too caught up on this aspect, its a choice of base field designed to make computations go quicker! Now, here’s the problem we will solve: Find a basis for V that includes the vectors     1 2 3 4     and     0 3 2 1    . The way to proceed is to add a known (and preferably simple) basis to the vectors given, thus we consider v1 =     1 2 3 4     , v2 =     0 3 2 1     , e1 =     1 0 0 0     , e2 =     0 1 0 0     , e3 =     0 0 1 0     , e4 =     0 0 0 1     . The last four vectors are clearly a basis (make sure you understand this....) and are called the canonical basis. We want to keep v1 and v2 but find a way to turf out two of the vectors in the canonical basis leaving us a basis of four vectors. To do that, we have to study linear independence, or in other words a linear system problem defined by 0 = α1e1 + α2e2 + α3v1 + α4v2 + α5e3 + α6e4 . We want to find solutions for the α′s which allow us to determine two of the e′s. For that we use an augmented matrix     1 0 1 0 0 0 0 2 3 0 1 0 0 0 3 2 0 0 1 0 0 4 1 0 0 0 1 0     . Next comes a bunch of row operations. Note that we have dropped the last column of zeros since it has no information--you can fill in the row operations used above the ∼’s as an exercise:     1 0 1 0 0 0 2 3 0 1 0 0 3 2 0 0 1 0 4 1 0 0 0 1     ∼     1 0 1 0 0 0 0 3 3 1 0 0 0 2 2 0 1 0 0 1 1 0 0 1     ∼     1 0 1 0 0 0 0 1 1 2 0 0 0 2 2 0 1 0 0 1 1 0 0 1     ∼     1 0 1 0 0 0 0 1 1 2 0 0 0 0 0 1 1 0 0 0 0 3 0 1     408 G.11 Eigenvalues and Eigenvectors 409 ∼     1 0 1 0 0 0 0 1 1 0 3 0 0 0 0 1 1 0 0 0 0 0 2 1     ∼     1 0 1 0 0 0 0 1 1 0 3 0 0 0 0 1 1 0 0 0 0 0 1 3     ∼     1 0 1 0 0 0 0 1 1 0 0 1 0 0 0 1 0 2 0 0 0 0 1 3     The pivots are underlined. The columns corresponding to non-pivot variables are the ones that can be eliminated--their coefficients (the α’s) will be arbitrary, so set them all to zero save for the one next to the vector you are solving for which can be taken to be unity. Thus that vector can certainly be expressed in terms of previous ones. Hence, altogether, our basis is        1 2 3 4     ,     0 3 2 1     ,     0 1 0 0     ,     0 0 1 0        . Finally, as a check, note that e1 = v1 + v2 which explains why we had to throw it away. Hint for Review Problem 2 Since there are two possible values for each entry, we have |Bn| = 2 n. We note that dim Bn = n as well. Explicitly we have B1 = {(0), (1)} so there is only 1 basis for B1. Similarly we have B2 = {(0 0 ) , (1 0 ) , ( 0 1 ) , ( 1 1 )} and so choosing any two non-zero vectors will form a basis. Now in general we note that we can build up a basis {ei} by arbitrarily (independently) choosing the first i − 1 entries, then setting the i-th entry to 1 and all higher entries to 0. G.11 Eigenvalues and Eigenvectors 2 × 2 Example Here is an example of how to find the eigenvalues and eigenvectors of a 2 × 2 matrix. M = (4 2 1 3 ) . 409 410 Movie Scripts Remember that an eigenvector v with eigenvalue λ for M will be a vector such that M v = λv i.e. M (v) − λI(v) = ⃗0. When we are talking about a nonzero v then this means that det(M − λI) = 0. We will start by finding the eigenvalues that make this statement true. First we compute det(M − λI) = det ((4 2 1 3 ) − ( λ 0 0 λ )) = det (4 − λ 2 1 3 − λ ) so det(M − λI) = (4 − λ)(3 − λ) − 2 · 1. We set this equal to zero to find values of λ that make this true: (4 − λ)(3 − λ) − 2 · 1 = 10 − 7λ + λ 2 = (2 − λ)(5 − λ) = 0 . This means that λ = 2 and λ = 5 are solutions. Now if we want to find the eigenvectors that correspond to these values we look at vectors v such that (4 − λ 2 1 3 − λ ) v = ⃗0 . For λ = 5 (4 − 5 2 1 3 − 5 ) ( x y ) = ( −1 2 1 −2 ) ( x y ) = ⃗0 . This gives us the equalities −x + 2y = 0 and x − 2y = 0 which both give the line y = 1 2 x. Any point on this line, so for example (2 1 ), is an eigenvector with eigenvalue λ = 5. Now lets find the eigenvector for λ = 2 (4 − 2 2 1 3 − 2 ) ( x y ) = (2 2 1 1 ) ( x y ) = ⃗0, which gives the equalities 2x + 2y = 0 and x + y = 0. (Notice that these equa- tions are not independent of one another, so our eigenvalue must be correct.) This means any vector v = (x y ) where y = −x , such as ( 1 −1 ) , or any scalar multiple of this vector , i.e. any vector on the line y = −x is an eigenvector with eigenvalue 2. This solution could be written neatly as λ1 = 5, v1 = (2 1 ) and λ2 = 2, v2 = ( 1 −1 ) . Jordan Block Example Consider the matrix J2 = (λ 1 0 λ ) , 410 G.11 Eigenvalues and Eigenvectors 411 and we note that we can just read off the eigenvector e1 with eigenvalue λ. However the characteristic polynomial of J2 is PJ2 (µ) = (µ − λ)2 so the only possible eigenvalue is λ, but we claim it does not have a second eigenvector v. To see this, we require that λv1 + v2 = λv1 λv2 = λv2 which clearly implies that v2 = 0. This is known as a Jordan 2-cell, and in general, a Jordan n-cell with eigenvalue λ is (similar to) the n × n matrix Jn =         λ 1 0 · · · 0 0 λ 1 . . . 0 ... . . . . . . . . . ... 0 · · · 0 λ 1 0 · · · 0 0 λ         which has a single eigenvector e1. Now consider the following matrix M =  3 1 0 0 3 1 0 0 2   and we see that PM (λ) = (λ − 3)2(λ − 2). Therefore for λ = 3 we need to find the solutions to (M − 3I3)v = 0 or in equation form: v2 = 0 v3 = 0 −v3 = 0, and we immediately see that we must have V = e1. Next for λ = 2, we need to solve (M − 2I3)v = 0 or v1 + v2 = 0 v2 + v3 = 0 0 = 0, and thus we choose v1 = 1, which implies v2 = −1 and v3 = 1. Hence this is the only other eigenvector for M . This is a specific case of Problem 13.7. Eigenvalues Eigenvalues and eigenvectors are extremely important. In this video we review the theory of eigenvalues. Consider a linear transformation L : V −→ V 411 412 Movie Scripts where dim V = n < ∞. Since V is finite dimensional, we can represent L by a square matrix M by choosing a basis for V . So the eigenvalue equation Lv = λv becomes M v = λv, where v is a column vector and M is an n×n matrix (both expressed in whatever basis we chose for V ). The scalar λ is called an eigenvalue of M and the job of this video is to show you how to find all the eigenvalues of M . The first step is to put all terms on the left hand side of the equation, this gives (M − λI)v = 0 . Notice how we used the identity matrix I in order to get a matrix times v equaling zero. Now here comes a VERY important fact N u = 0 and u ̸= 0 ⇐⇒ det N = 0. I.e., a square matrix can have an eigenvector with vanishing eigenvalue if and only if its determinant vanishes! Hence det(M − λI) = 0. The quantity on the left (up to a possible minus sign) equals the so-called characteristic polynomial PM (λ) := det(λI − M ) . It is a polynomial of degree n in the variable λ. To see why, try a simple 2 × 2 example det ((a b c d ) − (λ 0 0 λ )) = det (a − λ b c d − λ ) = (a − λ)(d − λ) − bc , which is clearly a polynomial of order 2 in λ. For the n × n case, the order n term comes from the product of diagonal matrix elements also. There is an amazing fact about polynomials called the fundamental theorem of algebra: they can always be factored over complex numbers. This means that 412 G.11 Eigenvalues and Eigenvectors 413 degree n polynomials have n complex roots (counted with multiplicity). The word can does not mean that explicit formulas for this are known (in fact explicit formulas can only be give for degree four or less). The necessity for complex numbers is easily seems from a polynomial like z2 + 1 whose roots would require us to solve z2 = −1 which is impossible for real number z. However, introducing the imaginary unit i with i2 = −1 , we have z2 + 1 = (z − i)(z + i) . Returning to our characteristic polynomial, we call on the fundamental theorem of algebra to write PM (λ) = (λ − λ1)(λ − λ2) · · · (λ − λn) . The roots λ1, λ2,...,λn are the eigenvalues of M (or its underlying linear transformation L). Eigenspaces Consider the linear map L =  −4 6 6 0 2 0 −3 3 5   . Direct computation will show that we have L = Q  −1 0 0 0 2 0 0 0 2   Q −1 where Q =   2 1 1 0 0 1 1 1 0   . Therefore the vectors v(2) 1 =   1 0 1   v(2) 2 =   1 1 0   span the eigenspace E(2) of the eigenvalue 2, and for an explicit example, if we take v = 2v(2) 1 − v(2) 2 =   1 −1 2   413 414 Movie Scripts we have Lv =   2 −2 4   = 2v so v ∈ E(2). In general, we note the linearly independent vectors v(λ) i with the same eigenvalue λ span an eigenspace since for any v = ∑ i civ(λ) i , we have Lv = ∑ i ciLv(λ) i = ∑ i c iλv(λ) i = λ ∑ i c iv(λ) i = λv. Hint for Review Problem 9 We are looking at the matrix M , and a sequence of vectors starting with v(0) = ( x(0) y(0) ) and defined recursively so that v(1) = (x(1) y(1) ) = M ( x(0) y(0) ) . We first examine the eigenvectors and eigenvalues of M = (3 2 2 3 ) . We can find the eigenvalues and vectors by solving det(M − λI) = 0 for λ. det (3 − λ 2 2 3 − λ ) = 0 By computing the determinant and solving for λ we can find the eigenvalues λ = 1 and 5, and the corresponding eigenvectors. You should do the computations to find these for yourself. When we think about the question in part (b) which asks to find a vector v(0) such that v(0) = v(1) = v(2) . . ., we must look for a vector that satisfies v = M v. What eigenvalue does this correspond to? If you found a v(0) with this property would cv(0) for a scalar c also work? Remember that eigenvectors have to be nonzero, so what if c = 0? For part (c) if we tried an eigenvector would we have restrictions on what the eigenvalue should be? Think about what it means to be pointed in the same direction. 414 G.12 Diagonalization 415 G.12 Diagonalization Non Diagonalizable Example First recall that the derivative operator is linear and that we can write it as the matrix d dx =      0 1 0 0 · · · 0 0 2 0 · · · 0 0 0 3 · · · ... ... ... ... . . .      . We note that this transforms into an infinite Jordan cell with eigenvalue 0 or      0 1 0 0 · · · 0 0 1 0 · · · 0 0 0 1 · · · ... ... ... ... . . .      which is in the basis {n−1xn}n (where for n = 0, we just have 1). Therefore we note that 1 (constant polynomials) is the only eigenvector with eigenvalue 0 for polynomials since they have finite degree, and so the derivative is not diagonalizable. Note that we are ignoring infinite cases for simplicity, but if you want to consider infinite terms such as convergent series or all formal power series where there is no conditions on convergence, there are many eigenvectors. Can you find some? This is an example of how things can change in infinite dimensional spaces. For a more finite example, consider the space P C 3 of complex polynomials of degree at most 3, and recall that the derivative D can be written as D =     0 1 0 0 0 0 2 0 0 0 0 3 0 0 0 0     . You can easily check that the only eigenvector is 1 with eigenvalue 0 since D always lowers the degree of a polynomial by 1 each time it is applied. Note that this is a nilpotent matrix since D4 = 0, but the only nilpotent matrix that is ‘‘diagonalizable’’ is the 0 matrix. Change of Basis Example This video returns to the example of a barrel filled with fruit 415 416 Movie Scripts as a demonstration of changing basis. Since this was a linear systems problem, we can try to represent what’s in the barrel using a vector space. The first representation was the one where (x, y) = (apples, oranges): Apples Oranges (x, y) Calling the basis vectors ⃗e1 := (1, 0) and ⃗e2 := (0, 1), this representation would label what’s in the barrel by a vector ⃗x := x⃗e1 + y⃗e2 = ( ⃗e1 ⃗e2) ( x y ) . Since this is the method ordinary people would use, we will call this the ‘‘engineer’s’’ method! But this is not the approach nutritionists would use. They would note the amount of sugar and total number of fruit (s, f ): 416 G.12 Diagonalization 417 sugar fruit (s, f ) WARNING: To make sense of what comes next you need to allow for the possibity of a negative amount of fruit or sugar. This would be just like a bank, where if money is owed to somebody else, we can use a minus sign. The vector ⃗x says what is in the barrel and does not depend which mathe- matical description is employed. The way nutritionists label ⃗x is in terms of a pair of basis vectors ⃗f1 and ⃗f2: ⃗x = s ⃗f1 + f ⃗f2 = ( ⃗f1 ⃗f2) ( s f ) . Thus our vector space now has a bunch of interesting vectors: The vector ⃗x labels generally the contents of the barrel. The vector ⃗e1 corre- sponds to one apple and one orange. The vector ⃗e2 is one orange and no apples. The vector ⃗f1 means one unit of sugar and zero total fruit (to achieve this you could lend out some apples and keep a few oranges). Finally the vector ⃗f2 represents a total of one piece of fruit and no sugar. You might remember that the amount of sugar in an apple is called λ while oranges have twice as much sugar as apples. Thus { s = λ (x + 2y) f = x + y . 417 418 Movie Scripts Essentially, this is already our change of basis formula, but lets play around and put it in our notations. First we can write this as a matrix ( s f ) = (λ 2λ 1 1 ) ( x y ) . We can easily invert this to get (x y ) = ( − 1 λ 2 1 λ −1 ) ( s f ) . Putting this in the engineer’s formula for ⃗x gives ⃗x = ( ⃗e1 ⃗e2) (− 1 λ 2 1 λ −1 ) ( s f ) = (− 1 λ ( ⃗e1 − ⃗e2) 2⃗e1 − 2⃗e2) ( s f ) . Comparing to the nutritionist’s formula for the same object ⃗x we learn that ⃗f1 = − 1 λ ( ⃗e1 − ⃗e2) and ⃗f2 = 2⃗e1 − 2⃗e2 . Rearranging these equation we find the change of base matrix P from the engi- neer’s basis to the nutritionist’s basis: ( ⃗f1 ⃗f2) = ( ⃗e1 ⃗e2) ( − 1 λ 2 1 λ −1 ) =: ( ⃗e1 ⃗e2) P . We can also go the other direction, changing from the nutritionist’s basis to the engineer’s basis ( ⃗e1 ⃗e2) = ( ⃗f1 ⃗f2) ( λ 2λ 1 1 ) =: ( ⃗f1 ⃗f2) Q . Of course, we must have Q = P −1 , (which is in fact how we constructed P in the first place). Finally, lets consider the very first linear systems problem, where you were given that there were 27 pieces of fruit in total and twice as many oranges as apples. In equations this says just x + y = 27 and 2x − y = 0 . But we can also write this as a matrix system M X = V where M := (1 1 2 −1 ) , X := ( x y ) V := ( 0 27 ) . 418 G.12 Diagonalization 419 Note that ⃗x = ( ⃗e1 ⃗e2) X . Also lets call ⃗v := ( ⃗e1 ⃗e2) V . Now the matrix M is the matrix of some linear transformation L in the basis of the engineers. Lets convert it to the basis of the nutritionists: L⃗x = L ( ⃗f1 ⃗f2) ( s f ) = L ( ⃗e1 ⃗e2) P ( s f ) = ( ⃗e1 ⃗e2 ) M P ( s f ) . Note here that the linear transformation on acts on vectors -- these are the objects we have written with a⃗ sign on top of them. It does not act on columns of numbers! We can easily compute M P and find M P = (1 1 2 −1 ) ( − 1 λ 2 1 λ −1 ) = ( 0 1 − 3 λ 5 ) . Note that P −1M P is the matrix of L in the nutritionists basis, but we don’t need this quantity right now. Thus the last task is to solve the system, lets solve for sugar and fruit. We need to solve M P ( s f ) = ( 0 1 − 3 λ 5 ) ( s f ) = ( 27 0 ) . This is solved immediately by forward substitution (the nutritionists basis is nice since it directly gives f ): f = 27 and s = 45λ . 2 × 2 Example Lets diagonalize the matrix M from a previous example Eigenvalues and Eigenvectors: 2 × 2 Example M = (4 2 1 3 ) We found the eigenvalues and eigenvectors of M , our solution was λ1 = 5, v1 = (2 1 ) and λ2 = 2, v2 = ( 1 −1 ) . 419 420 Movie Scripts So we can diagonalize this matrix using the formula D = P −1M P where P = (v1, v2). This means P = (2 1 1 −1 ) and P −1 = − 1 3 (−1 −1 −1 2 ) The inverse comes from the formula for inverses of 2 × 2 matrices: (a b c d )−1 = 1 ad − bc ( d −b −c a ) , so long as ad − bc ̸= 0. So we get: D = − 1 3 (−1 −1 −1 2 ) ( 4 2 1 3 ) ( 2 1 1 −1 ) = ( 5 0 0 2 ) But this does not really give any intuition into why this happens. Let look at what happens when we apply this matrix D = P −1M P to a vector v = (x y ). Notice that applying P translates v = ( x y ) into xv1 + yv2. P −1M P (x y ) = P −1M (2x + y x − y ) = P −1M [(2x x ) + ( y −y )] = P −1 [ x M (2 1 ) + y M ( 1 −1 )] = P −1 [x M v1 + y M v2] Remember that we know what M does to v1 and v2, so we get P −1[x M v1 + y M v2] = P −1[xλ1 v1 + yλ2 v2] = 5x P −1v1 + 2y P −1v2 = 5x (1 0 ) + 2y ( 0 1 ) = (5x 2y ) Notice that multiplying by P −1 converts v1 and v2 back in to (1 0 ) and ( 0 1 ) respectively. This shows us why D = P −1M P should be the diagonal matrix: D = (λ1 0 0 λ2 ) = (5 0 0 2 ) 420 G.13 Orthonormal Bases and Complements 421 G.13 Orthonormal Bases and Complements All Orthonormal Bases for R2 We wish to find all orthonormal bases for the space R2, and they are {eθ 1, e θ 2} up to reordering where eθ 1 = ( cos θ sin θ ) , eθ 2 = ( − sin θ cos θ ) , for some θ ∈ [0, 2π). Now first we need to show that for a fixed θ that the pair is orthogonal: e θ 1 eθ 2 = − sin θ cos θ + cos θ sin θ = 0. Also we have ∥eθ 1∥ 2 = ∥eθ 2∥2 = sin 2 θ + cos2 θ = 1, and hence {eθ 1, e θ 2} is an orthonormal basis. To show that every orthonormal basis of R2 is {eθ 1, e θ 2} for some θ, consider an orthonormal basis {b1, b2} and note that b1 forms an angle φ with the vector e1 (which is e0 1). Thus b1 = eφ 1 and if b2 = eφ 2 , we are done, otherwise b2 = −eφ 2 and it is the reflected version. However we can do the same thing except starting with b2 and get b2 = eψ 1 and b1 = eψ 2 since we have just interchanged two basis vectors which corresponds to a reflection which picks up a minus sign as in the determinant. cos θ sin θ θ cos θ -sin θ 421 422 Movie Scripts A 4 × 4 Gram Schmidt Example Lets do an example of how to \"Gram-Schmidt\" some vectors in R4. Given the following vectors v1 =     o 1 0 0     , v2 =     0 1 1 0     , v3 =     3 0 1 0     , and v4 =     1 1 0 2     , we start with v1 v⊥ 1 = v1 =     0 1 0 0     . Now the work begins v⊥ 2 = v2 − (v⊥ 1 · v2) ∥v⊥ 1 ∥2 v⊥ 1 =     0 1 1 0     − 1 1     0 1 0 0     =     0 0 1 0     This gets a little longer with every step. v⊥ 3 = v3 − (v⊥ 1 · v3) ∥v⊥ 1 ∥2 v⊥ 1 − (v⊥ 2 · v3) ∥v⊥ 2 ∥2 v⊥ 2 =     3 0 1 0     − 0 1     0 1 0 0     − 1 1     0 0 1 0     =     3 0 0 0     This last step requires subtracting off the term of the form u·v u·u u for each of the previously defined basis vectors. 422 G.13 Orthonormal Bases and Complements 423 v⊥ 4 = v4 − (v⊥ 1 · v4) ∥v⊥ 1 ∥2 v⊥ 1 − (v⊥ 2 · v4) ∥v⊥ 2 ∥2 v⊥ 2 − (v⊥ 3 · v4) ∥v⊥ 3 ∥2 v⊥ 3 =     1 1 0 2     − 1 1     0 1 0 0     − 0 1     0 0 1 0     − 3 9     3 0 0 0     =     0 0 0 2     Now v⊥ 1 , v⊥ 2 , v⊥ 3 , and v⊥ 4 are an orthogonal basis. Notice that even with very, very nice looking vectors we end up having to do quite a bit of arithmetic. This a good reason to use programs like matlab to check your work. Another QR Decomposition Example We can alternatively think of the QR decomposition as performing the Gram- Schmidt procedure on the column space, the vector space of the column vectors of the matrix, of the matrix M . The resulting orthonormal basis will be stored in Q and the negative of the coefficients will be recorded in R. Note that R is upper triangular by how Gram-Schmidt works. Here we will explicitly do an example with the matrix M =  m1 m2 m3   =   1 1 −1 0 1 2 −1 1 1   . First we normalize m1 to get m′ 1 = m1 ∥m1∥ where ∥m1∥ = r1 1 = √2 which gives the decomposition Q1 =   1√2 1 −1 0 1 2 − 1√2 1 1   , R1 =   √2 0 0 0 1 0 0 0 1   . Next we find t2 = m2 − (m ′ 1 m2)m′ 1 = m2 − r1 2m ′ 1 = m2 − 0m′ 1 noting that m ′ 1 m ′ 1 = ∥m′ 1∥ 2 = 1 and ∥t2∥ = r2 2 = √3, and so we get m′ 2 = t2 ∥t2∥ with the decomposition Q2 =    1√2 1√3 −1 0 1√3 2 − 1√2 1√3 1    , R2 =   √2 0 0 0 √3 0 0 0 1   . 423 424 Movie Scripts Finally we calculate t3 = m3 − (m′ 1 m3)m ′ 1 − (m ′ 2 m3)m ′ 2 = m3 − r1 3m ′ 1 − r2 3m ′ 2 = m3 + √2m ′ 1 − 2 √3 m′ 2, again noting m′ 2 m ′ 2 = ∥m′ 2∥ = 1, and let m ′ 3 = t3 ∥t3∥ where ∥t3∥ = r3 3 = 2 √ 2 3 . Thus we get our final M = QR decomposition as Q =    1√2 1√3 − 1√2 0 1√3 √ 2 3 − 1√2 1 3 − 1√6    , R =    √2 0 −√2 0 √3 2√3 0 0 2√ 2 3    . Overview This video depicts the ideas of a subspace sum, a direct sum and an orthogonal complement in R3. Firstly, lets start with the subspace sum. Remember that even if U and V are subspaces, their union U ∪ V is usually not a subspace. However, the span of their union certainly is and is called the subspace sum U + V = span(U ∪ V ) . You need to be aware that this is a sum of vector spaces (not vectors). A picture of this is a pair of planes in R3: Here U + V = R3. Next lets consider a direct sum. This is just the subspace sum for the case when U ∩ V = {0}. For that we can keep the plane U but must replace V by a line: 424 G.13 Orthonormal Bases and Complements 425 Taking a direct sum we again get the whole space, U ⊕ V = R3. Now we come to an orthogonal complement. There is not really a notion of subtraction for subspaces but the orthogonal complement comes close. Given U it provides a space U ⊥ such that the direct sum returns the whole space: U ⊕ U ⊥ = R3 . The orthogonal complement U ⊥ is the subspace made from all vectors perpen- dicular to any vector in U . Here, we need to just tilt the line V above until it hits U at a right angle: Notice, we can apply the same operation to U ⊥ and just get U back again, i.e. (U ⊥)⊥ = U . Hint for Review Question 2 You are asked to consider an orthogonal basis {v1, v2, . . . vn}. Because this is a basis any v ∈ V can be uniquely expressed as v = c 1v1 + c2v2 + · · · + vncn , and the number n = dim V . Since this is an orthogonal basis vi vj = 0 , i ̸= j . So different vectors in the basis are orthogonal: 425 426 Movie Scripts However, the basis is not orthonormal so we know nothing about the lengths of the basis vectors (save that they cannot vanish). To complete the hint, lets use the dot product to compute a formula for c 1 in terms of the basis vectors and v. Consider v1 v = c1v1 v1 + c2v1 v2 + · · · + cnv1 vn = c1v1 v1 . Solving for c1 (remembering that v1 v1 ̸= 0) gives c1 = v1 v v1 v1 . This should get you started on this problem. Hint for Review Problem 3 Lets work part by part: (a) Is the vector v⊥ = v − u·v u·u u in the plane P ? Remember that the dot product gives you a scalar not a vector, so if you think about this formula u·v u·u is a scalar, so this is a linear combination of v and u. Do you think it is in the span? (b) What is the angle between v⊥ and u? This part will make more sense if you think back to the dot product for- mulas you probably first saw in multivariable calculus. Remember that u · v = ∥u∥∥v∥ cos(θ), and in particular if they are perpendicular θ = π 2 and cos( π 2 ) = 0 you will get u · v = 0. Now try to compute the dot product of u and v⊥ to find ∥u∥∥v⊥∥ cos(θ) u · v⊥ = u · (v − u · v u · u u ) = u · v − u · ( u · v u · u ) u = u · v − ( u · v u · u ) u · u Now you finish simplifying and see if you can figure out what θ has to be. (c) Given your solution to the above, how can you find a third vector perpen- dicular to both u and v⊥? Remember what other things you learned in multivariable calculus? This might be a good time to remind your self what the cross product does. 426 G.13 Orthonormal Bases and Complements 427 (d) Construct an orthonormal basis for R3 from u and v. If you did part (c) you can probably find 3 orthogonal vectors to make a orthogonal basis. All you need to do to turn this into an orthonormal basis is make these into unit vectors. (e) Test your abstract formulae starting with u = (1 2 0 ) and v = (0 1 1) . Try it out, and if you get stuck try drawing a sketch of the vectors you have. Hint for Review Problem 10 This video shows you a way to solve problem 10 that’s different to the method described in the Lecture. The first thing is to think of M =   1 0 2 −1 2 0 −1 2 2   as a set of 3 vectors v1 =   0 −1 −1   , v2 =   0 2 −2   , v3 =  2 0 2   . Then you need to remember that we are searching for a decomposition M = QR where Q is an orthogonal matrix. Thus the upper triangular matrix R = Q T M and Q T Q = I. Moreover, orthogonal matrices perform rotations. To see this compare the inner product u v = u T v of vectors u and v with that of Qu and Qv: (Qu) (Qv) = (Qu)T (Qv) = u T Q T Qv = u T v = u v . Since the dot product doesn’t change, we learn that Q does not change angles or lengths of vectors. Now, here’s an interesting procedure: rotate v1, v2 and v3 such that v1 is along the x-axis, v2 is in the xy-plane. Then if you put these in a matrix you get something of the form  a b c 0 d e 0 0 f   which is exactly what we want for R! 427 428 Movie Scripts Moreover, the vector  a 0 0   is the rotated v1 so must have length ||v1|| = √3. Thus a = √3. The rotated v2 is  b d 0   and must have length ||v2|| = 2 √2. Also the dot product between  a 0 0   and  b d 0   is ab and must equal v1 v2 = 0. (That v1 and v2 were orthogonal is just a coincidence here... .) Thus b = 0. So now we know most of the matrix R R =   √3 0 c 0 2 √2 e 0 0 f   . You can work out the last column using the same ideas. Thus it only remains to compute Q from Q = M R−1 . G.14 Diagonalizing Symmetric Matrices 3 × 3 Example Lets diagonalize the matrix M =   1 2 0 2 1 0 0 0 5   If we want to diagonalize this matrix, we should be happy to see that it is symmetric, since this means we will have real eigenvalues, which means factoring won’t be too hard. As an added bonus if we have three distinct eigenvalues the eigenvectors we find will automatically be orthogonal, which means that the inverse of the matrix P will be easy to compute. We can start 428 G.14 Diagonalizing Symmetric Matrices 429 by finding the eigenvalues of this det   1 − λ 2 0 2 1 − λ 0 0 0 5 − λ   = (1 − λ) ∣ ∣ ∣ ∣1 − λ 0 0 5 − λ ∣ ∣ ∣ ∣ − (2) ∣ ∣ ∣ ∣2 0 0 5 − λ ∣ ∣ ∣ ∣ + 0 ∣ ∣ ∣ ∣2 1 − λ 0 0 ∣ ∣ ∣ ∣ = (1 − λ)(1 − λ)(5 − λ) + (−2)(2)(5 − λ) + 0 = (1 − 2λ + λ2)(5 − λ) + (−2)(2)(5 − λ) = ((1 − 4) − 2λ + λ2)(5 − λ) = (−3 − 2λ + λ2)(5 − λ) = (1 + λ)(3 − λ)(5 − λ) So we get λ = −1, 3, 5 as eigenvectors. First find v1 for λ1 = −1 (M + I)   x y z   =   2 2 0 2 2 0 0 0 6    x y z   =  0 0 0   , implies that 2x + 2y = 0 and 6z = 0,which means any multiple of v1 =   1 −1 0   is an eigenvector with eigenvalue λ1 = −1. Now for v2 with λ2 = 3 (M − 3I)   x y z   =   −2 2 0 2 −2 0 0 0 4     x y z   =   0 0 0   , and we can find that that v2 =  1 1 0   would satisfy −2x + 2y = 0, 2x − 2y = 0 and 4z = 0. Now for v3 with λ3 = 5 (M − 5I)   x y z   =   −4 2 0 2 −4 0 0 0 0     x y z   =   0 0 0   , Now we want v3 to satisfy −4x + 2y = 0 and 2x − 4y = 0, which imply x = y = 0, but since there are no restrictions on the z coordinate we have v3 =   0 0 1  . Notice that the eigenvectors form an orthogonal basis. We can create an orthonormal basis by rescaling to make them unit vectors. This will help us 429 430 Movie Scripts because if P = [v1, v2, v3] is created from orthonormal vectors then P −1 = P T , which means computing P −1 should be easy. So lets say v1 =   1√2 − 1√2 0   , v2 =   1√ 2 1√ 2 0   , and v3 =   0 0 1   so we get P =   1√2 1√2 0 − 1√2 1√2 0 0 0 1   and P −1 =   1√2 − 1√2 0 1√2 1√2 0 0 0 1   So when we compute D = P −1M P we’ll get   1√2 − 1√2 0 1√2 1√2 0 0 0 1     1 2 0 2 5 0 0 0 5     1√2 1√2 0 − 1√2 1√2 0 0 0 1   =   −1 0 0 0 3 0 0 0 5   Hint for Review Problem 1 For part (a), we can consider any complex number z as being a vector in R2 where complex conjugation corresponds to the matrix (1 0 0 −1 ). Can you describe z ¯z in terms of ∥z∥? For part (b), think about what values a ∈ R can take if a = −a? Part (c), just compute it and look back at part (a). For part (d), note that x†x is just a number, so we can divide by it. Parts (e) and (f) follow right from definitions. For part (g), first notice that every row vector is the (unique) transpose of a column vector, and also think about why (AAT ) T = AAT for any matrix A. Additionally you should see that xT = x† and mention this. Finally for part (h), show that x†M x x†x = ( x†M x x†x )T and reduce each side separately to get λ = λ. G.15 Kernel, Range, Nullity, Rank Invertibility Conditions Here I am going to discuss some of the conditions on the invertibility of a matrix stated in Theorem 16.3.1. Condition 1 states that X = M −1V uniquely, which is clearly equivalent to 4. Similarly, every square matrix M uniquely 430 G.15 Kernel, Range, Nullity, Rank 431 corresponds to a linear transformation L : Rn → Rn, so condition 3 is equiva- lent to condition 1. Condition 6 implies 4 by the adjoint construct the inverse, but the con- verse is not so obvious. For the converse (4 implying 6), we refer back the proofs in Chapter 18 and 19. Note that if det M = 0, there exists an eigen- value of M equal to 0, which implies M is not invertible. Thus condition 8 is equivalent to conditions 4, 5, 9, and 10. The map M is injective if it does not have a null space by definition, however eigenvectors with eigenvalue 0 form a basis for the null space. Hence conditions 8 and 14 are equivalent, and 14, 15, and 16 are equivalent by the Dimension Formula (also known as the Rank-Nullity Theorem). Now conditions 11, 12, and 13 are all equivalent by the definition of a basis. Finally if a matrix M is not row-equivalent to the identity matrix, then det M = 0, so conditions 2 and 8 are equivalent. Hint for Review Problem 2 Lets work through this problem. Let L : V → W be a linear transformation. Show that ker L = {0V } if and only if L is one-to-one: 1. First, suppose that ker L = {0V }. Show that L is one-to-one. Remember what one-one means, it means whenever L(x) = L(y) we can be certain that x = y. While this might seem like a weird thing to require this statement really means that each vector in the range gets mapped to a unique vector in the range. We know we have the one-one property, but we also don’t want to forget some of the more basic properties of linear transformations namely that they are linear, which means L(ax + by) = aL(x) + bL(y) for scalars a and b. What if we rephrase the one-one property to say whenever L(x) − L(y) = 0 implies that x − y = 0? Can we connect that to the statement that ker L = {0V }? Remember that if L(v) = 0 then v ∈ ker L = {0V }. 2. Now, suppose that L is one-to-one. Show that ker L = {0V }. That is, show that 0V is in ker L, and then show that there are no other vectors in ker L. What would happen if we had a nonzero kernel? If we had some vector v with L(v) = 0 and v ̸= 0, we could try to show that this would contradict the given that L is one-one. If we found x and y with L(x) = L(y), then we know x = y. But if L(v) = 0 then L(x) + L(v) = L(y). Does this cause a problem? 431 432 Movie Scripts G.16 Least Squares and Singular Values Least Squares: Hint for Review Problem 1 Lets work through this problem. Let L : U → V be a linear transformation. Suppose v ∈ L(U ) and you have found a vector ups that obeys L(ups) = v. Explain why you need to compute ker L to describe the solution space of the linear system L(u) = v. Remember the property of linearity that comes along with any linear trans- formation: L(ax + by) = aL(x) + bL(y) for scalars a and b. This allows us to break apart and recombine terms inside the transformation. Now suppose we have a solution x where L(x) = v. If we have an vector y ∈ ker L then we know L(y) = 0. If we add the equations together L(x) + L(y) = L(x + y) = v + 0 we get another solution for free. Now we have two solutions, is that all? Hint for Review Problem 2 For the first part, what is the transpose of a 1 × 1 matrix? For the other two parts, note that v v = vT v. Can you express this in terms of ∥v∥? Also you need the trivial kernel only for the last part and just think about the null space of M . It might help to substitute w = M x. 432 Index Action, 389 Angle between vectors, 90 Anti-symmetric matrix, 149 Back substitution, 160 Base ﬁeld, 107 Basis, 213 concept of, 195 example of, 209 basis, 117, 118 Bit matrices, 154 Bit Matrix, 155 Block matrix, 142 Calculus Superhero, 305 Canonical basis, see also Standard ba- sis, 408 Captain Conundrum, 97, 305 Cauchy–Schwarz inequality, 92 Change of basis, 242 Change of basis matrix, 243 Characteristic polynomial, 185, 232, 234 Closure, 197 additive, 101 multiplicative, 102 Codomain, 34, 289 Cofactor, 190 Column Space concept of, 23, 138 Column space, 295 Column vector, 134 of a vector, 126 Components of a vector, 127 Composition of functions, 26 Conic sections, 347 Conjugation, 247 Cramer’s rule, 192 Cross product, 31 Determinant, 172 2 × 2 matrix, 170 3 × 3 matrix, 170 Diagonal matrix, 138 Diagonalizable, 242 Diagonalization, 241 concept of, 230 Dimension, 213 433 434 INDEX concept of, 117 notion of, 195 Dimension formula, 295 Direct sum, 268 Domain, 34, 289 Dot product, 89 Dual vector space, 359 Dyad, 255 Eigenspace, 237 Eigenvalue, 230, 233 multiplicity of, 234 Eigenvector, 230, 233 Einstein, Albert, 68 Elementary matrix, 174 swapping rows, 175 Elite NASA engineers, 344 Equivalence relation, 250 EROs, 42 Euclidean length, 88 Even permutation, 171 Expansion by minors, 186 Fibonacci numbers, 364 Field, 317 Forward substitution, 160 free variables, 46 Fundamental theorem of algebra, 234 Fundamental Theorem of Linear Al- gebra, 299 Galois, 108 Gaussian elimination, 39 Golden ratio, 349 Gooﬁng up, 153 Gram–Schmidt orthogonalization pro- cedure, 264 Graph theory, 135 homogeneous equation, 67 Homogeneous solution an example, 67 Homomorphism, 111 Hyperplane, 65, 86 Identity matrix, 139 2 × 2, 41 Inner product, 91, 254 Invariant direction, 229 Inverse Matrix, 55 Invertible, 150 invertiblech3, 55 Involution, 134, 272 Jordan cell, 250, 411 Kernel, 292 Kindergarten, 90 Kirchoﬀ’s laws, 342 Kronecker delta, 254 Law of Cosines, 88 Least squares, 303 solutions, 304 Left singular vectors, 311 Length of a vector, 90 Linear combination, 20, 205, 237 Linear dependence theorem, 205 Linear independence concept of, 195 Linear Map, 111 Linear Operator, 111 linear programming, 71 Linear System concept of, 21 Linear Transformation, 111 concept of, 23 Linearly dependent, 204 434 INDEX 435 Linearly independent, 204 lower triangular, 58 Lower triangular matrix, 159 Lower unit triangular matrix, 162 LU decomposition, 159 Magnitude, see also Length of a vec- tor Matrix, 133 diagonal of, 138 entries of, 134 Matrix equation, 25 Matrix exponential, 144 Matrix multiplication, 25, 33 Matrix of a linear transformation, 218 Minimal spanning set, 209 Minor, 186 Multiplicative function, 186 Newton’s Principiæ, 346 Non-invertible, 150 Non-pivot variables, 46 Nonsingular, 150 Norm, see also Length of a vector Nullity, 295 Odd permutation, 171 Orthogonal, 90, 254 Orthogonal basis, 255 Orthogonal complement, 269 Orthogonal decomposition, 262 Orthogonal matrix, 260 Orthonormal basis, 255 Outer product, 254 Parallelepiped, 192 Particular solution an example, 67 Pauli Matrices, 126 Permutation, 170 Permutation matrices, 249 “Perp”, 270 Pivot variables, 46 Pre-image, 288 Projection, 239 QR decomposition, 265 Queen Quandary, 348 Random, 301 Rank, 295 column rank, 297 row rank, 297 Recursion relation, 349 Reduced row echelon form, 43 Right singular vector, 310 Row echelon form, 50 Row Space, 138 Row vector, 134 Scalar multiplication n-vectors, 84 Sign function, 171 Similar matrices, 247 singular, 150 Singular values, 284 Skew-symmetric matrix, see Anti-symmetric matrix Solution set, 65 set notation, 66 Span, 198 Square matrices, 143 Square matrix, 138 Standard basis, 217, 220 for R 2, 122 Subspace, 195 notion of, 195 Subspace theorem, 196 435 436 INDEX Sum of vectors spaces, 267 Symmetric matrix, 139, 277 Target, see Codomain Target Space, see also Codomain Trace, 145 Transpose, 139 of a column vector, 134 Triangle inequality, 93 Upper triangular matrix, 58, 159 Vandermonde determinant, 344 Vector addition n-vectors, 84 Vector space, 101 ﬁnite dimensional, 213 Wave equation, 226 Zero vector, 14 n-vectors, 84 436","libVersion":"0.5.0","langs":""}